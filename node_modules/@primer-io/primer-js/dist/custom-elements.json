{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "cdn/primer-components.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{detectedCardNetwork:null,selectableCardNetworks:[],isLoading:!0}"
        },
        {
          "kind": "variable",
          "name": "Re",
          "default": "class{constructor(t){this._methods=t}get(t){return this._methods.get(t)}toArray(){return Array.from(this._methods.values())}size(){return this._methods.size}}"
        },
        {
          "kind": "variable",
          "name": "F",
          "default": "class extends h{constructor(){super();this.customStyles=\"\";this.clientToken=\"\";this.options={};this._jsInitialized=!1;this.previousLoadingState=!0;this.hasAssignedContent=!1;this._loadingTimeoutId=null;this.locale=\"en-GB\";this.onSlotChange=e=>{let o=e.target.assignedNodes({flatten:!0});this.hasAssignedContent=o.length>0,this.requestUpdate()};this.sdkContextController=new Ee(this),this.sdkStateController=new xe(this),this.primerEventsController=new Nt(this),this.styleProcessingController=new _e(this),this.vaultManagerController=new Gt(this),this.cardNetworkController=new ge(this),this.achPaymentEventsController=new Ve(this),new De(this)}set jsInitialized(e){this.requestUpdate(),this._jsInitialized=e}get jsInitialized(){return this._jsInitialized}attributeChangedCallback(e,r,o){e===Ye.CUSTOM_STYLES?this.styleProcessingController.processCustomStyles(o):super.attributeChangedCallback(e,r,o)}disconnectedCallback(){this._loadingTimeoutId&&(window.clearTimeout(this._loadingTimeoutId),this._loadingTimeoutId=null),this.sdkStateController?.currentState.isLoading&&this.sdkStateController.forceCompleteLoading(),super.disconnectedCallback()}willUpdate(e){e.has(\"options\")&&(this.options?.locale&&(gr(this.options?.locale)?this.locale=yr(this.options?.locale):x.warn(\"\\u{1F30E}\\u2757 Unsupported locale provided:\",this.options?.locale,\"- Falling back to default locale `en-GB`\")),ur(this.locale||\"en-GB\"))}updated(){let e=getComputedStyle(this);this.sdkContextController.setComputedStyles(e),this.checkLoadingStateChange()}checkLoadingStateChange(){let e=this.sdkStateController?.currentState.isLoading||!1;this.previousLoadingState&&!e&&(this.jsInitialized=!0),this.previousLoadingState=e,e&&!this._loadingTimeoutId?this._loadingTimeoutId=window.setTimeout(()=>{this.sdkStateController?.currentState.isLoading&&(x.warn(\"Loading timeout in component, forcing completion\"),this.sdkStateController.forceCompleteLoading(),this.jsInitialized=!0),this._loadingTimeoutId=null},1e4):!e&&this._loadingTimeoutId&&(window.clearTimeout(this._loadingTimeoutId),this._loadingTimeoutId=null)}render(){let e=this.sdkStateController.currentState,r=e.isLoading,o=e.error,a=!r&&!o;return p` ${N(r,()=>m)} ${N(o,()=>p`<primer-checkout-error></primer-checkout-error>`)} ${N(a,()=>p` <slot name=\"main\" @slotchange=${this.onSlotChange}></slot> ${N(this.hasAssignedContent,()=>m,()=>p`<primer-main></primer-main>`)} `,()=>m)} `}addEventListener(e,r,o){super.addEventListener(e,r,o)}removeEventListener(e,r,o){super.removeEventListener(e,r,o)}}"
        },
        {
          "kind": "function",
          "name": "_i"
        },
        {
          "kind": "function",
          "name": "Si"
        },
        {
          "kind": "function",
          "name": "sa"
        },
        {
          "kind": "function",
          "name": "na"
        },
        {
          "kind": "variable",
          "name": "q",
          "default": "class extends h{constructor(){super(...arguments);this.color=\"var(--primer-color-loader)\";this.size=\"medium\";this.compact=!1}getSize(){if(this.size in Mr)return Mr[this.size];let e=parseInt(this.size,10);return isNaN(e)?Mr.medium:e}render(){let e=this.getSize(),r=20,o=`0 0 ${r} ${r}`;return this.style.setProperty(\"--spinner-color\",this.color),this.style.setProperty(\"--spinner-size\",`${e}px`),p` <div class=\"spinner-container ${this.compact?\"compact\":\"\"}\"> <svg class=\"spinner\" width=\"${e}\" height=\"${e}\" viewBox=\"${o}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" role=\"status\" aria-label=\"Loading\" > <path d=\"M4.27827 10.002C4.27827 6.84166 6.84019 4.27973 10.0005 4.27973C10.7676 4.27973 11.3894 3.6579 11.3894 2.89084C11.3894 2.12378 10.7676 1.50195 10.0005 1.50195C5.30607 1.50195 1.50049 5.30753 1.50049 10.002C1.50049 14.6964 5.30607 18.502 10.0005 18.502C14.6949 18.502 18.5005 14.6964 18.5005 10.002C18.5005 9.23489 17.8787 8.61306 17.1116 8.61306C16.3445 8.61306 15.7227 9.23489 15.7227 10.002C15.7227 13.1622 13.1608 15.7242 10.0005 15.7242C6.84019 15.7242 4.27827 13.1622 4.27827 10.002Z\" fill=\"currentColor\" class=\"path\" /> </svg> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "W",
          "default": "class extends h{constructor(){super(...arguments);this.focusWithin=!1;this.hasError=!1}handleWrapperClick(e){if(e.target!==e.currentTarget)return;let r=this.findSlottedPrimerInput();r?r.focus():this.dispatchEvent(new CustomEvent(\"wrapper-click\",{bubbles:!0,composed:!0}))}findSlottedPrimerInput(){if(!this.inputSlot)return null;let e=this.inputSlot.assignedElements({flatten:!0}),r=e.find(o=>o.tagName.toLowerCase()===\"primer-input\");if(r)return r;for(let o of e){let a=o.querySelector(\"primer-input\");if(a)return a}return null}render(){let e={\"input-slot\":!0,\"focus-within\":this.focusWithin};return p` <div class=\"input-wrapper\"> <slot name=\"label\"></slot> <div class=\"${R(e)}\" @click=\"${this.handleWrapperClick}\"> <slot name=\"input\"></slot> </div> <slot name=\"error\"></slot> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "Q",
          "default": "class extends h{constructor(){super(...arguments);this.for=\"\";this.disabled=!1}render(){return p`<label for=${this.for}><slot></slot></label>`}}"
        },
        {
          "kind": "variable",
          "name": "Y",
          "default": "class extends h{constructor(){super(...arguments);this.variant=\"primary\";this.disabled=!1;this.loading=!1;this.buttonType=\"button\";this.selectionState=\"default\";this.selectable=!1}handleClick(){!this.selectable||this.disabled||this.loading||(this.selectionState=this.selectionState===\"default\"?\"checked\":\"default\",this.dispatchEvent(new CustomEvent(\"selection-change\",{bubbles:!0,composed:!0,detail:{state:this.selectionState}})))}renderCheckmark(){return!this.selectable||this.selectionState!==\"checked\"||this.loading?m:p` <primer-icon name=\"checkmark\" size=\"sm\" color=\"var(--primer-color-icon-primary)\" ></primer-icon> `}renderSpinner(){if(!this.loading)return m;let e;return this.variant===\"primary\"?e=\"var(--primer-color-background-outlined-default)\":(this.variant===\"secondary\"||this.variant===\"tertiary\")&&(e=\"var(--primer-color-gray-900)\"),p` <primer-spinner size=\"small\" color=\"${e}\" compact ></primer-spinner> `}render(){return p` <button type=${this.buttonType} ?disabled=${this.disabled||this.loading} @click=${this.handleClick} part=\"button\" aria-checked=${this.selectionState===\"checked\"} aria-busy=${this.loading} > ${this.renderSpinner()} <span class=\"button-content ${this.loading?\"loading\":\"\"}\"> <slot></slot> </span> ${this.renderCheckmark()} </button> `}}"
        },
        {
          "kind": "variable",
          "name": "J",
          "default": "class extends h{constructor(){super(...arguments);this.for=\"\";this.active=!0}render(){return p` <span class=\"error\" role=\"alert\" aria-live=\"polite\" id=\"${this.for||\"\"}\" > <slot></slot> </span> `}}"
        },
        {
          "kind": "variable",
          "name": "Z",
          "default": "class extends h{constructor(){super(...arguments);this.color=\"var(--primer-color-icon-primary)\";this.size=\"lg\"}render(){let e=this.name?Ni[this.name]:null;return p` <div style=\"--internal-icon-color: ${this.color}\"> ${e||p`<slot></slot>`} </div> `}}"
        },
        {
          "kind": "variable",
          "name": "tt",
          "default": "class extends h{constructor(){super(...arguments);this.type=\"complete\"}render(){return this.type===\"complete\"?p` <!-- Successful view --> <primer-icon size=\"lg\" name=\"successful-check\" color=\"var(--primer-color-icon-positive)\" > </primer-icon> <p>Checkout complete!</p> <p class=\"secondary\"> You'll be redirected to the order confirmation page soon. </p> `:p` <primer-icon size=\"lg\" name=\"failure-icon\" color=\"var(--primer-color-icon-negative)\" > </primer-icon> <p>Payment failed</p> ${this.description?p`<p class=\"secondary\">${this.description}</p>`:p`<p class=\"secondary\">Something went wrong.</p>`} `}}"
        },
        {
          "kind": "variable",
          "name": "S",
          "default": "class extends h{constructor(){super(...arguments);this.value=\"\";this.placeholder=\"\";this.disabled=!1;this.name=\"\";this.type=\"text\";this.required=!1;this.readonly=!1;this.pattern=\"\";this.min=\"\";this.max=\"\";this.step=\"\";this.autocomplete=\"\";this.id=\"\";this.hasFocus=!1;this.hasError=!1}handleInput(e){e.stopPropagation();let r=e.target;this.value=r.value;let o=new CustomEvent(\"input\",{detail:this.value,bubbles:!0,composed:!0});this.dispatchEvent(o)}handleChange(e){e.stopPropagation();let r=e.target;this.value=r.value;let o=new CustomEvent(\"change\",{detail:this.value,bubbles:!0,composed:!0});this.dispatchEvent(o)}handleFocus(){this.hasFocus=!0,this.dispatchEvent(new FocusEvent(\"focus\",{bubbles:!0,composed:!0}))}handleBlur(){this.hasFocus=!1,this.dispatchEvent(new FocusEvent(\"blur\",{bubbles:!0,composed:!0}))}handleInvalid(e){e.stopPropagation(),this.hasError=!0,this.dispatchEvent(new Event(\"invalid\",{bubbles:!0,composed:!0}))}focus(e){this.inputElement?.focus(e)}blur(){this.inputElement?.blur()}select(){this.inputElement?.select()}setSelectionRange(e,r,o){this.inputElement?.setSelectionRange(e,r,o)}get validity(){return this.inputElement?.validity||{}}get validationMessage(){return this.inputElement?.validationMessage||\"\"}checkValidity(){return this.inputElement?.checkValidity()||!1}reportValidity(){return this.inputElement?.reportValidity()||!1}render(){let e={input:!0,\"input--focused\":this.hasFocus,\"input--disabled\":this.disabled,\"input--error\":this.hasError,\"input--readonly\":this.readonly},r=Object.entries(e).filter(([,o])=>o).map(([o])=>o).join(\" \");return p` <input part=\"input\" class=${r} .value=${this.value} .type=${this.type} ?disabled=${this.disabled} ?required=${this.required} ?readonly=${this.readonly} placeholder=${this.placeholder} pattern=${this.pattern} minlength=${this.minlength??\"\"} maxlength=${this.maxlength??\"\"} min=${this.min} max=${this.max} step=${this.step} autocomplete=${this.autocomplete} name=${this.name} id=${this.id} @input=${this.handleInput} @change=${this.handleChange} @focus=${this.handleFocus} @blur=${this.handleBlur} @invalid=${this.handleInvalid} /> `}addEventListener(e,r,o){super.addEventListener(e,r,o)}removeEventListener(e,r,o){super.removeEventListener(e,r,o)}}"
        },
        {
          "kind": "variable",
          "name": "O",
          "default": "class extends h{constructor(){super(...arguments);this.header=\"\";this.expanded=!1;this.expandText=\"Expand\";this.collapseText=\"Collapse\";this.ariaLabel=\"\";this.buttonVariant=\"primary\";this.isExpanded=!1}connectedCallback(){super.connectedCallback(),this.isExpanded=this.expanded}dispatchExpandedChangedEvent(e){this.dispatchEvent(new CustomEvent(\"expanded-changed\",{bubbles:!0,composed:!0,detail:{expanded:e}}))}toggleExpanded(){this.isExpanded=!this.isExpanded,this.dispatchExpandedChangedEvent(this.isExpanded)}expand(){this.isExpanded||(this.isExpanded=!0,this.dispatchExpandedChangedEvent(!0))}collapse(){this.isExpanded&&(this.isExpanded=!1,this.dispatchExpandedChangedEvent(!1))}render(){let e=this.isExpanded?this.collapseText:this.expandText,r=this.ariaLabel||this.header||e,o=this.header||e;return p` <div class=\"collapsable\"> <primer-button variant=${this.buttonVariant} buttonType=\"button\" @click=${this.toggleExpanded} aria-expanded=${this.isExpanded} aria-controls=\"collapsable-content\" aria-label=${r} > <span>${o}</span> </primer-button> <div class=\"collapsable-wrapper ${this.isExpanded?\"expanded\":\"\"}\" id=\"collapsable-content\" role=\"region\" aria-labelledby=\"collapsable-header\" > <div class=\"collapsable-content\"> <slot></slot> </div> </div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "B",
          "default": "class extends h{constructor(){super(...arguments);this.message=\"\";this.visible=!1;this.role=\"alert\";this.showMessage=!1}updated(e){e.has(\"visible\")&&this.handleVisibilityChange()}handleVisibilityChange(){this.visible?(this.showMessage=!0,this.setAttribute(\"aria-hidden\",\"false\")):setTimeout(()=>{this.showMessage=!1,this.setAttribute(\"aria-hidden\",\"true\")},200)}render(){if(!this.showMessage&&!this.visible)return m;let e={\"error-message\":!0,hidden:!this.visible};return p` <div part=\"error-message\" class=${R(e)} aria-live=\"assertive\" aria-atomic=\"true\" > <div part=\"error-icon\" class=\"error-icon\"> <primer-icon name=\"failure-icon\" size=\"sm\" color=\"var(--primer-color-icon-negative)\" ></primer-icon> </div> <div part=\"error-content\" class=\"error-content\">${this.message}</div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "dt",
          "default": "class extends h{constructor(){super(...arguments);this.id=\"d\"+Math.random().toString(36).substring(7)}getContainer(){let e=document.querySelector(`#${this.id}`);return e||(e=document.createElement(\"div\"),e.id=this.id,document.body.appendChild(e),this._setupEventListeners(e)),e}_setupEventListeners(e){[\"primer-ach-error\",\"primer-ach-bank-details-collected\",\"primer-ach-mandate-confirmed\",\"primer-ach-mandate-declined\"].forEach(r=>{e.addEventListener(r,o=>{o.stopPropagation(),this.dispatchEvent(new CustomEvent(r,{bubbles:!0,composed:!0,detail:o.detail}))})})}disconnectedCallback(){super.disconnectedCallback(),this.getContainer().remove()}_handleSlotChange(e){let o=e.target.assignedNodes();if(!o.length)return;let a=this.getContainer();o.forEach(s=>a.appendChild(s))}render(){return p`<slot @slotchange=${this._handleSlotChange}></slot>`}}"
        },
        {
          "kind": "variable",
          "name": "ft",
          "default": "class extends h{_handleCloseClick(){this.dispatchEvent(new CustomEvent(\"primer-dialog-close\",{bubbles:!0,composed:!0}))}render(){return p` <div class=${R({backdrop:!0})} @click=${t=>{t.preventDefault()}} > <div class=\"dialog\"> <div class=\"header\"> <primer-button variant=\"tertiary\" @click=${this._handleCloseClick}> <primer-icon name=\"close\"></primer-icon> </primer-button> </div> <div class=\"content\"> <slot></slot> </div> </div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "I",
          "default": "class extends h{constructor(){super(...arguments);this.paymentManagers=new Map;this.sdkState=null;this.headlessUtils=null;this.klarnaCategories=null;this.selectedCategory=null;this.isExpanded=!1;this.headerAriaLabel=A(\"pay_with\",{id:\"pay_with\"});this._paymentMethodManagerTask=new M(this,{task:async([e,r])=>{if(!e||!r)return E;let o=await r.getCDNAssets(\"KLARNA\");return{manager:e.manager,klarnaIcon:o?.assets?.icon?`${o.goatCdnUrl}/${o.assets.icon}`:\"\"}},args:()=>[this.paymentManagers.get(\"KLARNA\"),this.headlessUtils]})}toggleExpand(){this.isExpanded=!this.isExpanded,this.isExpanded||(this.selectedCategory=null)}async startKlarnaPayment(){if(!(!this._paymentMethodManagerTask.value||!this.selectedCategory))try{await this._paymentMethodManagerTask.value.manager.start({paymentMethodCategoryId:this.selectedCategory})}catch(e){x.error(\"Failed to start Klarna payment\",e)}}async renderSelectedCategory(){if(!(!this._paymentMethodManagerTask.value||!this.selectedCategory||!this.klarnaContainer))try{this.klarnaContainer.innerHTML=\"\",await this._paymentMethodManagerTask.value.manager.renderCategory({containerId:this.klarnaContainer,paymentMethodCategoryId:this.selectedCategory,onHeightChange:e=>{e>0&&(this.klarnaContainer.style.height=`${e}px`)}})}catch(e){x.error(\"Failed to render Klarna category\",e)}}selectCategory(e){this.selectedCategory=e,this.renderSelectedCategory()}updated(e){e.has(\"selectedCategory\")&&this.selectedCategory&&this.renderSelectedCategory()}renderCategorySelection(){let e=this.klarnaCategories?.categories||[];return this.klarnaCategories?.isLoading||!1?p`<div class=\"loading\"> <primer-spinner size=\"small\"></primer-spinner> </div>`:p` <div class=\"category-selection\"> ${e.map(o=>p` <button class=${R({\"category-button\":!0,selected:o.id===this.selectedCategory})} @click=${()=>{this.selectCategory(o.id)}} > ${o.name} </button> `)} </div> `}renderExpandedContent(){return p` ${this.renderCategorySelection()} ${this.selectedCategory?p` <div id=\"klarna-category-container\" class=\"klarna-category-container\" ></div> `:m} <button class=${R({\"klarna-pay-button\":!0,loading:!!this.sdkState?.isProcessing,disabled:!this.selectedCategory})} ?disabled=${!this.selectedCategory||this.sdkState?.isProcessing} @click=${()=>this.startKlarnaPayment()} > ${A(\"confirm\",{id:\"confirm\"})} </button> `}render(){return this._paymentMethodManagerTask.render({error:e=>{let r=e instanceof Error?e.message:\"Unknown error in Klarna\";return p`<div class=\"error\"> Error loading Klarna: ${r} </div>`},complete:({manager:e,klarnaIcon:r})=>e?p` <div class=\"klarna-container ${this.isExpanded?\"expanded\":\"\"}\"> <div class=\"klarna-button-header\"> <primer-button buttonType=\"button\" variant=\"secondary\" class=\"klarna-button\" @click=${this.toggleExpand} aria-expanded=${this.isExpanded} aria-controls=\"collapsable-content\" aria-label=${this.headerAriaLabel} > <img src=${r} alt=\"Klarna logo\" /> <span>${A(\"pay_with\",{id:\"pay_with\"})} Klarna</span> <span class=\"klarna-accordion-icon ${this.isExpanded?\"expanded\":\"\"}\" > ▼ </span> </primer-button> </div> <div class=\"klarna-expanded-content ${this.isExpanded?\"visible\":\"\"}\" > <div class=\"klarna-accordion-content\"> ${this.renderExpandedContent()} </div> </div> </div> `:m})}}"
        },
        {
          "kind": "variable",
          "name": "et",
          "default": "class extends h{constructor(){super(...arguments);this.type=void 0;this.paymentMethods=null}render(){if(!this.type)return m;let e=this.paymentMethods?.get(this.type);if(!e)return m;switch(e?.managerType){case\"CARD\":return p`<primer-card-form></primer-card-form>`;case\"NATIVE\":return p`<primer-native-payment .paymentMethod=${e} ></primer-native-payment>`;case\"REDIRECT\":return p`<primer-redirect-payment .paymentMethod=${e} ></primer-redirect-payment>`;case\"KLARNA\":return p`<primer-klarna></primer-klarna>`;case\"ACH\":return p` <primer-dynamic-payment .paymentMethod=${e} ></primer-dynamic-payment> `;default:return m}}}"
        },
        {
          "kind": "variable",
          "name": "H",
          "default": "class extends h{constructor(){super(...arguments);this.formController=new ze(this,e=>this._paymentMethodManagerTask.value.setAndValidate(e));this.paymentManagers=new Map;this.sdkState=void 0;this.clientOptions=void 0;this.screen=\"form\";this.isSubmitting=!1;this._paymentMethodManagerTask=new M(this,{task:async([e])=>e!==\"STRIPE_ACH\"?E:this.paymentManagers.get(e)?.manager,args:()=>[this.paymentMethod?.type]})}_handleInput(e,r){let o=e.target;this.formController.setFieldValue(r,o.value)}_handleBlur(e){this.formController.setFieldTouched(e)}_handleError(e){this.dispatchEvent(new CustomEvent(\"primer-ach-error\",{bubbles:!0,composed:!0,detail:{error:e instanceof Error?e:new Error(typeof e==\"string\"?e:\"Unknown error occurred\")}}))}async _handleSubmitButtonClick(e){if(!this.isSubmitting){this.isSubmitting=!0;try{let r=await e.start(this.formController.formData);if(!r||r.valid)return await this._handleCollectBankAccountDetails(e);r&&this.formController.setValidation(r,!0)}catch(r){this._handleError(r)}finally{this.isSubmitting=!1}}}async _handleCollectBankAccountDetails(e){try{await e.collectBankAccountDetails(),this.screen=\"mandate\",this.dispatchEvent(new CustomEvent(\"primer-ach-bank-details-collected\",{bubbles:!0,composed:!0}))}catch(r){this._handleError(r)}}async _handleConfirmMandate(){if(this._paymentMethodManagerTask.value){this.isSubmitting=!0;try{await this._paymentMethodManagerTask.value.confirmMandate(),this.dispatchEvent(new CustomEvent(\"primer-ach-mandate-confirmed\",{bubbles:!0,composed:!0}))}catch(e){this._handleError(e)}finally{this.isSubmitting=!1}}}async _handleDeclineMandate(){if(this._paymentMethodManagerTask.value){this.isSubmitting=!0;try{await this._paymentMethodManagerTask.value.declineMandate(),this.dispatchEvent(new CustomEvent(\"primer-ach-mandate-declined\",{bubbles:!0,composed:!0}))}catch(e){this._handleError(e)}finally{this.isSubmitting=!1}}}renderForm(e){return p` <h2> ${A(\"payWithAch\",{id:\"payWithAch\"})} </h2> <p> ${A(\"stripe_ach_user_details_collection_subtitle_label\",{id:\"stripe_ach_user_details_collection_subtitle_label\"})} </p> <form @submit=${r=>r.preventDefault()}> <div class=\"form-row\"> <primer-input-wrapper .hasError=${this.formController.hasError.firstName} > <primer-input-label slot=\"label\"> ${A(\"stripe_ach_user_details_collection_first_name_label\",{id:\"stripe_ach_user_details_collection_first_name_label\"})} </primer-input-label> <primer-input slot=\"input\" .value=${this.formController.formState.firstName.value} @input=${r=>this._handleInput(r,\"firstName\")} @blur=${()=>this._handleBlur(\"firstName\")} ?disabled=${this.isSubmitting} ></primer-input> <primer-input-error slot=\"error\"> ${this.formController.hasError.firstName?this.formController.formState.firstName.error:m} </primer-input-error> </primer-input-wrapper> <primer-input-wrapper .hasError=${this.formController.hasError.lastName} > <primer-input-label slot=\"label\"> ${A(\"stripe_ach_user_details_collection_last_name_label\",{id:\"stripe_ach_user_details_collection_last_name_label\"})} </primer-input-label> <primer-input slot=\"input\" .value=${this.formController.formState.lastName.value} @input=${r=>this._handleInput(r,\"lastName\")} @blur=${()=>this._handleBlur(\"lastName\")} ?disabled=${this.isSubmitting} > </primer-input> <primer-input-error slot=\"error\"> ${this.formController.hasError.lastName?this.formController.formState.lastName.error:m} </primer-input-error> </primer-input-wrapper> </div> <primer-input-wrapper .hasError=${this.formController.hasError.emailAddress} > <primer-input-label slot=\"label\"> ${A(\"stripe_ach_user_details_collection_email_address_label\",{id:\"stripe_ach_user_details_collection_email_address_label\"})} </primer-input-label> <primer-input slot=\"input\" type=\"email\" .value=${this.formController.formState.emailAddress.value} @input=${r=>this._handleInput(r,\"emailAddress\")} @blur=${()=>this._handleBlur(\"emailAddress\")} ?disabled=${this.isSubmitting} ></primer-input> <primer-input-error slot=\"error\"> ${this.formController.hasError.emailAddress?this.formController.formState.emailAddress.error:m} </primer-input-error> </primer-input-wrapper> <p> ${A(\"stripe_ach_user_details_collection_data_usage_label\",{id:\"stripe_ach_user_details_collection_data_usage_label\"})} </p> <primer-button buttonType=\"submit\" variant=\"primary\" @click=${()=>this._handleSubmitButtonClick(e)} ?disabled=${this.isSubmitting} ?loading=${this.isSubmitting} > ${A(\"stripe_ach_user_details_collection_continue_button\",{id:\"stripe_ach_user_details_collection_continue_button\"})} </primer-button> </form> `}renderMandate(){return p` <h2> ${A(\"payWithAch\",{id:\"payWithAch\"})} </h2> <p> ${this.clientOptions?.stripe?.mandateData.fullMandateText??A(\"stripe_ach_mandate_template_web\",{id:\"stripe_ach_mandate_template_web\"}).replace(/\\{merchantName\\}/g,this.clientOptions?.stripe?.mandateData.merchantName??\"Merchant\")} </p> <div class=\"button-group\"> <primer-button variant=\"primary\" @click=${this._handleConfirmMandate.bind(this)} ?disabled=${this.isSubmitting} ?loading=${this.isSubmitting} > ${A(\"stripe_ach_mandate_accept_button\",{id:\"stripe_ach_mandate_accept_button\"})} </primer-button> <primer-button variant=\"tertiary\" @click=${this._handleDeclineMandate.bind(this)} ?disabled=${this.isSubmitting} > ${A(\"stripe_ach_mandate_cancel_payment_button\",{id:\"stripe_ach_mandate_cancel_payment_button\"})} </primer-button> </div> `}render(){return this._paymentMethodManagerTask.render({complete:e=>e?this.screen===\"form\"?this.renderForm(e):this.renderMandate():m})}}"
        },
        {
          "kind": "variable",
          "name": "U",
          "default": "class extends h{constructor(){super(...arguments);this.paymentManagers=new Map;this.sdkState=null;this.headlessUtils=null;this.open=!1;this._paymentMethodManagerTask=new M(this,{task:async([e,r])=>!e||!r?E:r.get(e)?.manager,args:()=>[this.paymentMethod?.type,this.paymentManagers]});this._getAssetsTask=new M(this,{task:async([e,r])=>{if(!e||!r)return E;let o=r.getPaymentMethodConfiguration(e);return o?{backgroundColor:o.displayMetadata.button.backgroundColor.colored,name:o.name,displayName:this._legacyGetButtonLabel(o.displayMetadata.button.text),iconUrl:o.displayMetadata.button.iconUrl.colored||o.displayMetadata.button.iconUrl.light||o.displayMetadata.button.iconUrl.dark}:E},args:()=>[this.paymentMethod?.type,this.headlessUtils]});this._setupTasks=new M(this,{task:async([e,r])=>!e||!r?E:{paymentMethodManager:e,assetsConfig:r},args:()=>[this._paymentMethodManagerTask.value,this._getAssetsTask.value]})}_legacyGetButtonLabel(e){if(!e)return;let r=e?ae(e):\"\";return r===\"payWith\"&&(r=\"pay_with\"),A(r,{id:r})}start(){this._paymentMethodManagerTask.value&&(this.open=!0)}renderDialog(){return this.open?p` <primer-portal> <primer-dialog @primer-dialog-close=\"${()=>this.open=!1}\"> <primer-ach-payment .paymentMethod=${this.paymentMethod} @primer-ach-error=${()=>this.open=!1} @primer-ach-mandate-confirmed=${()=>this.open=!1} @primer-ach-mandate-declined=${()=>this.open=!1} ></primer-ach-payment> </primer-dialog> </primer-portal> `:m}render(){return this._setupTasks.render({error:()=>m,complete:({assetsConfig:e})=>(this.style.setProperty(\"--dynamic-payment-button-bg-color\",e.backgroundColor),p` <primer-button @click=\"${()=>this.start()}\" class=${R({loading:!!this.sdkState?.isProcessing,reverse:!0})} title=\"${A(\"pay_with\",{id:\"pay_with\"})} ${e.name}\" > <span class=\"image-container\"> <img src=\"${e.iconUrl}\" alt=\"${e.name}\" /> </span> ${e.displayName} </primer-button> ${this.renderDialog()} `)})}}"
        },
        {
          "kind": "variable",
          "name": "K",
          "default": "class extends h{constructor(){super(...arguments);this.paymentManagers=new Map;this.sdkState=null;this.headlessUtils=null;this._paymentMethodManagerTask=new M(this,{task:async([e,r])=>!e||!r?E:r.get(e)?.manager,args:()=>[this.paymentMethod?.type,this.paymentManagers]});this._getAssetsTask=new M(this,{task:async([e,r])=>{if(!e||!r)return E;let o=r.getPaymentMethodConfiguration(e);if(!o)return E;let a=o.displayMetadata.button.backgroundColor.colored??o.displayMetadata.button.backgroundColor.light,s=o.displayMetadata.button.iconPositionRelativeToText||\"START\";return{backgroundColor:a,name:o.name,displayName:this._legacyGetButtonLabel(o.displayMetadata.button.text),iconUrl:o.displayMetadata.button.iconUrl.colored??o.displayMetadata.button.iconUrl.light,iconPosition:s}},args:()=>[this.paymentMethod?.type,this.headlessUtils]});this._setupTasks=new M(this,{task:async([e,r])=>!e||!r?E:{paymentMethodManager:e,assetsConfig:r},args:()=>[this._paymentMethodManagerTask.value,this._getAssetsTask.value]})}_legacyGetButtonLabel(e){if(!e)return;let r=e?ae(e):\"\";return r===\"payWith\"&&(r=\"pay_with\"),A(r,{id:r})}startRedirectPayment(){this._paymentMethodManagerTask.value&&this._paymentMethodManagerTask.value.start()}render(){return this._setupTasks.render({error:()=>m,complete:({assetsConfig:e})=>{this.style.setProperty(\"--redirect-payment-button-bg-color\",e.backgroundColor);let r={loading:!!this.sdkState?.isProcessing,\"icon-end\":e.iconPosition===\"END\",\"image-only\":!e.displayName},o=e.displayName?p` <span class=\"image-container\"> <img src=\"${e.iconUrl}\" alt=\"${e.name}\" /> </span> <span class=\"button-text\">${e.displayName}</span> `:p` <span class=\"image-container\"> <img src=\"${e.iconUrl}\" alt=\"${e.name}\" /> </span> `;return p` <primer-button @click=\"${()=>this.startRedirectPayment()}\" class=${R(r)} title=\"${A(\"pay_with\",{id:\"pay_with\"})} ${e.name}\" > ${o} </primer-button> `}})}}"
        },
        {
          "kind": "variable",
          "name": "z",
          "default": "class extends h{constructor(){super();this.vaultManagerContext=null;this.isEditMode=!1;this.deletePaymentMethodId=null;this.isDeleting=!1;this.errorMessage=\"\";this.animationDuration=300;new Ut(this,{defaultOptions:{keyframeOptions:{duration:Number(getComputedStyle(document.documentElement).getPropertyValue(\"--primer-animation-duration\").trim().replace(\"ms\",\"\")),easing:getComputedStyle(document.documentElement).getPropertyValue(\"--primer-animation-easing\").trim()}}})}getAnimationConfig(){return{keyframeOptions:{duration:this.animationDuration,easing:getComputedStyle(document.documentElement).getPropertyValue(\"--primer-animation-easing\").trim(),fill:\"both\"}}}handleToggleEditMode(e){this.isEditMode=e.detail,this.deletePaymentMethodId=null}handleDeletePaymentMethod(e){this.deletePaymentMethodId=e.detail}handleCancelDelete(){this.deletePaymentMethodId=null}async handleConfirmDelete(){if(!this.vaultManagerContext?.deleteVaultedPaymentMethod||!this.deletePaymentMethodId){this.errorMessage=A(\"something_went_wrong_error\",{id:\"something_went_wrong_error\"});return}try{this.isDeleting=!0,await this.vaultManagerContext.deleteVaultedPaymentMethod(this.deletePaymentMethodId),this.deletePaymentMethodId=null}catch(e){this.errorMessage=e instanceof Error?e.message:A(\"something_went_wrong_error\",{id:\"something_went_wrong_error\"})}finally{this.isDeleting=!1}}handlePaymentError(e){let r=e.detail?.error;this.errorMessage=r instanceof Error?r.message:A(\"payment_processing_error\",{id:\"payment_processing_error\"})}handleCloseError(){this.errorMessage=\"\"}getPaymentMethodName(e){if(!this.vaultManagerContext)return\"\";let r=this.vaultManagerContext.vaultedPaymentMethods.find(o=>o.id===e);if(!r)return\"\";try{return Wi(r).description||\"\"}catch{return\"\"}}renderLoadingOverlay(){return p` <div class=\"loading-overlay\" ${vt({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} > <primer-spinner size=\"medium\" color=\"var(--primer-color-loader)\" ></primer-spinner> </div> `}renderDeleteConfirmation(){if(!this.deletePaymentMethodId)return m;let e=this.getPaymentMethodName(this.deletePaymentMethodId);return p` <div class=\"delete-confirmation-container\"> <primer-vault-delete-confirmation .isDeleting=${this.isDeleting} .paymentMethodId=${this.deletePaymentMethodId} .paymentMethodName=${e} @confirm-delete=${this.handleConfirmDelete} @cancel-delete=${this.handleCancelDelete} ${vt({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-delete-confirmation> </div> `}renderPaymentMethodItem(e){return this.deletePaymentMethodId===e.id?m:p` <primer-vault-payment-method-item .paymentMethod=${e} .isEditMode=${this.isEditMode} @delete-payment-method=${this.handleDeletePaymentMethod} ${vt({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-payment-method-item> `}renderPaymentMethodList(){let e=this.vaultManagerContext?.vaultedPaymentMethods||[],r=!this.isEditMode&&e.length>0&&!this.deletePaymentMethodId;return p` <div class=\"payment-methods-list\"> ${e.map(o=>this.renderPaymentMethodItem(o))} ${N(r,()=>p` <div class=\"submit-button-container\"> <primer-vault-payment-submit class=\"submit-button\" @primer-vault-payment-error=${this.handlePaymentError} ${vt({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-payment-submit> </div> `,()=>m)} </div> `}render(){if(!this.vaultManagerContext?.enabled)return m;let e=this.vaultManagerContext.vaultedPaymentMethods.length>0,r=this.vaultManagerContext.isLoading,o=this.vaultManagerContext.isUpdating;return p` <div class=\"vault-manager ${o?\"is-updating\":\"\"}\"> <primer-vault-manager-header .isEditMode=${this.isEditMode} .hasPaymentMethods=${e} @toggle-edit-mode=${this.handleToggleEditMode} ></primer-vault-manager-header> ${N(this.errorMessage,()=>p` <primer-vault-error-message .errorMessage=${this.errorMessage} @close-error=${this.handleCloseError} ${vt({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-error-message> `,()=>m)} <div class=\"vault-manager-content\"> ${N(!r&&!e,()=>p` <div class=\"content-container\"> <primer-vault-empty-state ${vt({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-empty-state> </div> `,()=>m)} ${N(!r&&e,()=>p` <div class=\"content-container\"> ${N(this.deletePaymentMethodId,()=>this.renderDeleteConfirmation(),()=>this.renderPaymentMethodList())} </div> `,()=>m)} </div> ${N(o,()=>this.renderLoadingOverlay(),()=>m)} </div> `}}"
        },
        {
          "kind": "variable",
          "name": "j",
          "default": "class extends h{constructor(){super(...arguments);this.hideLabels=!1;this.hasAssignedContent=!1;this.selectedCardNetwork=null;this.paymentManagers=new Map;this.cardFormProvider=new L(this,{context:vo,initialValue:null});this.eventsController=new Nt(this);this.setupCardFormTask=new M(this,{task:async([e])=>{if(!e?.manager)return E;let{manager:r}=e,{cardNumberInput:o,expiryInput:a,cvvInput:s}=r.createHostedInputs();return this.cardFormProvider.setValue({cardNumberInput:o,expiryInput:a,cvvInput:s,setCardholderName:c=>r.setCardholderName(c),setCardNetwork:c=>{this.selectedCardNetwork=c},validate:()=>r.validate(),submit:c=>r.submit(c),hideLabels:this.hideLabels}),!0},args:()=>[this.paymentManagers.get(\"PAYMENT_CARD\")]});this.handleSlotButtonClick=e=>{let o=e.target.closest(\"button, primer-button\");if(!o)return;this.isSubmitButton(o)&&(e.preventDefault(),this.submitCardPayment())};this.handleDirectSubmit=e=>{e.stopPropagation(),this.submitCardPayment()};this.onSlotChange=e=>{let o=e.target.assignedNodes({flatten:!0});this.hasAssignedContent=o.length>0};this.handleFormSubmit=e=>{e.preventDefault(),e.stopPropagation(),this.submitCardPayment()}}updated(e){super.updated(e),e.has(\"hideLabels\")&&this.cardFormProvider.value&&this.cardFormProvider.setValue({...this.cardFormProvider.value,hideLabels:this.hideLabels})}connectedCallback(){super.connectedCallback(),this.addEventListener(\"click\",this.handleSlotButtonClick),this.addEventListener(\"primer-form-submit\",this.handleDirectSubmit)}disconnectedCallback(){this.removeEventListener(\"click\",this.handleSlotButtonClick),this.removeEventListener(\"primer-form-submit\",this.handleDirectSubmit),super.disconnectedCallback()}isSubmitButton(e){let r=e.tagName.toLowerCase(),o=r===\"button\",a=r===\"primer-button\";return o&&(e.getAttribute(\"type\")===\"submit\"||e.hasAttribute(\"data-submit\"))||a&&(e.getAttribute(\"type\")===\"submit\"||e.hasAttribute(\"data-submit\"))}async submitCardPayment(){let e=this.cardFormProvider.value;if(!e)return;let r=await e.validate?.();if(r?.valid){let o=await e.submit?.(this.selectedCardNetwork?{cardNetwork:this.selectedCardNetwork}:void 0);this.eventsController.dispatchFormSubmitSuccess(o)}else{let o=r?.validationErrors;this.cardFormProvider.setValue({...e,errors:o}),this.eventsController.dispatchFormSubmitErrors(o)}}render(){return this.setupCardFormTask.status===ke.ERROR||this.setupCardFormTask.status===ke.INITIAL?m:p` <form @submit=${this.handleFormSubmit}> <slot name=\"card-form-content\" @slotchange=${this.onSlotChange}></slot> ${this.setupCardFormTask.render({complete:()=>N(this.hasAssignedContent,()=>m,()=>p` <div class=\"card-form\"> <primer-input-card-number></primer-input-card-number> <div class=\"card-form-row\"> <primer-input-card-expiry></primer-input-card-expiry> <primer-input-cvv></primer-input-cvv> </div> <primer-input-card-holder-name></primer-input-card-holder-name> </div> <primer-card-form-submit></primer-card-form-submit> `)})} </form> `}}"
        },
        {
          "kind": "variable",
          "name": "ct",
          "default": "class extends h{constructor(){super(...arguments);this.vaultManager=null}render(){return this.vaultManager?.isLoading?m:!this.vaultManager||!this.vaultManager.enabled?p`<slot name=\"other-payments\"></slot>`:p` <div class=\"other-payment-methods-container\"> <primer-collapsable buttonVariant=\"secondary\" .expanded=\"${this.vaultManager?.vaultedPaymentMethods.length===0}\" .header=\"${A(\"navigateToPaymentMethods\",{id:\"navigateToPaymentMethods\"})}\" > <div class=\"other-payment-methods-content\"> <slot name=\"other-payments\"></slot> </div> </primer-collapsable> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "X",
          "default": "class extends h{constructor(){super();this.paymentManagers=new Map;this.computedStyles=null;this._buttonId=\"button-container\";this.loadManagerTask=new M(this,{args:()=>[this.paymentMethod?.type],task:async([e])=>{if(!e)return E;let r=this.paymentManagers.get(e)?.manager;if(!r)throw new Error(`No manager found for payment method type ${e}`);return r}}),new M(this,{args:()=>[this.loadManagerTask.value],task:async([e])=>{if(!e)return E;await this.updateComplete;let r=this.shadowRoot?.getElementById(this._buttonId);if(!r)return;let o=this.calculateButtonHeight(),a=e.createButton(),s=this.createRenderOptions(o);return await a.render(this.paymentMethod?.type===\"GOOGLE_PAY\"?this.shadowRoot?.getRootNode():r,s),e}})}calculateButtonHeight(){if(typeof window>\"u\"||!this.isConnected||!this.computedStyles)return 0;let e=parseFloat(this.computedStyles.getPropertyValue(\"--primer-typography-title-large-line-height\")),r=parseFloat(this.computedStyles.getPropertyValue(\"--primer-space-medium\"));return e+2*r}createRenderOptions(e){let r=this.paymentMethod?.type;return r===\"GOOGLE_PAY\"?{style:{shadowRoot:!0}}:r===\"APPLE_PAY\"?{style:{buttonHeight:e}}:r===\"PAYPAL\"?{style:{buttonHeight:e}}:{style:{buttonHeight:e}}}updated(e){e.has(\"paymentMethod\")&&this.paymentMethod&&(this._buttonId=`button-container-${this.paymentMethod.type}`)}render(){return this.loadManagerTask.render({error:()=>m,complete:()=>p` <!-- The native button container is rendered first --> <div class=\"native-button-container\" id=\"${this._buttonId}\"></div> `,pending:()=>m})}}"
        },
        {
          "kind": "variable",
          "name": "$t",
          "default": "class extends h{render(){return p` <primer-checkout-state type=\"complete\"></primer-checkout-state> `}}"
        },
        {
          "kind": "variable",
          "name": "bt",
          "default": "class extends h{constructor(){super(...arguments);this.sdkState=null}render(){return p` <primer-checkout-state type=\"failure\" description=${this.sdkState?.error?.message||\"\"} ></primer-checkout-state> `}}"
        },
        {
          "kind": "variable",
          "name": "rt",
          "default": "class extends h{constructor(){super(...arguments);this.showProcessingErrors=!0}get shouldShowError(){return!this.sdkState||this.sdkState.isProcessing?!1:!!(this.sdkState.failure&&this.showProcessingErrors)}render(){return this.sdkState?p` <primer-error-message message=\"${A(this.sdkState.failure?.message??\"\",{id:\"tokenizationError\"})}\" ?visible=\"${this.shouldShowError}\" ></primer-error-message> `:m}}"
        },
        {
          "kind": "variable",
          "name": "it",
          "default": "class extends h{constructor(){super(...arguments);this.hasAssignedContent=!1;this.onSlotChange=e=>{let o=e.target.assignedNodes({flatten:!0});this.hasAssignedContent=o.length>0,this.requestUpdate()};this.paymentMethods=null;this.sdkState=null}render(){return this.sdkState?.isSuccessful?p` <slot name=\"checkout-complete\"> <primer-checkout-complete></primer-checkout-complete> </slot> `:p` <slot name=\"payments\" @slotchange=${this.onSlotChange}></slot> ${N(this.hasAssignedContent,()=>m,()=>p` <div class=${R({\"primer-is-processing\":!!this.sdkState?.isProcessing})} > <primer-vault-manager></primer-vault-manager> <primer-show-other-payments> <div slot=\"other-payments\" class=\"primer-main-list\"> ${this.paymentMethods?.toArray().map(e=>p` <primer-payment-method type=${e.type} ></primer-payment-method> `)} </div> </primer-show-other-payments> <primer-error-message-container></primer-error-message-container> </div> `)} `}}"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "t",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "t",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "H",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Y",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "j",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormError",
          "declaration": {
            "name": "J",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "O",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "ft",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "U",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "B",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "rt",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "InitializedPayments",
          "declaration": {
            "name": "Re",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "S",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "Q",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "W",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "X",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "et",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "dt",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "$t",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComponent",
          "declaration": {
            "name": "F",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutFailure",
          "declaration": {
            "name": "bt",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutState",
          "declaration": {
            "name": "tt",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerIcon",
          "declaration": {
            "name": "Z",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerKlarna",
          "declaration": {
            "name": "I",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "it",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "K",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "ct",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "q",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "z",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "injectDarkTheme",
          "declaration": {
            "name": "na",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "injectLightTheme",
          "declaration": {
            "name": "sa",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "injectLoaderStyles",
          "declaration": {
            "name": "_i",
            "module": "cdn/primer-components.js"
          }
        },
        {
          "kind": "js",
          "name": "injectThemeStyles",
          "declaration": {
            "name": "Si",
            "module": "cdn/primer-components.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/primer-loader.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{detectedCardNetwork:null,selectableCardNetworks:[],isLoading:!0}"
        },
        {
          "kind": "variable",
          "name": "sr",
          "default": "class{constructor(e){this._methods=e}get(e){return this._methods.get(e)}toArray(){return Array.from(this._methods.values())}size(){return this._methods.size}}"
        },
        {
          "kind": "variable",
          "name": "X",
          "default": "class extends h{constructor(){super();this.customStyles=\"\";this.clientToken=\"\";this.options={};this._jsInitialized=!1;this.previousLoadingState=!0;this.hasAssignedContent=!1;this._loadingTimeoutId=null;this.locale=\"en-GB\";this.onSlotChange=t=>{let o=t.target.assignedNodes({flatten:!0});this.hasAssignedContent=o.length>0,this.requestUpdate()};this.sdkContextController=new Bt(this),this.sdkStateController=new Ut(this),this.primerEventsController=new tt(this),this.styleProcessingController=new Kt(this),this.vaultManagerController=new gt(this),this.cardNetworkController=new Dt(this),this.achPaymentEventsController=new dr(this),new lr(this)}set jsInitialized(t){this.requestUpdate(),this._jsInitialized=t}get jsInitialized(){return this._jsInitialized}attributeChangedCallback(t,r,o){t===pr.CUSTOM_STYLES?this.styleProcessingController.processCustomStyles(o):super.attributeChangedCallback(t,r,o)}disconnectedCallback(){this._loadingTimeoutId&&(window.clearTimeout(this._loadingTimeoutId),this._loadingTimeoutId=null),this.sdkStateController?.currentState.isLoading&&this.sdkStateController.forceCompleteLoading(),super.disconnectedCallback()}willUpdate(t){t.has(\"options\")&&(this.options?.locale&&(Gr(this.options?.locale)?this.locale=qr(this.options?.locale):S.warn(\"\\u{1F30E}\\u2757 Unsupported locale provided:\",this.options?.locale,\"- Falling back to default locale `en-GB`\")),jr(this.locale||\"en-GB\"))}updated(){let t=getComputedStyle(this);this.sdkContextController.setComputedStyles(t),this.checkLoadingStateChange()}checkLoadingStateChange(){let t=this.sdkStateController?.currentState.isLoading||!1;this.previousLoadingState&&!t&&(this.jsInitialized=!0),this.previousLoadingState=t,t&&!this._loadingTimeoutId?this._loadingTimeoutId=window.setTimeout(()=>{this.sdkStateController?.currentState.isLoading&&(S.warn(\"Loading timeout in component, forcing completion\"),this.sdkStateController.forceCompleteLoading(),this.jsInitialized=!0),this._loadingTimeoutId=null},1e4):!t&&this._loadingTimeoutId&&(window.clearTimeout(this._loadingTimeoutId),this._loadingTimeoutId=null)}render(){let t=this.sdkStateController.currentState,r=t.isLoading,o=t.error,a=!r&&!o;return d` ${P(r,()=>c)} ${P(o,()=>d`<primer-checkout-error></primer-checkout-error>`)} ${P(a,()=>d` <slot name=\"main\" @slotchange=${this.onSlotChange}></slot> ${P(this.hasAssignedContent,()=>c,()=>d`<primer-main></primer-main>`)} `,()=>c)} `}addEventListener(t,r,o){super.addEventListener(t,r,o)}removeEventListener(t,r,o){super.removeEventListener(t,r,o)}}"
        },
        {
          "kind": "function",
          "name": "to"
        },
        {
          "kind": "function",
          "name": "ro"
        },
        {
          "kind": "function",
          "name": "Wa"
        },
        {
          "kind": "function",
          "name": "Za"
        },
        {
          "kind": "variable",
          "name": "oe",
          "default": "class extends h{constructor(){super(...arguments);this.color=\"var(--primer-color-loader)\";this.size=\"medium\";this.compact=!1}getSize(){if(this.size in ri)return ri[this.size];let t=parseInt(this.size,10);return isNaN(t)?ri.medium:t}render(){let t=this.getSize(),r=20,o=`0 0 ${r} ${r}`;return this.style.setProperty(\"--spinner-color\",this.color),this.style.setProperty(\"--spinner-size\",`${t}px`),d` <div class=\"spinner-container ${this.compact?\"compact\":\"\"}\"> <svg class=\"spinner\" width=\"${t}\" height=\"${t}\" viewBox=\"${o}\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" role=\"status\" aria-label=\"Loading\" > <path d=\"M4.27827 10.002C4.27827 6.84166 6.84019 4.27973 10.0005 4.27973C10.7676 4.27973 11.3894 3.6579 11.3894 2.89084C11.3894 2.12378 10.7676 1.50195 10.0005 1.50195C5.30607 1.50195 1.50049 5.30753 1.50049 10.002C1.50049 14.6964 5.30607 18.502 10.0005 18.502C14.6949 18.502 18.5005 14.6964 18.5005 10.002C18.5005 9.23489 17.8787 8.61306 17.1116 8.61306C16.3445 8.61306 15.7227 9.23489 15.7227 10.002C15.7227 13.1622 13.1608 15.7242 10.0005 15.7242C6.84019 15.7242 4.27827 13.1622 4.27827 10.002Z\" fill=\"currentColor\" class=\"path\" /> </svg> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "ae",
          "default": "class extends h{constructor(){super(...arguments);this.focusWithin=!1;this.hasError=!1}handleWrapperClick(t){if(t.target!==t.currentTarget)return;let r=this.findSlottedPrimerInput();r?r.focus():this.dispatchEvent(new CustomEvent(\"wrapper-click\",{bubbles:!0,composed:!0}))}findSlottedPrimerInput(){if(!this.inputSlot)return null;let t=this.inputSlot.assignedElements({flatten:!0}),r=t.find(o=>o.tagName.toLowerCase()===\"primer-input\");if(r)return r;for(let o of t){let a=o.querySelector(\"primer-input\");if(a)return a}return null}render(){let t={\"input-slot\":!0,\"focus-within\":this.focusWithin};return d` <div class=\"input-wrapper\"> <slot name=\"label\"></slot> <div class=\"${V(t)}\" @click=\"${this.handleWrapperClick}\"> <slot name=\"input\"></slot> </div> <slot name=\"error\"></slot> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "ge",
          "default": "class extends h{constructor(){super(...arguments);this.for=\"\";this.disabled=!1}render(){return d`<label for=${this.for}><slot></slot></label>`}}"
        },
        {
          "kind": "variable",
          "name": "G",
          "default": "class extends h{constructor(){super(...arguments);this.variant=\"primary\";this.disabled=!1;this.loading=!1;this.buttonType=\"button\";this.selectionState=\"default\";this.selectable=!1}handleClick(){!this.selectable||this.disabled||this.loading||(this.selectionState=this.selectionState===\"default\"?\"checked\":\"default\",this.dispatchEvent(new CustomEvent(\"selection-change\",{bubbles:!0,composed:!0,detail:{state:this.selectionState}})))}renderCheckmark(){return!this.selectable||this.selectionState!==\"checked\"||this.loading?c:d` <primer-icon name=\"checkmark\" size=\"sm\" color=\"var(--primer-color-icon-primary)\" ></primer-icon> `}renderSpinner(){if(!this.loading)return c;let t;return this.variant===\"primary\"?t=\"var(--primer-color-background-outlined-default)\":(this.variant===\"secondary\"||this.variant===\"tertiary\")&&(t=\"var(--primer-color-gray-900)\"),d` <primer-spinner size=\"small\" color=\"${t}\" compact ></primer-spinner> `}render(){return d` <button type=${this.buttonType} ?disabled=${this.disabled||this.loading} @click=${this.handleClick} part=\"button\" aria-checked=${this.selectionState===\"checked\"} aria-busy=${this.loading} > ${this.renderSpinner()} <span class=\"button-content ${this.loading?\"loading\":\"\"}\"> <slot></slot> </span> ${this.renderCheckmark()} </button> `}}"
        },
        {
          "kind": "variable",
          "name": "fe",
          "default": "class extends h{constructor(){super(...arguments);this.for=\"\";this.active=!0}render(){return d` <span class=\"error\" role=\"alert\" aria-live=\"polite\" id=\"${this.for||\"\"}\" > <slot></slot> </span> `}}"
        },
        {
          "kind": "variable",
          "name": "se",
          "default": "class extends h{constructor(){super(...arguments);this.color=\"var(--primer-color-icon-primary)\";this.size=\"lg\"}render(){let t=this.name?lo[this.name]:null;return d` <div style=\"--internal-icon-color: ${this.color}\"> ${t||d`<slot></slot>`} </div> `}}"
        },
        {
          "kind": "variable",
          "name": "ve",
          "default": "class extends h{constructor(){super(...arguments);this.type=\"complete\"}render(){return this.type===\"complete\"?d` <!-- Successful view --> <primer-icon size=\"lg\" name=\"successful-check\" color=\"var(--primer-color-icon-positive)\" > </primer-icon> <p>Checkout complete!</p> <p class=\"secondary\"> You'll be redirected to the order confirmation page soon. </p> `:d` <primer-icon size=\"lg\" name=\"failure-icon\" color=\"var(--primer-color-icon-negative)\" > </primer-icon> <p>Payment failed</p> ${this.description?d`<p class=\"secondary\">${this.description}</p>`:d`<p class=\"secondary\">Something went wrong.</p>`} `}}"
        },
        {
          "kind": "variable",
          "name": "T",
          "default": "class extends h{constructor(){super(...arguments);this.value=\"\";this.placeholder=\"\";this.disabled=!1;this.name=\"\";this.type=\"text\";this.required=!1;this.readonly=!1;this.pattern=\"\";this.min=\"\";this.max=\"\";this.step=\"\";this.autocomplete=\"\";this.id=\"\";this.hasFocus=!1;this.hasError=!1}handleInput(t){t.stopPropagation();let r=t.target;this.value=r.value;let o=new CustomEvent(\"input\",{detail:this.value,bubbles:!0,composed:!0});this.dispatchEvent(o)}handleChange(t){t.stopPropagation();let r=t.target;this.value=r.value;let o=new CustomEvent(\"change\",{detail:this.value,bubbles:!0,composed:!0});this.dispatchEvent(o)}handleFocus(){this.hasFocus=!0,this.dispatchEvent(new FocusEvent(\"focus\",{bubbles:!0,composed:!0}))}handleBlur(){this.hasFocus=!1,this.dispatchEvent(new FocusEvent(\"blur\",{bubbles:!0,composed:!0}))}handleInvalid(t){t.stopPropagation(),this.hasError=!0,this.dispatchEvent(new Event(\"invalid\",{bubbles:!0,composed:!0}))}focus(t){this.inputElement?.focus(t)}blur(){this.inputElement?.blur()}select(){this.inputElement?.select()}setSelectionRange(t,r,o){this.inputElement?.setSelectionRange(t,r,o)}get validity(){return this.inputElement?.validity||{}}get validationMessage(){return this.inputElement?.validationMessage||\"\"}checkValidity(){return this.inputElement?.checkValidity()||!1}reportValidity(){return this.inputElement?.reportValidity()||!1}render(){let t={input:!0,\"input--focused\":this.hasFocus,\"input--disabled\":this.disabled,\"input--error\":this.hasError,\"input--readonly\":this.readonly},r=Object.entries(t).filter(([,o])=>o).map(([o])=>o).join(\" \");return d` <input part=\"input\" class=${r} .value=${this.value} .type=${this.type} ?disabled=${this.disabled} ?required=${this.required} ?readonly=${this.readonly} placeholder=${this.placeholder} pattern=${this.pattern} minlength=${this.minlength??\"\"} maxlength=${this.maxlength??\"\"} min=${this.min} max=${this.max} step=${this.step} autocomplete=${this.autocomplete} name=${this.name} id=${this.id} @input=${this.handleInput} @change=${this.handleChange} @focus=${this.handleFocus} @blur=${this.handleBlur} @invalid=${this.handleInvalid} /> `}addEventListener(t,r,o){super.addEventListener(t,r,o)}removeEventListener(t,r,o){super.removeEventListener(t,r,o)}}"
        },
        {
          "kind": "variable",
          "name": "K",
          "default": "class extends h{constructor(){super(...arguments);this.header=\"\";this.expanded=!1;this.expandText=\"Expand\";this.collapseText=\"Collapse\";this.ariaLabel=\"\";this.buttonVariant=\"primary\";this.isExpanded=!1}connectedCallback(){super.connectedCallback(),this.isExpanded=this.expanded}dispatchExpandedChangedEvent(t){this.dispatchEvent(new CustomEvent(\"expanded-changed\",{bubbles:!0,composed:!0,detail:{expanded:t}}))}toggleExpanded(){this.isExpanded=!this.isExpanded,this.dispatchExpandedChangedEvent(this.isExpanded)}expand(){this.isExpanded||(this.isExpanded=!0,this.dispatchExpandedChangedEvent(!0))}collapse(){this.isExpanded&&(this.isExpanded=!1,this.dispatchExpandedChangedEvent(!1))}render(){let t=this.isExpanded?this.collapseText:this.expandText,r=this.ariaLabel||this.header||t,o=this.header||t;return d` <div class=\"collapsable\"> <primer-button variant=${this.buttonVariant} buttonType=\"button\" @click=${this.toggleExpanded} aria-expanded=${this.isExpanded} aria-controls=\"collapsable-content\" aria-label=${r} > <span>${o}</span> </primer-button> <div class=\"collapsable-wrapper ${this.isExpanded?\"expanded\":\"\"}\" id=\"collapsable-content\" role=\"region\" aria-labelledby=\"collapsable-header\" > <div class=\"collapsable-content\"> <slot></slot> </div> </div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "ee",
          "default": "class extends h{constructor(){super(...arguments);this.message=\"\";this.visible=!1;this.role=\"alert\";this.showMessage=!1}updated(t){t.has(\"visible\")&&this.handleVisibilityChange()}handleVisibilityChange(){this.visible?(this.showMessage=!0,this.setAttribute(\"aria-hidden\",\"false\")):setTimeout(()=>{this.showMessage=!1,this.setAttribute(\"aria-hidden\",\"true\")},200)}render(){if(!this.showMessage&&!this.visible)return c;let t={\"error-message\":!0,hidden:!this.visible};return d` <div part=\"error-message\" class=${V(t)} aria-live=\"assertive\" aria-atomic=\"true\" > <div part=\"error-icon\" class=\"error-icon\"> <primer-icon name=\"failure-icon\" size=\"sm\" color=\"var(--primer-color-icon-negative)\" ></primer-icon> </div> <div part=\"error-content\" class=\"error-content\">${this.message}</div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "Ne",
          "default": "class extends h{constructor(){super(...arguments);this.id=\"d\"+Math.random().toString(36).substring(7)}getContainer(){let t=document.querySelector(`#${this.id}`);return t||(t=document.createElement(\"div\"),t.id=this.id,document.body.appendChild(t),this._setupEventListeners(t)),t}_setupEventListeners(t){[\"primer-ach-error\",\"primer-ach-bank-details-collected\",\"primer-ach-mandate-confirmed\",\"primer-ach-mandate-declined\"].forEach(r=>{t.addEventListener(r,o=>{o.stopPropagation(),this.dispatchEvent(new CustomEvent(r,{bubbles:!0,composed:!0,detail:o.detail}))})})}disconnectedCallback(){super.disconnectedCallback(),this.getContainer().remove()}_handleSlotChange(t){let o=t.target.assignedNodes();if(!o.length)return;let a=this.getContainer();o.forEach(n=>a.appendChild(n))}render(){return d`<slot @slotchange=${this._handleSlotChange}></slot>`}}"
        },
        {
          "kind": "variable",
          "name": "Ge",
          "default": "class extends h{_handleCloseClick(){this.dispatchEvent(new CustomEvent(\"primer-dialog-close\",{bubbles:!0,composed:!0}))}render(){return d` <div class=${V({backdrop:!0})} @click=${e=>{e.preventDefault()}} > <div class=\"dialog\"> <div class=\"header\"> <primer-button variant=\"tertiary\" @click=${this._handleCloseClick}> <primer-icon name=\"close\"></primer-icon> </primer-button> </div> <div class=\"content\"> <slot></slot> </div> </div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "H",
          "default": "class extends h{constructor(){super(...arguments);this.paymentManagers=new Map;this.sdkState=null;this.headlessUtils=null;this.klarnaCategories=null;this.selectedCategory=null;this.isExpanded=!1;this.headerAriaLabel=v(\"pay_with\",{id:\"pay_with\"});this._paymentMethodManagerTask=new k(this,{task:async([t,r])=>{if(!t||!r)return _;let o=await r.getCDNAssets(\"KLARNA\");return{manager:t.manager,klarnaIcon:o?.assets?.icon?`${o.goatCdnUrl}/${o.assets.icon}`:\"\"}},args:()=>[this.paymentManagers.get(\"KLARNA\"),this.headlessUtils]})}toggleExpand(){this.isExpanded=!this.isExpanded,this.isExpanded||(this.selectedCategory=null)}async startKlarnaPayment(){if(!(!this._paymentMethodManagerTask.value||!this.selectedCategory))try{await this._paymentMethodManagerTask.value.manager.start({paymentMethodCategoryId:this.selectedCategory})}catch(t){S.error(\"Failed to start Klarna payment\",t)}}async renderSelectedCategory(){if(!(!this._paymentMethodManagerTask.value||!this.selectedCategory||!this.klarnaContainer))try{this.klarnaContainer.innerHTML=\"\",await this._paymentMethodManagerTask.value.manager.renderCategory({containerId:this.klarnaContainer,paymentMethodCategoryId:this.selectedCategory,onHeightChange:t=>{t>0&&(this.klarnaContainer.style.height=`${t}px`)}})}catch(t){S.error(\"Failed to render Klarna category\",t)}}selectCategory(t){this.selectedCategory=t,this.renderSelectedCategory()}updated(t){t.has(\"selectedCategory\")&&this.selectedCategory&&this.renderSelectedCategory()}renderCategorySelection(){let t=this.klarnaCategories?.categories||[];return this.klarnaCategories?.isLoading||!1?d`<div class=\"loading\"> <primer-spinner size=\"small\"></primer-spinner> </div>`:d` <div class=\"category-selection\"> ${t.map(o=>d` <button class=${V({\"category-button\":!0,selected:o.id===this.selectedCategory})} @click=${()=>{this.selectCategory(o.id)}} > ${o.name} </button> `)} </div> `}renderExpandedContent(){return d` ${this.renderCategorySelection()} ${this.selectedCategory?d` <div id=\"klarna-category-container\" class=\"klarna-category-container\" ></div> `:c} <button class=${V({\"klarna-pay-button\":!0,loading:!!this.sdkState?.isProcessing,disabled:!this.selectedCategory})} ?disabled=${!this.selectedCategory||this.sdkState?.isProcessing} @click=${()=>this.startKlarnaPayment()} > ${v(\"confirm\",{id:\"confirm\"})} </button> `}render(){return this._paymentMethodManagerTask.render({error:t=>{let r=t instanceof Error?t.message:\"Unknown error in Klarna\";return d`<div class=\"error\"> Error loading Klarna: ${r} </div>`},complete:({manager:t,klarnaIcon:r})=>t?d` <div class=\"klarna-container ${this.isExpanded?\"expanded\":\"\"}\"> <div class=\"klarna-button-header\"> <primer-button buttonType=\"button\" variant=\"secondary\" class=\"klarna-button\" @click=${this.toggleExpand} aria-expanded=${this.isExpanded} aria-controls=\"collapsable-content\" aria-label=${this.headerAriaLabel} > <img src=${r} alt=\"Klarna logo\" /> <span>${v(\"pay_with\",{id:\"pay_with\"})} Klarna</span> <span class=\"klarna-accordion-icon ${this.isExpanded?\"expanded\":\"\"}\" > ▼ </span> </primer-button> </div> <div class=\"klarna-expanded-content ${this.isExpanded?\"visible\":\"\"}\" > <div class=\"klarna-accordion-content\"> ${this.renderExpandedContent()} </div> </div> </div> `:c})}}"
        },
        {
          "kind": "variable",
          "name": "ye",
          "default": "class extends h{constructor(){super(...arguments);this.type=void 0;this.paymentMethods=null}render(){if(!this.type)return c;let t=this.paymentMethods?.get(this.type);if(!t)return c;switch(t?.managerType){case\"CARD\":return d`<primer-card-form></primer-card-form>`;case\"NATIVE\":return d`<primer-native-payment .paymentMethod=${t} ></primer-native-payment>`;case\"REDIRECT\":return d`<primer-redirect-payment .paymentMethod=${t} ></primer-redirect-payment>`;case\"KLARNA\":return d`<primer-klarna></primer-klarna>`;case\"ACH\":return d` <primer-dynamic-payment .paymentMethod=${t} ></primer-dynamic-payment> `;default:return c}}}"
        },
        {
          "kind": "variable",
          "name": "q",
          "default": "class extends h{constructor(){super(...arguments);this.formController=new mr(this,t=>this._paymentMethodManagerTask.value.setAndValidate(t));this.paymentManagers=new Map;this.sdkState=void 0;this.clientOptions=void 0;this.screen=\"form\";this.isSubmitting=!1;this._paymentMethodManagerTask=new k(this,{task:async([t])=>t!==\"STRIPE_ACH\"?_:this.paymentManagers.get(t)?.manager,args:()=>[this.paymentMethod?.type]})}_handleInput(t,r){let o=t.target;this.formController.setFieldValue(r,o.value)}_handleBlur(t){this.formController.setFieldTouched(t)}_handleError(t){this.dispatchEvent(new CustomEvent(\"primer-ach-error\",{bubbles:!0,composed:!0,detail:{error:t instanceof Error?t:new Error(typeof t==\"string\"?t:\"Unknown error occurred\")}}))}async _handleSubmitButtonClick(t){if(!this.isSubmitting){this.isSubmitting=!0;try{let r=await t.start(this.formController.formData);if(!r||r.valid)return await this._handleCollectBankAccountDetails(t);r&&this.formController.setValidation(r,!0)}catch(r){this._handleError(r)}finally{this.isSubmitting=!1}}}async _handleCollectBankAccountDetails(t){try{await t.collectBankAccountDetails(),this.screen=\"mandate\",this.dispatchEvent(new CustomEvent(\"primer-ach-bank-details-collected\",{bubbles:!0,composed:!0}))}catch(r){this._handleError(r)}}async _handleConfirmMandate(){if(this._paymentMethodManagerTask.value){this.isSubmitting=!0;try{await this._paymentMethodManagerTask.value.confirmMandate(),this.dispatchEvent(new CustomEvent(\"primer-ach-mandate-confirmed\",{bubbles:!0,composed:!0}))}catch(t){this._handleError(t)}finally{this.isSubmitting=!1}}}async _handleDeclineMandate(){if(this._paymentMethodManagerTask.value){this.isSubmitting=!0;try{await this._paymentMethodManagerTask.value.declineMandate(),this.dispatchEvent(new CustomEvent(\"primer-ach-mandate-declined\",{bubbles:!0,composed:!0}))}catch(t){this._handleError(t)}finally{this.isSubmitting=!1}}}renderForm(t){return d` <h2> ${v(\"payWithAch\",{id:\"payWithAch\"})} </h2> <p> ${v(\"stripe_ach_user_details_collection_subtitle_label\",{id:\"stripe_ach_user_details_collection_subtitle_label\"})} </p> <form @submit=${r=>r.preventDefault()}> <div class=\"form-row\"> <primer-input-wrapper .hasError=${this.formController.hasError.firstName} > <primer-input-label slot=\"label\"> ${v(\"stripe_ach_user_details_collection_first_name_label\",{id:\"stripe_ach_user_details_collection_first_name_label\"})} </primer-input-label> <primer-input slot=\"input\" .value=${this.formController.formState.firstName.value} @input=${r=>this._handleInput(r,\"firstName\")} @blur=${()=>this._handleBlur(\"firstName\")} ?disabled=${this.isSubmitting} ></primer-input> <primer-input-error slot=\"error\"> ${this.formController.hasError.firstName?this.formController.formState.firstName.error:c} </primer-input-error> </primer-input-wrapper> <primer-input-wrapper .hasError=${this.formController.hasError.lastName} > <primer-input-label slot=\"label\"> ${v(\"stripe_ach_user_details_collection_last_name_label\",{id:\"stripe_ach_user_details_collection_last_name_label\"})} </primer-input-label> <primer-input slot=\"input\" .value=${this.formController.formState.lastName.value} @input=${r=>this._handleInput(r,\"lastName\")} @blur=${()=>this._handleBlur(\"lastName\")} ?disabled=${this.isSubmitting} > </primer-input> <primer-input-error slot=\"error\"> ${this.formController.hasError.lastName?this.formController.formState.lastName.error:c} </primer-input-error> </primer-input-wrapper> </div> <primer-input-wrapper .hasError=${this.formController.hasError.emailAddress} > <primer-input-label slot=\"label\"> ${v(\"stripe_ach_user_details_collection_email_address_label\",{id:\"stripe_ach_user_details_collection_email_address_label\"})} </primer-input-label> <primer-input slot=\"input\" type=\"email\" .value=${this.formController.formState.emailAddress.value} @input=${r=>this._handleInput(r,\"emailAddress\")} @blur=${()=>this._handleBlur(\"emailAddress\")} ?disabled=${this.isSubmitting} ></primer-input> <primer-input-error slot=\"error\"> ${this.formController.hasError.emailAddress?this.formController.formState.emailAddress.error:c} </primer-input-error> </primer-input-wrapper> <p> ${v(\"stripe_ach_user_details_collection_data_usage_label\",{id:\"stripe_ach_user_details_collection_data_usage_label\"})} </p> <primer-button buttonType=\"submit\" variant=\"primary\" @click=${()=>this._handleSubmitButtonClick(t)} ?disabled=${this.isSubmitting} ?loading=${this.isSubmitting} > ${v(\"stripe_ach_user_details_collection_continue_button\",{id:\"stripe_ach_user_details_collection_continue_button\"})} </primer-button> </form> `}renderMandate(){return d` <h2> ${v(\"payWithAch\",{id:\"payWithAch\"})} </h2> <p> ${this.clientOptions?.stripe?.mandateData.fullMandateText??v(\"stripe_ach_mandate_template_web\",{id:\"stripe_ach_mandate_template_web\"}).replace(/\\{merchantName\\}/g,this.clientOptions?.stripe?.mandateData.merchantName??\"Merchant\")} </p> <div class=\"button-group\"> <primer-button variant=\"primary\" @click=${this._handleConfirmMandate.bind(this)} ?disabled=${this.isSubmitting} ?loading=${this.isSubmitting} > ${v(\"stripe_ach_mandate_accept_button\",{id:\"stripe_ach_mandate_accept_button\"})} </primer-button> <primer-button variant=\"tertiary\" @click=${this._handleDeclineMandate.bind(this)} ?disabled=${this.isSubmitting} > ${v(\"stripe_ach_mandate_cancel_payment_button\",{id:\"stripe_ach_mandate_cancel_payment_button\"})} </primer-button> </div> `}render(){return this._paymentMethodManagerTask.render({complete:t=>t?this.screen===\"form\"?this.renderForm(t):this.renderMandate():c})}}"
        },
        {
          "kind": "variable",
          "name": "Q",
          "default": "class extends h{constructor(){super(...arguments);this.paymentManagers=new Map;this.sdkState=null;this.headlessUtils=null;this.open=!1;this._paymentMethodManagerTask=new k(this,{task:async([t,r])=>!t||!r?_:r.get(t)?.manager,args:()=>[this.paymentMethod?.type,this.paymentManagers]});this._getAssetsTask=new k(this,{task:async([t,r])=>{if(!t||!r)return _;let o=r.getPaymentMethodConfiguration(t);return o?{backgroundColor:o.displayMetadata.button.backgroundColor.colored,name:o.name,displayName:this._legacyGetButtonLabel(o.displayMetadata.button.text),iconUrl:o.displayMetadata.button.iconUrl.colored||o.displayMetadata.button.iconUrl.light||o.displayMetadata.button.iconUrl.dark}:_},args:()=>[this.paymentMethod?.type,this.headlessUtils]});this._setupTasks=new k(this,{task:async([t,r])=>!t||!r?_:{paymentMethodManager:t,assetsConfig:r},args:()=>[this._paymentMethodManagerTask.value,this._getAssetsTask.value]})}_legacyGetButtonLabel(t){if(!t)return;let r=t?kt(t):\"\";return r===\"payWith\"&&(r=\"pay_with\"),v(r,{id:r})}start(){this._paymentMethodManagerTask.value&&(this.open=!0)}renderDialog(){return this.open?d` <primer-portal> <primer-dialog @primer-dialog-close=\"${()=>this.open=!1}\"> <primer-ach-payment .paymentMethod=${this.paymentMethod} @primer-ach-error=${()=>this.open=!1} @primer-ach-mandate-confirmed=${()=>this.open=!1} @primer-ach-mandate-declined=${()=>this.open=!1} ></primer-ach-payment> </primer-dialog> </primer-portal> `:c}render(){return this._setupTasks.render({error:()=>c,complete:({assetsConfig:t})=>(this.style.setProperty(\"--dynamic-payment-button-bg-color\",t.backgroundColor),d` <primer-button @click=\"${()=>this.start()}\" class=${V({loading:!!this.sdkState?.isProcessing,reverse:!0})} title=\"${v(\"pay_with\",{id:\"pay_with\"})} ${t.name}\" > <span class=\"image-container\"> <img src=\"${t.iconUrl}\" alt=\"${t.name}\" /> </span> ${t.displayName} </primer-button> ${this.renderDialog()} `)})}}"
        },
        {
          "kind": "variable",
          "name": "te",
          "default": "class extends h{constructor(){super(...arguments);this.paymentManagers=new Map;this.sdkState=null;this.headlessUtils=null;this._paymentMethodManagerTask=new k(this,{task:async([t,r])=>!t||!r?_:r.get(t)?.manager,args:()=>[this.paymentMethod?.type,this.paymentManagers]});this._getAssetsTask=new k(this,{task:async([t,r])=>{if(!t||!r)return _;let o=r.getPaymentMethodConfiguration(t);if(!o)return _;let a=o.displayMetadata.button.backgroundColor.colored??o.displayMetadata.button.backgroundColor.light,n=o.displayMetadata.button.iconPositionRelativeToText||\"START\";return{backgroundColor:a,name:o.name,displayName:this._legacyGetButtonLabel(o.displayMetadata.button.text),iconUrl:o.displayMetadata.button.iconUrl.colored??o.displayMetadata.button.iconUrl.light,iconPosition:n}},args:()=>[this.paymentMethod?.type,this.headlessUtils]});this._setupTasks=new k(this,{task:async([t,r])=>!t||!r?_:{paymentMethodManager:t,assetsConfig:r},args:()=>[this._paymentMethodManagerTask.value,this._getAssetsTask.value]})}_legacyGetButtonLabel(t){if(!t)return;let r=t?kt(t):\"\";return r===\"payWith\"&&(r=\"pay_with\"),v(r,{id:r})}startRedirectPayment(){this._paymentMethodManagerTask.value&&this._paymentMethodManagerTask.value.start()}render(){return this._setupTasks.render({error:()=>c,complete:({assetsConfig:t})=>{this.style.setProperty(\"--redirect-payment-button-bg-color\",t.backgroundColor);let r={loading:!!this.sdkState?.isProcessing,\"icon-end\":t.iconPosition===\"END\",\"image-only\":!t.displayName},o=t.displayName?d` <span class=\"image-container\"> <img src=\"${t.iconUrl}\" alt=\"${t.name}\" /> </span> <span class=\"button-text\">${t.displayName}</span> `:d` <span class=\"image-container\"> <img src=\"${t.iconUrl}\" alt=\"${t.name}\" /> </span> `;return d` <primer-button @click=\"${()=>this.startRedirectPayment()}\" class=${V(r)} title=\"${v(\"pay_with\",{id:\"pay_with\"})} ${t.name}\" > ${o} </primer-button> `}})}}"
        },
        {
          "kind": "variable",
          "name": "W",
          "default": "class extends h{constructor(){super();this.vaultManagerContext=null;this.isEditMode=!1;this.deletePaymentMethodId=null;this.isDeleting=!1;this.errorMessage=\"\";this.animationDuration=300;new dt(this,{defaultOptions:{keyframeOptions:{duration:Number(getComputedStyle(document.documentElement).getPropertyValue(\"--primer-animation-duration\").trim().replace(\"ms\",\"\")),easing:getComputedStyle(document.documentElement).getPropertyValue(\"--primer-animation-easing\").trim()}}})}getAnimationConfig(){return{keyframeOptions:{duration:this.animationDuration,easing:getComputedStyle(document.documentElement).getPropertyValue(\"--primer-animation-easing\").trim(),fill:\"both\"}}}handleToggleEditMode(t){this.isEditMode=t.detail,this.deletePaymentMethodId=null}handleDeletePaymentMethod(t){this.deletePaymentMethodId=t.detail}handleCancelDelete(){this.deletePaymentMethodId=null}async handleConfirmDelete(){if(!this.vaultManagerContext?.deleteVaultedPaymentMethod||!this.deletePaymentMethodId){this.errorMessage=v(\"something_went_wrong_error\",{id:\"something_went_wrong_error\"});return}try{this.isDeleting=!0,await this.vaultManagerContext.deleteVaultedPaymentMethod(this.deletePaymentMethodId),this.deletePaymentMethodId=null}catch(t){this.errorMessage=t instanceof Error?t.message:v(\"something_went_wrong_error\",{id:\"something_went_wrong_error\"})}finally{this.isDeleting=!1}}handlePaymentError(t){let r=t.detail?.error;this.errorMessage=r instanceof Error?r.message:v(\"payment_processing_error\",{id:\"payment_processing_error\"})}handleCloseError(){this.errorMessage=\"\"}getPaymentMethodName(t){if(!this.vaultManagerContext)return\"\";let r=this.vaultManagerContext.vaultedPaymentMethods.find(o=>o.id===t);if(!r)return\"\";try{return ur(r).description||\"\"}catch{return\"\"}}renderLoadingOverlay(){return d` <div class=\"loading-overlay\" ${Oe({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} > <primer-spinner size=\"medium\" color=\"var(--primer-color-loader)\" ></primer-spinner> </div> `}renderDeleteConfirmation(){if(!this.deletePaymentMethodId)return c;let t=this.getPaymentMethodName(this.deletePaymentMethodId);return d` <div class=\"delete-confirmation-container\"> <primer-vault-delete-confirmation .isDeleting=${this.isDeleting} .paymentMethodId=${this.deletePaymentMethodId} .paymentMethodName=${t} @confirm-delete=${this.handleConfirmDelete} @cancel-delete=${this.handleCancelDelete} ${Oe({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-delete-confirmation> </div> `}renderPaymentMethodItem(t){return this.deletePaymentMethodId===t.id?c:d` <primer-vault-payment-method-item .paymentMethod=${t} .isEditMode=${this.isEditMode} @delete-payment-method=${this.handleDeletePaymentMethod} ${Oe({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-payment-method-item> `}renderPaymentMethodList(){let t=this.vaultManagerContext?.vaultedPaymentMethods||[],r=!this.isEditMode&&t.length>0&&!this.deletePaymentMethodId;return d` <div class=\"payment-methods-list\"> ${t.map(o=>this.renderPaymentMethodItem(o))} ${P(r,()=>d` <div class=\"submit-button-container\"> <primer-vault-payment-submit class=\"submit-button\" @primer-vault-payment-error=${this.handlePaymentError} ${Oe({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-payment-submit> </div> `,()=>c)} </div> `}render(){if(!this.vaultManagerContext?.enabled)return c;let t=this.vaultManagerContext.vaultedPaymentMethods.length>0,r=this.vaultManagerContext.isLoading,o=this.vaultManagerContext.isUpdating;return d` <div class=\"vault-manager ${o?\"is-updating\":\"\"}\"> <primer-vault-manager-header .isEditMode=${this.isEditMode} .hasPaymentMethods=${t} @toggle-edit-mode=${this.handleToggleEditMode} ></primer-vault-manager-header> ${P(this.errorMessage,()=>d` <primer-vault-error-message .errorMessage=${this.errorMessage} @close-error=${this.handleCloseError} ${Oe({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-error-message> `,()=>c)} <div class=\"vault-manager-content\"> ${P(!r&&!t,()=>d` <div class=\"content-container\"> <primer-vault-empty-state ${Oe({...this.getAnimationConfig(),properties:[\"opacity\"],in:[{opacity:0},{opacity:1}],out:[{opacity:1},{opacity:0}]})} ></primer-vault-empty-state> </div> `,()=>c)} ${P(!r&&t,()=>d` <div class=\"content-container\"> ${P(this.deletePaymentMethodId,()=>this.renderDeleteConfirmation(),()=>this.renderPaymentMethodList())} </div> `,()=>c)} </div> ${P(o,()=>this.renderLoadingOverlay(),()=>c)} </div> `}}"
        },
        {
          "kind": "variable",
          "name": "j",
          "default": "class extends h{constructor(){super(...arguments);this.vaultManagerContext=null;this.vaultItemContext=null;this.headlessUtils=null;this.paymentMethod=null;this.isEditMode=!1;this._getAssetsTask=new k(this,{task:async([t,r,o])=>{if(!t||!r||!o)return _;let a=\"\";if(jo(t))a=r.getCardNetworkAsset(t.paymentInstrumentData.network).cardUrl;else{let p=await r.getCDNAssets(t.paymentMethodType);p&&(a=p.assets?.icon?`${p.goatCdnUrl}/${p.assets.icon}`:\"\")}let n=o.cvvRecapture,m=ur(t);return{icon:a,shouldShowCVV:n,...m}},args:()=>[this.paymentMethod,this.headlessUtils,this.vaultManagerContext]})}isSelected(){if(!this.vaultManagerContext||!this.paymentMethod)return!1;let t=this.vaultItemContext?.selectedVaultedPaymentMethod;return!!t&&t.id===this.paymentMethod.id}handleClick(){this.isEditMode||!this.vaultManagerContext||!this.paymentMethod||(this.isSelected()?this.vaultItemContext?.setSelectedVaultedPaymentMethod(null):this.vaultItemContext?.setSelectedVaultedPaymentMethod(this.paymentMethod))}handleDeleteClick(t){t.stopPropagation(),this.dispatchEvent(new CustomEvent(\"delete-payment-method\",{detail:this.paymentMethod?.id,bubbles:!0,composed:!0}))}renderPaymentMethodContent(t){let r=t.icon?d`<img class=\"payment-method-icon\" src=${t.icon} alt=${t.description} />`:d` <div class=\"payment-method-icon payment-method-icon-generic\"> <primer-icon name=\"payment-card\" size=\"sm\"></primer-icon> </div> `;return d` ${r} <div class=\"payment-method-details\"> <div class=\"payment-method-description\">${t.description}</div> ${t.secondaryDescription?d`<div class=\"payment-method-secondary-description\"> ${t.secondaryDescription} </div>`:c} </div> `}render(){return this._getAssetsTask.render({error:()=>c,complete:t=>{let r=this.isSelected()?\"checked\":\"default\";return d` <div class=\"payment-method-wrapper\"> <div class=\"payment-method-container\"> <primer-button variant=\"secondary\" class=\"payment-method-button\" selectable ?disabled=${this.isEditMode} selectionState=${r} @click=${this.handleClick} > ${this.renderPaymentMethodContent(t)} </primer-button> ${this.isEditMode?d` <button class=\"delete-button\" @click=${this.handleDeleteClick} aria-label=${`${v(\"delete\",{id:\"delete\"})} ${t.description}`} > <primer-icon name=\"trash\" size=\"sm\"></primer-icon> </button> `:c} </div> ${P(t.shouldShowCVV&&this.isSelected()&&!this.isEditMode,()=>d`<primer-vault-cvv-input .paymentMethod=\"${this.paymentMethod}\" ></primer-vault-cvv-input>`,()=>c)} </div> `}})}}"
        },
        {
          "kind": "variable",
          "name": "re",
          "default": "class extends h{constructor(){super(...arguments);this.isEditMode=!1;this.hasPaymentMethods=!1}toggleEditMode(){this.dispatchEvent(new CustomEvent(\"toggle-edit-mode\",{detail:!this.isEditMode,bubbles:!0,composed:!0}))}render(){return d` <div class=\"vault-manager-header\"> <h3>${v(\"previouslyUsed\",{id:\"previouslyUsed\"})}</h3> ${this.hasPaymentMethods?d` <primer-button class=\"edit-button ${this.isEditMode?\"active\":\"\"}\" @click=${this.toggleEditMode} aria-label=${this.isEditMode?v(\"confirm\",{id:\"confirm\"}):v(\"editPaymentMethods\",{id:\"editPaymentMethods\"})} > ${this.isEditMode?d`<primer-icon name=\"checkmark\" size=\"sm\"></primer-icon>`:d`<primer-icon name=\"pencil\" size=\"sm\"></primer-icon>`} </primer-button> `:c} </div> `}}"
        },
        {
          "kind": "variable",
          "name": "Z",
          "default": "class extends h{constructor(){super(...arguments);this.isDeleting=!1;this.paymentMethodId=\"\";this.paymentMethodName=\"\";this.vaultManager=null}handleConfirmClick(){this.dispatchEvent(new CustomEvent(\"confirm-delete\",{bubbles:!0,composed:!0}))}handleCancelClick(){this.dispatchEvent(new CustomEvent(\"cancel-delete\",{bubbles:!0,composed:!0}))}render(){let t=this.paymentMethodName;return d` <div class=\"delete-confirmation\"> <div class=\"delete-message\"> <p class=\"delete-text\">${t}</p> </div> <div class=\"delete-actions\"> <button class=\"delete-confirm\" @click=${this.handleConfirmClick} ?disabled=${this.isDeleting} > ${this.isDeleting?v(\"deleting\",{id:\"deleting\"}):v(\"confirmVaultedPaymentMethodDeletion\",{id:\"confirmVaultedPaymentMethodDeletion\"})} </button> <button class=\"delete-cancel\" @click=${this.handleCancelClick} ?disabled=${this.isDeleting} > ${v(\"cancel\",{id:\"cancel\"})} </button> </div> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "xe",
          "default": "class extends h{render(){return d` <div class=\"empty-state\"> <p> ${v(\"savedPaymentMethodsEmpty\",{id:\"savedPaymentMethodsEmpty\"})} </p> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "ne",
          "default": "class extends h{constructor(){super(...arguments);this.errorMessage=\"\"}handleDismiss(){this.dispatchEvent(new CustomEvent(\"close-error\",{bubbles:!0,composed:!0}))}render(){return d` <div class=\"error-message\"> <div class=\"error-content\"> <primer-icon name=\"warning\" size=\"sm\" color=\"var(--primer-color-red-500)\" ></primer-icon> <p>${this.errorMessage}</p> </div> <button @click=${this.handleDismiss} aria-label=${v(\"closeErrorMessage\",{id:\"closeErrorMessage\"})} > <primer-icon name=\"close\" size=\"sm\"></primer-icon> </button> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "O",
          "default": "class extends h{constructor(){super(...arguments);this._userAssignedProps=new Set;this._internalButtonText=\"\";this.headlessInstance=null;this.sdkState=null;this.vaultItemContext=null;this.vaultManager=null;this.clientOptions=null;this.variant=\"primary\";this.disabled=!1;this.handleClick=async t=>{if(t.preventDefault(),!this.isButtonDisabled)try{await this.vaultManager?.startVaultedPaymentFlow()}catch(r){let o=new CustomEvent(\"primer-vault-payment-error\",{bubbles:!0,composed:!0,detail:{error:r}});this.dispatchEvent(o)}}}get buttonText(){return this._userAssignedProps.has(\"buttonText\")?this._internalButtonText:v(\"pay\",{id:\"pay\"})}set buttonText(t){let r=this.buttonText;t!==\"\"?(this._userAssignedProps.add(\"buttonText\"),this._internalButtonText=t):(this._userAssignedProps.delete(\"buttonText\"),this._internalButtonText=\"\"),this.requestUpdate(\"buttonText\",r)}get isButtonDisabled(){return!!(this.disabled||!this.vaultItemContext?.selectedVaultedPaymentMethod||this.vaultManager?.isLoading)}render(){let t=this.clientOptions?.submitButton?.amountVisible?this.headlessInstance?.getUIOrderAmount():null,r=t?` ${t}`:c;return d` <primer-button buttonType=\"submit\" variant=${this.variant} @click=${this.handleClick} .disabled=${this.isButtonDisabled} .loading=${this.sdkState?.isProcessing} data-submit > ${this.buttonText}${r} </primer-button> `}}"
        },
        {
          "kind": "variable",
          "name": "R",
          "default": "class extends h{constructor(){super();this.vaultManagerFormContext=null;this.vaultManagerCvvContext=null;this.computedStyles=null;this.paymentMethod=null;this.cvvError=null;this.cvvInputIsDirty=!1;this.cvvInputIsBlurred=!1;this.cvvInput=null;this._setupCVVIframe=new k(this,{task:async([t,r])=>!t||!r||t.paymentMethodType!==\"PAYMENT_CARD\"||!t.paymentInstrumentData?.network||r.createCvvInput===null?_:{network:t.paymentInstrumentData.network,createCvvInput:r.createCvvInput},args:()=>[this.paymentMethod,this.vaultManagerFormContext]});this.cvvContainerId=`cvv-container-${Math.random().toString(36).substring(2,9)}`,new k(this,{task:async([t])=>{if(!t)return _;await this.updateComplete;let r=this.renderRoot.querySelector(`#${this.cvvContainerId}`);if(!r)return;let o=kr(this.computedStyles),a=o?{input:{base:o}}:void 0,n={cardNetwork:t.network,container:r,name:\"cvv\",placeholder:\"123\",style:a};this.cvvInput=await t.createCvvInput?.(n)??null,this.cvvInput&&(this.cvvInput.focus(),this.cvvError=this.cvvInput.metadata.error||null,this.vaultManagerCvvContext?.setCvvInput(this.cvvInput),this.cvvInput.addListener(\"change\",()=>{this.onCvvInputChange()}),this.cvvInput.addListener(\"blur\",()=>{this.onBlur()}))},args:()=>[this._setupCVVIframe.value]})}disconnectedCallback(){super.disconnectedCallback(),this.cvvInput&&(this.cvvInput.remove(),this.cvvInput=null,this.cvvError=null,this.vaultManagerCvvContext?.setCvvInput(null))}onCvvInputChange(){!this.cvvInput||!this.vaultManagerCvvContext||(this.cvvInputIsDirty=!0,this.cvvError=this.cvvInput.metadata.error||null)}onBlur(){this.cvvInput&&(this.cvvInputIsBlurred=!0,this.cvvError=this.cvvInput.metadata.error||null)}render(){return this._setupCVVIframe.render({error:()=>c,complete:()=>d` <div class=\"cvv-input-container\"> <primer-input-wrapper .hasError=${!!this.cvvError&&(this.vaultManagerCvvContext?.formIsDirty||this.cvvInputIsDirty&&this.cvvInputIsBlurred)} > <primer-input-label slot=\"label\">CVV</primer-input-label> <div slot=\"input\" id=\"${this.cvvContainerId}\"></div> ${P(this.cvvError&&(this.vaultManagerCvvContext?.formIsDirty||this.cvvInputIsDirty&&this.cvvInputIsBlurred),()=>d` <primer-input-error slot=\"error\"> ${this.cvvError} </primer-input-error> `)} </primer-input-wrapper> </div> `})}}"
        },
        {
          "kind": "variable",
          "name": "ie",
          "default": "class extends h{constructor(){super(...arguments);this.hideLabels=!1;this.hasAssignedContent=!1;this.selectedCardNetwork=null;this.paymentManagers=new Map;this.cardFormProvider=new N(this,{context:Pr,initialValue:null});this.eventsController=new tt(this);this.setupCardFormTask=new k(this,{task:async([t])=>{if(!t?.manager)return _;let{manager:r}=t,{cardNumberInput:o,expiryInput:a,cvvInput:n}=r.createHostedInputs();return this.cardFormProvider.setValue({cardNumberInput:o,expiryInput:a,cvvInput:n,setCardholderName:m=>r.setCardholderName(m),setCardNetwork:m=>{this.selectedCardNetwork=m},validate:()=>r.validate(),submit:m=>r.submit(m),hideLabels:this.hideLabels}),!0},args:()=>[this.paymentManagers.get(\"PAYMENT_CARD\")]});this.handleSlotButtonClick=t=>{let o=t.target.closest(\"button, primer-button\");if(!o)return;this.isSubmitButton(o)&&(t.preventDefault(),this.submitCardPayment())};this.handleDirectSubmit=t=>{t.stopPropagation(),this.submitCardPayment()};this.onSlotChange=t=>{let o=t.target.assignedNodes({flatten:!0});this.hasAssignedContent=o.length>0};this.handleFormSubmit=t=>{t.preventDefault(),t.stopPropagation(),this.submitCardPayment()}}updated(t){super.updated(t),t.has(\"hideLabels\")&&this.cardFormProvider.value&&this.cardFormProvider.setValue({...this.cardFormProvider.value,hideLabels:this.hideLabels})}connectedCallback(){super.connectedCallback(),this.addEventListener(\"click\",this.handleSlotButtonClick),this.addEventListener(\"primer-form-submit\",this.handleDirectSubmit)}disconnectedCallback(){this.removeEventListener(\"click\",this.handleSlotButtonClick),this.removeEventListener(\"primer-form-submit\",this.handleDirectSubmit),super.disconnectedCallback()}isSubmitButton(t){let r=t.tagName.toLowerCase(),o=r===\"button\",a=r===\"primer-button\";return o&&(t.getAttribute(\"type\")===\"submit\"||t.hasAttribute(\"data-submit\"))||a&&(t.getAttribute(\"type\")===\"submit\"||t.hasAttribute(\"data-submit\"))}async submitCardPayment(){let t=this.cardFormProvider.value;if(!t)return;let r=await t.validate?.();if(r?.valid){let o=await t.submit?.(this.selectedCardNetwork?{cardNetwork:this.selectedCardNetwork}:void 0);this.eventsController.dispatchFormSubmitSuccess(o)}else{let o=r?.validationErrors;this.cardFormProvider.setValue({...t,errors:o}),this.eventsController.dispatchFormSubmitErrors(o)}}render(){return this.setupCardFormTask.status===$e.ERROR||this.setupCardFormTask.status===$e.INITIAL?c:d` <form @submit=${this.handleFormSubmit}> <slot name=\"card-form-content\" @slotchange=${this.onSlotChange}></slot> ${this.setupCardFormTask.render({complete:()=>P(this.hasAssignedContent,()=>c,()=>d` <div class=\"card-form\"> <primer-input-card-number></primer-input-card-number> <div class=\"card-form-row\"> <primer-input-card-expiry></primer-input-card-expiry> <primer-input-cvv></primer-input-cvv> </div> <primer-input-card-holder-name></primer-input-card-holder-name> </div> <primer-card-form-submit></primer-card-form-submit> `)})} </form> `}}"
        },
        {
          "kind": "variable",
          "name": "Ce",
          "default": "class extends Y{constructor(){super();this.config={inputType:\"cardNumber\",containerSelector:\"#cardNumber\",errorName:\"cardNumber-card\",translations:{label:{id:\"cardNumber\",defaultMessage:\"Card Number\"},placeholder:\"4111 1111 1111 1111\",ariaLabel:{id:\"cardNumber\",defaultMessage:\"Card Number\"}}};this.childUpdated()}handleNetworkSelected(t){let{network:r}=t.detail;this.cardFormContext&&this.cardFormContext.setCardNetwork(r)}renderInput(){if(this.hostedInputController.setupTask.status===$e.ERROR)return c;let t=this.getError();return d` <primer-input-wrapper .focusWithin=\"${this.hostedInputController.isFocused}\" .hasError=${!!t} > ${P(!this.cardFormContext?.hideLabels,()=>d`<primer-input-label slot=\"label\" >${this.label}</primer-input-label >`,()=>c)} <div slot=\"input\" class=\"card-number-container\" aria-label=\"${this.ariaLabel}\" > <div id=\"${this.config.containerSelector.substring(1)}\"></div> <div class=\"network-selector-container\"> <primer-card-network-selector @network-selected=${this.handleNetworkSelected} ></primer-card-network-selector> </div> </div> ${P(t,r=>d` <primer-input-error slot=\"error\"> ${v(r,{id:r})} </primer-input-error> `,()=>c)} </primer-input-wrapper> `}render(){return this.renderInput()}}"
        },
        {
          "kind": "variable",
          "name": "Ee",
          "default": "class extends Y{constructor(){super();this.config={inputType:\"cvv\",containerSelector:\"#cvv\",errorName:\"cvv-card\",translations:{label:\"CVV\",placeholder:\"123\"}};this.childUpdated()}render(){return this.renderInput()}}"
        },
        {
          "kind": "variable",
          "name": "Ae",
          "default": "class extends Y{constructor(){super();this.config={inputType:\"expire\",containerSelector:\"#expiry\",errorName:\"expiryDate-card\",translations:{label:{id:\"cardExpiry\",defaultMessage:\"Expiry Date\"},placeholder:{id:\"cardExpiryPlaceholder\",defaultMessage:\"MM/YY\"},ariaLabel:{id:\"cardExpiry\",defaultMessage:\"Expiry Date\"}}};this.childUpdated()}render(){return this.renderInput()}}"
        },
        {
          "kind": "variable",
          "name": "_e",
          "default": "class extends Y{constructor(){super();this.config={inputType:\"cardholderName\",containerSelector:\"#cardFormName\",errorName:\"cardholderName\",translations:{label:{id:\"cardholderNameLabel\",defaultMessage:\"Cardholder Name\"},placeholder:{id:\"cardholderNamePlaceholder\",defaultMessage:\"Name on card\"},ariaLabel:{id:\"cardholderNameLabel\",defaultMessage:\"Cardholder Name\"}},onInput:t=>this.handleInput(t)};this.childUpdated()}handleInput(t){this.cardFormContext?.setCardholderName?.(t)}render(){return this.renderInput()}}"
        },
        {
          "kind": "variable",
          "name": "z",
          "default": "class extends h{constructor(){super(...arguments);this._userAssignedProps=new Set;this._internalButtonText=\"\";this.headlessInstance=null;this.clientOptions=null;this.sdkState=null;this.variant=\"primary\";this.disabled=!1;this.handleClick=t=>{if(t.preventDefault(),this.disabled)return;let r=new CustomEvent(\"primer-form-submit\",{bubbles:!0,composed:!0,detail:{source:\"primer-card-form-submit\"}});this.dispatchEvent(r)}}get buttonText(){return this._userAssignedProps.has(\"buttonText\")?this._internalButtonText:v(\"pay\",{id:\"pay\"})}set buttonText(t){let r=this.buttonText;t!==\"\"?(this._userAssignedProps.add(\"buttonText\"),this._internalButtonText=t):(this._userAssignedProps.delete(\"buttonText\"),this._internalButtonText=\"\"),this.requestUpdate(\"buttonText\",r)}render(){let t=this.clientOptions?.submitButton?.amountVisible?this.headlessInstance?.getUIOrderAmount():null,r=t?` ${t}`:c;return d` <primer-button type=\"submit\" variant=${this.variant} ?disabled=${this.disabled} @click=${this.handleClick} .loading=${!!this.sdkState?.isProcessing} data-submit > ${this.buttonText}${r} </primer-button> `}}"
        },
        {
          "kind": "variable",
          "name": "U",
          "default": "class extends h{constructor(){super(...arguments);this.cardNetworks=null;this.headlessUtils=null;this.selectedCardNetwork=null;this.isDropdownOpen=!1;this.focusedNetworkIndex=0;this.isKeyboardNavigation=!1;this.buttonRef=ui();this.dropdownRef=ui();this.networkOptionRefs=[];this.handleClickOutside=t=>{this.isDropdownOpen&&(this.contains(t.target)||(this.isDropdownOpen=!1,this.isKeyboardNavigation=!1))};this.handleMouseMove=()=>{this.isKeyboardNavigation&&(this.isKeyboardNavigation=!1)};this.handleKeyDown=t=>{if(!(!(this.getSelectableNetworks().length>1)||!(this.contains(t.target)||this===t.target||this.isDropdownOpen&&t.target===document.body)))switch(this.isKeyboardNavigation=!0,t.key){case\"ArrowDown\":t.preventDefault(),this.isDropdownOpen?(this.focusedNetworkIndex=(this.focusedNetworkIndex+1)%this.getSelectableNetworks().length,this.focusNetworkOption()):(this.isDropdownOpen=!0,this.focusedNetworkIndex=this.getSelectedNetworkIndex());break;case\"ArrowUp\":t.preventDefault(),this.isDropdownOpen?(this.focusedNetworkIndex=(this.focusedNetworkIndex-1+this.getSelectableNetworks().length)%this.getSelectableNetworks().length,this.focusNetworkOption()):(this.isDropdownOpen=!0,this.focusedNetworkIndex=this.getSelectedNetworkIndex());break;case\"Enter\":case\" \":this.isDropdownOpen&&this.focusedNetworkIndex>=0?(t.preventDefault(),this.selectNetwork(t,this.getSelectableNetworks()[this.focusedNetworkIndex])):!this.isDropdownOpen&&this.buttonRef.value===document.activeElement&&(t.preventDefault(),this.isDropdownOpen=!0,this.focusedNetworkIndex=this.getSelectedNetworkIndex());break;case\"Escape\":this.isDropdownOpen&&(t.preventDefault(),this.isDropdownOpen=!1,this.buttonRef.value?.focus());break;case\"Tab\":this.isDropdownOpen&&(this.isDropdownOpen=!1);break}};this.handleDocumentKeyDown=t=>{this.isDropdownOpen&&this.handleKeyDown(t)}}toggleDropdown(t){this.isKeyboardNavigation=!1,t.stopPropagation(),this.getSelectableNetworks().length>1&&(this.isDropdownOpen=!this.isDropdownOpen,this.isDropdownOpen&&(this.focusedNetworkIndex=this.getSelectedNetworkIndex()))}getNetworkIconUrl(t){return this.headlessUtils?.getCardNetworkAsset(t.network)?.cardUrl}getSelectableNetworks(){return this.cardNetworks?.selectableCardNetworks||[]}getDetectedNetwork(){return this.selectedCardNetwork??(this.cardNetworks?.detectedCardNetwork||null)}getSelectedNetworkIndex(){let t=this.getDetectedNetwork();if(!t)return 0;let r=this.getSelectableNetworks().findIndex(o=>o.network===t.network);return r>=0?r:0}selectNetwork(t,r){t.stopPropagation(),this.selectedCardNetwork=r,this.isDropdownOpen=!1,this.buttonRef.value?.focus(),this.cardNetworks&&this.dispatchEvent(new CustomEvent(\"network-selected\",{detail:{network:r.network},bubbles:!0,composed:!0}))}focusNetworkOption(){requestAnimationFrame(()=>{this.networkOptionRefs[this.focusedNetworkIndex]&&this.networkOptionRefs[this.focusedNetworkIndex].focus()})}setNetworkOptionRef(t,r){this.networkOptionRefs[r]=t}connectedCallback(){super.connectedCallback(),setTimeout(()=>{document.addEventListener(\"click\",this.handleClickOutside),document.addEventListener(\"mousemove\",this.handleMouseMove),this.addEventListener(\"keydown\",this.handleKeyDown),document.addEventListener(\"keydown\",this.handleDocumentKeyDown)},0)}disconnectedCallback(){document.removeEventListener(\"click\",this.handleClickOutside),document.removeEventListener(\"keydown\",this.handleDocumentKeyDown),document.removeEventListener(\"mousemove\",this.handleMouseMove),this.removeEventListener(\"keydown\",this.handleKeyDown),super.disconnectedCallback()}render(){if(this.cardNetworks?.isLoading)return d`<primer-spinner size=\"small\" compact></primer-spinner>`;let t=this.getSelectableNetworks();if(!this.getDetectedNetwork()&&t.length===0)return d`<primer-icon name=\"payment-card\" size=\"sm\"></primer-icon>`;let r=this.getDetectedNetwork()||(t.length>0?t[0]:null);if(!r)return d`<primer-icon name=\"payment-card\" size=\"sm\"></primer-icon>`;let o=t.length>1;return d` <button ${$r(this.buttonRef)} class=\"network-selector\" @click=${this.toggleDropdown} @keydown=${a=>{(a.key===\" \"||a.key===\"Enter\")&&o&&(a.preventDefault(),this.isDropdownOpen=!this.isDropdownOpen,this.isDropdownOpen&&(this.focusedNetworkIndex=this.getSelectedNetworkIndex()))}} aria-label=${o?`Selected card network: ${r.displayName}. Click to change.`:`Card network: ${r.displayName}`} aria-expanded=${o?this.isDropdownOpen:c} aria-haspopup=${o?\"true\":c} aria-controls=${o?\"network-dropdown\":c} > <img class=\"network-icon\" src=${this.getNetworkIconUrl(r)} alt=${r.displayName} /> ${P(o,()=>d` <primer-icon class=\"caret ${this.isDropdownOpen?\"open\":\"\"}\" size=\"sm\" name=\"chevron-down\" ></primer-icon> `,()=>c)} </button> ${P(this.isDropdownOpen,()=>d` <div ${$r(this.dropdownRef)} id=\"network-dropdown\" class=\"dropdown open\" role=\"listbox\" aria-label=\"Select card network\" > ${t.map((a,n)=>d` <div ${$r(m=>this.setNetworkOptionRef(m,n))} class=\"network-option ${this.isKeyboardNavigation&&n===this.focusedNetworkIndex?\"focused\":\"\"}\" @click=${m=>this.selectNetwork(m,a)} @keydown=${m=>{(m.key===\"Enter\"||m.key===\" \")&&this.selectNetwork(m,a)}} role=\"option\" aria-selected=${a.network===r.network} tabindex=\"${n===this.focusedNetworkIndex?\"0\":\"-1\"}\" > <img class=\"network-option-icon\" src=${this.getNetworkIconUrl(a)} alt=${a.displayName} /> <span class=\"network-name\">${a.displayName}</span> ${P(a.network===r.network,()=>d` <primer-icon class=\"checkmark\" name=\"checkmark\" size=\"sm\" ></primer-icon> `,()=>c)} </div> `)} </div> `,()=>c)} `}}"
        },
        {
          "kind": "variable",
          "name": "De",
          "default": "class extends h{constructor(){super(...arguments);this.vaultManager=null}render(){return this.vaultManager?.isLoading?c:!this.vaultManager||!this.vaultManager.enabled?d`<slot name=\"other-payments\"></slot>`:d` <div class=\"other-payment-methods-container\"> <primer-collapsable buttonVariant=\"secondary\" .expanded=\"${this.vaultManager?.vaultedPaymentMethods.length===0}\" .header=\"${v(\"navigateToPaymentMethods\",{id:\"navigateToPaymentMethods\"})}\" > <div class=\"other-payment-methods-content\"> <slot name=\"other-payments\"></slot> </div> </primer-collapsable> </div> `}}"
        },
        {
          "kind": "variable",
          "name": "le",
          "default": "class extends h{constructor(){super();this.paymentManagers=new Map;this.computedStyles=null;this._buttonId=\"button-container\";this.loadManagerTask=new k(this,{args:()=>[this.paymentMethod?.type],task:async([t])=>{if(!t)return _;let r=this.paymentManagers.get(t)?.manager;if(!r)throw new Error(`No manager found for payment method type ${t}`);return r}}),new k(this,{args:()=>[this.loadManagerTask.value],task:async([t])=>{if(!t)return _;await this.updateComplete;let r=this.shadowRoot?.getElementById(this._buttonId);if(!r)return;let o=this.calculateButtonHeight(),a=t.createButton(),n=this.createRenderOptions(o);return await a.render(this.paymentMethod?.type===\"GOOGLE_PAY\"?this.shadowRoot?.getRootNode():r,n),t}})}calculateButtonHeight(){if(typeof window>\"u\"||!this.isConnected||!this.computedStyles)return 0;let t=parseFloat(this.computedStyles.getPropertyValue(\"--primer-typography-title-large-line-height\")),r=parseFloat(this.computedStyles.getPropertyValue(\"--primer-space-medium\"));return t+2*r}createRenderOptions(t){let r=this.paymentMethod?.type;return r===\"GOOGLE_PAY\"?{style:{shadowRoot:!0}}:r===\"APPLE_PAY\"?{style:{buttonHeight:t}}:r===\"PAYPAL\"?{style:{buttonHeight:t}}:{style:{buttonHeight:t}}}updated(t){t.has(\"paymentMethod\")&&this.paymentMethod&&(this._buttonId=`button-container-${this.paymentMethod.type}`)}render(){return this.loadManagerTask.render({error:()=>c,complete:()=>d` <!-- The native button container is rendered first --> <div class=\"native-button-container\" id=\"${this._buttonId}\"></div> `,pending:()=>c})}}"
        },
        {
          "kind": "variable",
          "name": "pt",
          "default": "class extends h{render(){return d` <primer-checkout-state type=\"complete\"></primer-checkout-state> `}}"
        },
        {
          "kind": "variable",
          "name": "et",
          "default": "class extends h{constructor(){super(...arguments);this.sdkState=null}render(){return d` <primer-checkout-state type=\"failure\" description=${this.sdkState?.error?.message||\"\"} ></primer-checkout-state> `}}"
        },
        {
          "kind": "variable",
          "name": "Me",
          "default": "class extends h{constructor(){super(...arguments);this.showProcessingErrors=!0}get shouldShowError(){return!this.sdkState||this.sdkState.isProcessing?!1:!!(this.sdkState.failure&&this.showProcessingErrors)}render(){return this.sdkState?d` <primer-error-message message=\"${v(this.sdkState.failure?.message??\"\",{id:\"tokenizationError\"})}\" ?visible=\"${this.shouldShowError}\" ></primer-error-message> `:c}}"
        },
        {
          "kind": "variable",
          "name": "Se",
          "default": "class extends h{constructor(){super(...arguments);this.hasAssignedContent=!1;this.onSlotChange=t=>{let o=t.target.assignedNodes({flatten:!0});this.hasAssignedContent=o.length>0,this.requestUpdate()};this.paymentMethods=null;this.sdkState=null}render(){return this.sdkState?.isSuccessful?d` <slot name=\"checkout-complete\"> <primer-checkout-complete></primer-checkout-complete> </slot> `:d` <slot name=\"payments\" @slotchange=${this.onSlotChange}></slot> ${P(this.hasAssignedContent,()=>c,()=>d` <div class=${V({\"primer-is-processing\":!!this.sdkState?.isProcessing})} > <primer-vault-manager></primer-vault-manager> <primer-show-other-payments> <div slot=\"other-payments\" class=\"primer-main-list\"> ${this.paymentMethods?.toArray().map(t=>d` <primer-payment-method type=${t.type} ></primer-payment-method> `)} </div> </primer-show-other-payments> <primer-error-message-container></primer-error-message-container> </div> `)} `}}"
        },
        {
          "kind": "function",
          "name": "qE"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "e",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "e",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "q",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "G",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "ie",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCVV",
          "declaration": {
            "name": "Ee",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCardNetworkSelector",
          "declaration": {
            "name": "U",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCardNumber",
          "declaration": {
            "name": "Ce",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormError",
          "declaration": {
            "name": "fe",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormExpiry",
          "declaration": {
            "name": "Ae",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormName",
          "declaration": {
            "name": "_e",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "z",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "K",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "Ge",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "Q",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "ee",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "Me",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "InitializedPayments",
          "declaration": {
            "name": "sr",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "T",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "ge",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "ae",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "le",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "ye",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "Ne",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "pt",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComponent",
          "declaration": {
            "name": "X",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutFailure",
          "declaration": {
            "name": "et",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutState",
          "declaration": {
            "name": "ve",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerIcon",
          "declaration": {
            "name": "se",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerKlarna",
          "declaration": {
            "name": "H",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "Se",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "te",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "De",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "oe",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultCvvInput",
          "declaration": {
            "name": "R",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultDeleteConfirmation",
          "declaration": {
            "name": "Z",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultEmptyState",
          "declaration": {
            "name": "xe",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultErrorMessage",
          "declaration": {
            "name": "ne",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "W",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerHeader",
          "declaration": {
            "name": "re",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultPaymentMethodItem",
          "declaration": {
            "name": "j",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultPaymentSubmit",
          "declaration": {
            "name": "O",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "injectDarkTheme",
          "declaration": {
            "name": "Za",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "injectLightTheme",
          "declaration": {
            "name": "Wa",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "injectLoaderStyles",
          "declaration": {
            "name": "to",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "injectThemeStyles",
          "declaration": {
            "name": "ro",
            "module": "dist/primer-loader.js"
          }
        },
        {
          "kind": "js",
          "name": "loadPrimer",
          "declaration": {
            "name": "qE",
            "module": "dist/primer-loader.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/primer-react-wrappers.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{detectedCardNetwork:null,selectableCardNetworks:[],isLoading:!0}"
        },
        {
          "kind": "variable",
          "name": "_a"
        },
        {
          "kind": "variable",
          "name": "Pa"
        },
        {
          "kind": "variable",
          "name": "ka"
        },
        {
          "kind": "variable",
          "name": "La"
        },
        {
          "kind": "variable",
          "name": "Ra"
        },
        {
          "kind": "variable",
          "name": "Va"
        },
        {
          "kind": "variable",
          "name": "Ba"
        },
        {
          "kind": "variable",
          "name": "ja"
        },
        {
          "kind": "variable",
          "name": "Wa"
        },
        {
          "kind": "variable",
          "name": "Qa"
        },
        {
          "kind": "variable",
          "name": "es"
        },
        {
          "kind": "variable",
          "name": "os"
        },
        {
          "kind": "variable",
          "name": "ns"
        },
        {
          "kind": "variable",
          "name": "ps"
        },
        {
          "kind": "variable",
          "name": "hs"
        },
        {
          "kind": "variable",
          "name": "gs"
        },
        {
          "kind": "variable",
          "name": "As"
        },
        {
          "kind": "variable",
          "name": "Ss"
        },
        {
          "kind": "variable",
          "name": "Ms"
        },
        {
          "kind": "variable",
          "name": "$s"
        },
        {
          "kind": "variable",
          "name": "Is"
        },
        {
          "kind": "variable",
          "name": "Ds"
        },
        {
          "kind": "variable",
          "name": "Hs"
        },
        {
          "kind": "variable",
          "name": "Bs"
        },
        {
          "kind": "variable",
          "name": "js"
        },
        {
          "kind": "variable",
          "name": "Ws"
        },
        {
          "kind": "variable",
          "name": "Qs"
        },
        {
          "kind": "variable",
          "name": "en"
        },
        {
          "kind": "variable",
          "name": "an"
        },
        {
          "kind": "variable",
          "name": "ln"
        },
        {
          "kind": "variable",
          "name": "cn"
        },
        {
          "kind": "variable",
          "name": "kn"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "t",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "t",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "ps",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "ns",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "hs",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "gs",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "CardNetworkSelector",
          "declaration": {
            "name": "As",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "CheckoutState",
          "declaration": {
            "name": "Pa",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "ka",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "La",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "Ds",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "Ra",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "Hs",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Icon",
          "declaration": {
            "name": "Va",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "Ba",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputCardExpiry",
          "declaration": {
            "name": "Ms",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputCardHolderName",
          "declaration": {
            "name": "Ss",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputCardNumber",
          "declaration": {
            "name": "Is",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputCvv",
          "declaration": {
            "name": "$s",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputError",
          "declaration": {
            "name": "ja",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "Wa",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "Qa",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Klarna",
          "declaration": {
            "name": "Bs",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "js",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "Ws",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "es",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckout",
          "declaration": {
            "name": "_a",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "Qs",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutError",
          "declaration": {
            "name": "en",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "an",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "ln",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "cn",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "os",
            "module": "dist/primer-react-wrappers.js"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "kn",
            "module": "dist/primer-react-wrappers.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/base.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "base",
          "default": "css` * { box-sizing: border-box; } `"
        },
        {
          "kind": "variable",
          "name": "primerCheckout",
          "default": "css` :host { display: block; isolation: isolate; position: relative; width: 100%; //Keep the CSS loader in the same position - check css-loader-inline.ts min-height: 64px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "base",
          "declaration": {
            "name": "base",
            "module": "src/base.styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "primerCheckout",
          "declaration": {
            "name": "primerCheckout",
            "module": "src/base.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/payments-objects"
          }
        },
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "Spinner",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "InputWrapper",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "InputLabel",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "CardFormError",
          "declaration": {
            "name": "CardFormError",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "PrimerIcon",
          "declaration": {
            "name": "PrimerIcon",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutState",
          "declaration": {
            "name": "PrimerCheckoutState",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "Input",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "Collapsable",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "ErrorMessage",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "Portal",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "Dialog",
            "module": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "PrimerKlarna",
          "declaration": {
            "name": "PrimerKlarna",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "PaymentMethod",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "AchPayment",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "DynamicPayment",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "RedirectPayment",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "VaultManager",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "CardForm",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "PrimerMain",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "NativePayment",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "ShowOtherPayments",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "PrimerCheckoutComplete",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutFailure",
          "declaration": {
            "name": "PrimerCheckoutFailure",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "ErrorMessageContainer",
            "module": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutOptions",
          "declaration": {
            "name": "PrimerCheckoutOptions",
            "module": "./types/sdk"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComponent",
          "declaration": {
            "name": "PrimerCheckoutComponent",
            "module": "src/components.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectLoaderStyles",
          "declaration": {
            "name": "injectLoaderStyles",
            "module": "src/components.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectThemeStyles",
          "declaration": {
            "name": "injectThemeStyles",
            "module": "src/components.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectLightTheme",
          "declaration": {
            "name": "injectLightTheme",
            "module": "src/components.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectDarkTheme",
          "declaration": {
            "name": "injectDarkTheme",
            "module": "src/components.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/consts.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "legacySdkCdnUrl"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "legacySdkCdnUrl",
          "declaration": {
            "name": "legacySdkCdnUrl",
            "module": "src/consts.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/css-loader-inline.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "cssLoaderStyles",
          "default": "` @keyframes primer-css-spinner-rotate { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } primer-checkout:has(:not(:defined)) > * { visibility: hidden; } primer-checkout:not([js-initialized]) { display: block; position: relative; width: 100%; min-height: 64px; } primer-checkout:not([js-initialized]):not([loader-disabled])::after { content: \"\"; display: block; box-sizing: border-box; position: absolute; inset: 0; margin: auto; width: var(--primer-size-xlarge); height: var(--primer-size-xlarge); border-radius: 50%; border: 3px solid #f5f5f5; border-top-color: var(--primer-color-loader); animation: primer-css-spinner-rotate 1.2s linear infinite; z-index: 9999; } `",
          "description": "This module exports the CSS loader styles as a string for inline injection.\nThese styles are injected into the page before any JavaScript loads,\nensuring the loading indicator appears immediately."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cssLoaderStyles",
          "declaration": {
            "name": "cssLoaderStyles",
            "module": "src/css-loader-inline.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/loader.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "loadPrimer",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          },
          "description": "Main function to load the Primer SDK with all required dependencies and styles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/payments-objects"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./atoms"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./containers"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutOptions",
          "declaration": {
            "name": "PrimerCheckoutOptions",
            "module": "./types/sdk"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComponent",
          "declaration": {
            "name": "PrimerCheckoutComponent",
            "module": "src/loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectLoaderStyles",
          "declaration": {
            "name": "injectLoaderStyles",
            "module": "src/loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectThemeStyles",
          "declaration": {
            "name": "injectThemeStyles",
            "module": "src/loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectLightTheme",
          "declaration": {
            "name": "injectLightTheme",
            "module": "src/loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectDarkTheme",
          "declaration": {
            "name": "injectDarkTheme",
            "module": "src/loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "loadPrimer",
          "declaration": {
            "name": "loadPrimer",
            "module": "src/loader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/primer-checkout.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "PrimerCheckoutComponent implements the main checkout experience.\nThis component includes a CSS-only loader that displays before the JavaScript\nis fully loaded, ensuring users see a loading indicator immediately.\n\nThe loader can be disabled by:\n1. Adding the 'loader-disabled' attribute to the component\n2. Setting the CSS custom property --primer-loader-disabled: 1",
          "name": "PrimerCheckoutComponent",
          "members": [
            {
              "kind": "field",
              "name": "jsInitialized",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "customStyles",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "customStyles"
            },
            {
              "kind": "field",
              "name": "clientToken",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "clientToken"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "PrimerCheckoutOptions"
              },
              "default": "{}",
              "attribute": "options"
            },
            {
              "kind": "field",
              "name": "_jsInitialized",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Whether the component has completed initialization and loading\nThis is used to control the CSS-only loader visibility",
              "attribute": "_jsInitialized",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "previousLoadingState",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "hasAssignedContent",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_loadingTimeoutId",
              "type": {
                "text": "number | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "locale",
              "type": {
                "text": "LocaleCode | undefined"
              },
              "default": "'en-GB'"
            },
            {
              "kind": "field",
              "name": "onSlotChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "sdkContextController",
              "type": {
                "text": "SDKContextController"
              },
              "default": "new SDKContextController(this)"
            },
            {
              "kind": "field",
              "name": "sdkStateController",
              "type": {
                "text": "SdkStateController"
              },
              "default": "new SdkStateController(this)"
            },
            {
              "kind": "field",
              "name": "primerEventsController",
              "type": {
                "text": "PrimerEventsController"
              },
              "default": "new PrimerEventsController(this)"
            },
            {
              "kind": "field",
              "name": "styleProcessingController",
              "type": {
                "text": "StyleProcessingController"
              },
              "default": "new StyleProcessingController(this)"
            },
            {
              "kind": "field",
              "name": "vaultManagerController",
              "type": {
                "text": "VaultManagerController"
              },
              "default": "new VaultManagerController(this)"
            },
            {
              "kind": "field",
              "name": "cardNetworkController",
              "type": {
                "text": "CardNetworkController"
              },
              "default": "new CardNetworkController(this)"
            },
            {
              "kind": "field",
              "name": "achPaymentEventsController",
              "type": {
                "text": "AchPaymentEventsController"
              },
              "default": "new AchPaymentEventsController(this)"
            },
            {
              "kind": "method",
              "name": "checkLoadingStateChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Check if the loading state has changed and update the CSS loader visibility accordingly.\nThis method is called after each update cycle to detect when loading is complete."
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(\n      this: PrimerCheckoutComponent,\n      ev: HTMLElementEventMap[K],\n    ) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(\n      this: PrimerCheckoutComponent,\n      ev: ShadowRootEventMap[K],\n    ) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(this: PrimerCheckoutComponent, ev: DocumentEventMap[K]) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(this: PrimerCheckoutComponent, ev: PrimerEvents[K]) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(\n      this: PrimerCheckoutComponent,\n      ev: HTMLElementEventMap[K],\n    ) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | EventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(\n      this: PrimerCheckoutComponent,\n      ev: ShadowRootEventMap[K],\n    ) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | EventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(this: PrimerCheckoutComponent, ev: DocumentEventMap[K]) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | EventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(this: PrimerCheckoutComponent, ev: PrimerEvents[K]) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | EventListenerOptions"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "EventListenerOrEventListenerObject"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | EventListenerOptions"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "customStyles",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "customStyles"
            },
            {
              "name": "clientToken",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "clientToken"
            },
            {
              "name": "options",
              "type": {
                "text": "PrimerCheckoutOptions"
              },
              "default": "{}",
              "fieldName": "options"
            },
            {
              "name": "_jsInitialized",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the component has completed initialization and loading\nThis is used to control the CSS-only loader visibility",
              "fieldName": "_jsInitialized"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-checkout",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutComponent",
          "declaration": {
            "name": "PrimerCheckoutComponent",
            "module": "src/primer-checkout.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-checkout",
          "declaration": {
            "name": "PrimerCheckoutComponent",
            "module": "src/primer-checkout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-wrappers.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./react-components"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "injectLoaderStyles",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Injects the CSS loader styles into the page\nThese styles display a loading indicator before JavaScript initializes\n\nUnlike theme styles, loader styles should take precedence over merchant styles\nto ensure the loading indicator is visible. We append them to the end of the head."
        },
        {
          "kind": "function",
          "name": "injectThemeStyles",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Injects all required theme CSS variables into the page\nThis should be called before components are rendered to ensure\nthey have access to all design tokens\n\nTheme styles are prepended to the document head to allow merchant styles\nto override our default variables."
        },
        {
          "kind": "function",
          "name": "injectLightTheme",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Utility function to inject only the light theme CSS variables"
        },
        {
          "kind": "function",
          "name": "injectDarkTheme",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Utility function to inject only the dark theme CSS variables"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "injectLoaderStyles",
          "declaration": {
            "name": "injectLoaderStyles",
            "module": "src/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectThemeStyles",
          "declaration": {
            "name": "injectThemeStyles",
            "module": "src/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectLightTheme",
          "declaration": {
            "name": "injectLightTheme",
            "module": "src/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectDarkTheme",
          "declaration": {
            "name": "injectDarkTheme",
            "module": "src/styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ar.6MRFCKX4.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/ar.6MRFCKX4.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/bg.HRSMU7Y5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/bg.HRSMU7Y5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ca.3FSHJL7U.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/ca.3FSHJL7U.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/chunk.I6YWTZRK.js",
      "declarations": [
        {
          "kind": "function",
          "name": "j",
          "parameters": [
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "k",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "a"
            },
            {
              "name": "c"
            },
            {
              "name": "e"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "j",
            "module": "cdn/chunks/chunk.I6YWTZRK.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "k",
            "module": "cdn/chunks/chunk.I6YWTZRK.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/chunk.QMLIEEKM.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{accountHolder:\"Account Holder\",accountHolderEmail:\"me@domain.com\",accountHolderEmailErrorInvalid:\"Provided email is not valid\",accountHolderEmailErrorRequired:\"Account holder email is required\",accountHolderName:\"Account holder name\",accountHolderNameErrorRequired:\"Account holder name is required\",accountHolderNameLabel:\"Account holder name\",accountHolderNamePlaceholder:\"Account holder name\",addCard:\"Add Card\",additionalCardFees:\"Additional card fees may apply\",address:\"Address\",addressLine1:\"Address line 1\",addressLine1ErrorRequired:\"Address line 1 is required\",addressLine1Placeholder:\"Address line 1\",addressLine2:\"Address line 2\",addressLine2ErrorRequired:\"Address line 2 is required\",addressLine2Placeholder:\"Address line 2\",amount:\"Amount\",applePayFailedToTokenize:\"Failed to tokenize\",applePayMissingFirstNameOrLastName:\"Missing first name or last name\",bankHolderNameErrorRequired:\"Account holder name is required\",bankListErrorRequired:\"Bank is required\",bankListLabel:\"List of banks\",bankNameErrorRequired:\"Bank name is required\",bankNameLabel:\"Select your bank from the list\",bankNetworkErrorButton:\"Load again\",bankNetworkErrorTitle:\"Failed to load banks. Check your connection and try again.\",bankSearchInputPlaceholder:\"Search bank\",bankSelectTitle:\"Select your bank\",billingAddressLabel:\"Billing address\",cancel:\"Cancel\",cardCVV:\"CVV\",cardDescription:\"Card description (optional)\",cardDescriptionPlaceholder:\"My favourite card\",cardEndingWith:\"Card ending with\",cardExpired:\"Card has expired\",cardExpiry:\"Expiry (MM/YY)\",cardExpiryPlaceholder:\"MM/YY\",cardholderName:\"Name on card\",cardholderNameErrorRequired:\"Name on card is required\",cardholderNameLabel:\"Name on card\",cardholderNamePlaceholder:\"Full name\",cardIncomplete:\"Card number is incomplete\",cardInvalid:\"Card number is invalid\",cardNameContainsNumbers:\"Name cannot contain numbers\",cardNameLength:\"Name must have between 2 and 45 characters\",cardNameRequired:\"Name on card is required\",cardNumber:\"Card number\",cardRequired:\"Card number is required\",checkSuccessTitle:\"Your payment was successful!\",checkoutWith:\"Checkout with\",chooseAnotherPaymentMethod:\"Choose another payment method\",city:\"City\",cityErrorRequired:\"City is required\",cityLabel:\"City\",cityPlaceholder:\"Cape Town\",completeYourPayment:\"Complete your payment\",completeYourPaymentInTheApp:\"Complete your payment in %s\",confirm:\"Confirm\",confirmCardDeletion:\"Confirm - Delete Card\",confirmPayPalDeletion:\"Confirm - Delete PayPal\",confirmVaultedPaymentMethodDeletion:\"Yes, delete it\",countryCodeErrorRequired:\"Country is required\",countryCodeLabel:\"Country code\",countryCodePlaceholder:\"Country code\",countrySelectPlaceholder:\"Select a country\",creditOrDebitCard:\"Credit or debit card\",creditTransfer:\"Credit Transfer\",cvvIncomplete:\"CVV number is incomplete\",cvvInvalid3:\"CVV must be 3 digits\",cvvInvalid4:\"CVV must be 4 digits\",cvvRequired:\"CVV number is required\",delete:\"Delete\",digits:\"digits\",directDebit:\"Direct debit\",directDebitMandateTitle:\"SEPA Core Direct Debit Mandate\",directDebitSmallPrint:\"By signing this mandate form, you authorise (A) {companyName} to send instructions to your bank to debit your account and (B) your bank to debit your account in accordance with the instruction from {companyName}\",directDebitSuccessDescription:\"{companyName} will appear on your bank statement when payments are taken against the Direct Debit\",directDebitSuccessReference:\"Reference\",directDebitSuccessTitle:\"Direct Debit set up successfully\",dueAt:\"Due at\",dummyApmDescription:\"This is a mocked flow for sandbox. Choose the result you want to test from the list below:\",duplicatePaymentMethodError:\"This payment method is already saved.\",editPaymentMethods:\"Edit saved payment methods\",email:\"Email\",entity:\"Entity\",expiresAt:\"Expires at\",expiryIncomplete:\"Expiry date is incomplete\",expiryInvalid:\"Expiry date is invalid\",expiryMonthInvalid:\"Expiry date month is invalid\",expiryRequired:\"Expiry date is required\",expiryYearInvalid:\"Expiry date year is invalid\",fee_label_fallback:\"Fee\",firstNameErrorRequired:\"First name is required\",firstNameLabel:\"First name\",firstNamePlaceholder:\"First name\",forgetPaymentMethods:\"Forget payment methods\",forgetPayPal:\"Forget PayPal account\",forgetSavedCard:\"Forget saved card ending in {last4Digits}\",fullName:\"First and last name\",getCodeFromBankingApp:\"Get the code from your banking app\",giftCard:\"Gift card\",iban:\"IBAN\",ibanErrorInvalid:\"IBAN is invalid\",ibanErrorRequired:\"IBAN is required\",ibanPlaceholder:\"e.g. GB60 BARC 2000 0055 7799 11\",invalid:\"Invalid\",item_label_fallback:\"Item\",lastNameErrorRequired:\"Last name is required\",lastNameLabel:\"Last name\",lastNamePlaceholder:\"Last name\",loading:\"Loading...\",managePaymentMethods:\"Manage your payment methods\",multibancoFirstStep:\"Payment details for a Multibanco Reference will be created.\",multibancoPayWith:\"Pay with Multibanco\",multibancoPleaseMakePayment:\"Please make the payment at a Multibanco ATM, or through your home banking app.\",multibancoSecondStep:\"Go to a Multibanco ATM or login to your home banking app, then select \\u201CPay for Services\\u201D.\",multibancoThirdStep:\"Enter the Entity, Reference and Amount.\",navigateToPaymentMethods:\"Show other ways to pay\",newPaymentMethod:\"Add a new payment method\",noAdditionalFees:\"No additional fees\",otherWaysToPay:\"Other ways to pay\",pay_with_ach:\"Pay with ACH\",pay_with:\"Pay with\",pay:\"Pay\",payByCard:\"Pay by card\",payByImmediateTransfer:\"Pay by Immediate transfer\",payBySmartTransfer:\"Pay by Bank transfer\",payInInstallments:\"Pay in installments\",paymentMethodPopupLoadingScreenText:\"Hold on! {paymentMethodName} is loading.\",paymentMethodPopupOverlayBringBackThePaymentPage:\"Bring back the payment page\",paymentMethodPopupOverlayClose:\"Close\",paymentMethodPopupOverlayDescription:\"Having trouble viewing the {paymentMethodName} payment page? We'll help you find it!\",paymentMethodPopupOverlayNonFocusDescription:\"Open the {paymentMethodName} payment page to review your payment.\",paymentMethodTypeKlarna:\"Pay later\",paymentMethodTypeKlarnaAccount:\"Pay over time\",paymentMethodTypeKlarnaPaynow:\"Pay now\",payViaBankTransfer:\"Pay via bank transfer\",payWithAch:\"Pay with ACH\",payWithCard:\"Or pay with card\",payWithCrypto:\"Pay with crypto\",pleaseTransferFunds:\"Please Transfer funds to the provided DBS bank account using your Singapore based bank account via FAST (preferred), MEPS or GIRO.\",postalCode:\"Postal code\",postalCodeErrorRequired:\"Postal code is required\",postalCodeLabel:\"Postal code\",postalCodePlaceholder:\"90210\",previouslyUsed:\"Previously used:\",qrCode:\"QR Code\",reference:\"Reference\",required:\"Required\",retry_button:\"Retry\",savedPaymentMethodsEmpty:\"Enter your card details below to add a new payment method\",savePaymentMethod:\"Save payment method\",scanToPay:\"Scan to pay or take a screenshot\",sepaCreditTransfer:\"SEPA Credit Transfer\",sepaDirectDebit:\"SEPA Direct Debit\",session_complete_payment_cancellation_title:\"Payment cancelled\",session_complete_payment_failure_title:\"Payment failed\",session_complete_payment_success_title:\"Payment authorized\",setUpDirectDebit:\"Set up Direct Debit\",shipping_address_unsupported_error:\"We do not ship to this address\",shipping:\"Shipping\",showPaymentDetails:\"Show payment details\",sixDigitCodeErrorNumeric:\"Six digit code should only contain numbers\",sixDigitCodeErrorRequired:\"Six digit code is required\",sixDigitCodeErrorTooShort:\"Code is too short\",sixDigitCodeLabel:\"Six digit code\",sixDigitCodePlaceholder:\"123456\",something_went_wrong_error:\"Something went wrong. Please try again.\",stateErrorRequired:\"State, Region or County is required\",stateLabel:\"State / Region / County\",statePlaceholder:\"State / Region / County\",street:\"Street\",streetPlaceholder:\"My street\",stripe_ach_mandate_accept_button:\"Accept\",stripe_ach_mandate_cancel_payment_button:\"Cancel payment\",stripe_ach_mandate_not_accepted_description:\"Mandate was not accepted\",stripe_ach_mandate_template_web:`By clicking Accept, you authorize {merchantName} to debit the selected bank account for any amount owed for charges arising from your use of {merchantName}\\u2019s services and/or purchase of products from {merchantName}, pursuant to {merchantName}\\u2019s website and terms, until this authorization is revoked. You may amend or cancel this authorization at any time by providing notice to {merchantName} with 30 (thirty) days notice. If you use {merchantName}\\u2019s services or purchase additional products periodically pursuant to {merchantName}\\u2019s terms, you authorize {merchantName} to debit your bank account periodically. Payments that fall outside the regular debits authorized above will only be debited after your authorization is obtained.`,stripe_ach_payment_request_cancelled:\"Please try again or select another bank\",stripe_ach_payment_request_completed_successfully:\"You have now authorized your bank account to be debited. You will be notified via email once the payment has been collected successfully.\",stripe_ach_user_details_collection_continue_button:\"Continue\",stripe_ach_user_details_collection_data_usage_label:\"We'll only use this to keep you updated about your payment\",stripe_ach_user_details_collection_email_address_label:\"Email address\",stripe_ach_user_details_collection_first_name_label:\"First name\",stripe_ach_user_details_collection_invalid_email_address:\"The email address you entered doesn't look like a real email address. Please make sure it includes an '@' and a domain (like '@example.com').\",stripe_ach_user_details_collection_invalid_first_name:\"Please enter a valid first name. Avoid using numbers or special characters.\",stripe_ach_user_details_collection_invalid_last_name:\"Please enter a valid last name. Avoid using numbers or special characters.\",stripe_ach_user_details_collection_last_name_label:\"Last name\",stripe_ach_user_details_collection_subtitle_label:\"Your personal details\",suburb:\"Suburb\",suburbPlaceholder:\"My suburb\",telephoneNumberErrorRequired:\"Phone number is required\",telephoneNumberErrorTooShort:\"Phone number is too short\",telephoneNumberLabel:\"Phone number\",telephoneNumberPlaceholder:\"123xxxxxx\",timeOnDate:\"{time} on {date}\",tokenizationError:\"Your payment could not be processed. Please try another payment method.\",unsupportedCardType:\"Unsupported card type\",uploadScreenshot:\"Upload the screenshot in your banking app\",yourBankDetails:\"Your bank details\"}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/chunk.QMLIEEKM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/cs.WAO4WFS3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "cdn/chunks/cs.WAO4WFS3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/da.4OFYGDVA.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "cdn/chunks/da.4OFYGDVA.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/de.3FZS52IN.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/de.3FZS52IN.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/el.A4R7VG5T.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/el.A4R7VG5T.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/en-GB.ILZ7SXSW.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "t"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/en-GB.ILZ7SXSW.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/en.7GZJA7MN.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "t"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/en.7GZJA7MN.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/es-AR.QKHDL4JV.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/es-AR.QKHDL4JV.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/es-MX.GG7MJMG2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/es-MX.GG7MJMG2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/es.FEZ6BF3S.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/es.FEZ6BF3S.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/et-EE.FJLPTMF3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "cdn/chunks/et-EE.FJLPTMF3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/fi-FI.DM5R27A5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "cdn/chunks/fi-FI.DM5R27A5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/fr.YZV52NTA.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/fr.YZV52NTA.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/he.6SCF3XZZ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/he.6SCF3XZZ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/hr.PPDZ7AAS.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/hr.PPDZ7AAS.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/hu.6WOPSGLW.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "s",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "s",
            "module": "cdn/chunks/hu.6WOPSGLW.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/id.NS22WGWL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "cdn/chunks/id.NS22WGWL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/it.42TO3R4G.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "cdn/chunks/it.42TO3R4G.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ja.UEGHEUAP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/ja.UEGHEUAP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ko.HTMDY6RY.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/ko.HTMDY6RY.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/lt-LT.4U3GBQTQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/lt-LT.4U3GBQTQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/lt.73ME4TDM.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/lt.73ME4TDM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/lv-LV.JRWO2BF6.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/lv-LV.JRWO2BF6.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/lv.KROS45TV.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/lv.KROS45TV.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ms.HE3SWJFQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/ms.HE3SWJFQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/nb.TR6TEKBY.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "cdn/chunks/nb.TR6TEKBY.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/nl.V5QP6OXL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "cdn/chunks/nl.V5QP6OXL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/nl_NL.FCVWIF3Y.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "cdn/chunks/nl_NL.FCVWIF3Y.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/pl.DQZDG7LR.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/pl.DQZDG7LR.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/pt-BR.CR4ROBVE.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/pt-BR.CR4ROBVE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/pt.JRWVFJPX.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "cdn/chunks/pt.JRWVFJPX.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ro.NRMWYY3F.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "cdn/chunks/ro.NRMWYY3F.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/ru.OWSKHXVO.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/ru.OWSKHXVO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/sk.YGBRNNWT.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "cdn/chunks/sk.YGBRNNWT.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/sl.IRTDTNTP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "cdn/chunks/sl.IRTDTNTP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/sr-RS.AWGLHKVE.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/sr-RS.AWGLHKVE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/sv.O4BXFGNF.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "cdn/chunks/sv.O4BXFGNF.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/th.GZCEBRT2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/th.GZCEBRT2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/tr.ZDILMEEO.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "cdn/chunks/tr.ZDILMEEO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/uk-UA.JUUBOEW3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/uk-UA.JUUBOEW3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/vi.IN7CFTLL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "n"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "cdn/chunks/vi.IN7CFTLL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/zf.YT47ULXR.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "t"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "cdn/chunks/zf.YT47ULXR.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/zh-CN.RBRAS4RP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/zh-CN.RBRAS4RP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/zh-HK.4CK7LBWM.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/zh-HK.4CK7LBWM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "cdn/chunks/zh-TW.374TMWNJ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "cdn/chunks/zh-TW.374TMWNJ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ar.6MRFCKX4.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/ar.6MRFCKX4.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/bg.HRSMU7Y5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/bg.HRSMU7Y5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ca.3FSHJL7U.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/ca.3FSHJL7U.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/chunk.I6YWTZRK.js",
      "declarations": [
        {
          "kind": "function",
          "name": "j",
          "parameters": [
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "k",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "a"
            },
            {
              "name": "c"
            },
            {
              "name": "e"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "j",
            "module": "dist/chunks/chunk.I6YWTZRK.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "k",
            "module": "dist/chunks/chunk.I6YWTZRK.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/chunk.QMLIEEKM.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{accountHolder:\"Account Holder\",accountHolderEmail:\"me@domain.com\",accountHolderEmailErrorInvalid:\"Provided email is not valid\",accountHolderEmailErrorRequired:\"Account holder email is required\",accountHolderName:\"Account holder name\",accountHolderNameErrorRequired:\"Account holder name is required\",accountHolderNameLabel:\"Account holder name\",accountHolderNamePlaceholder:\"Account holder name\",addCard:\"Add Card\",additionalCardFees:\"Additional card fees may apply\",address:\"Address\",addressLine1:\"Address line 1\",addressLine1ErrorRequired:\"Address line 1 is required\",addressLine1Placeholder:\"Address line 1\",addressLine2:\"Address line 2\",addressLine2ErrorRequired:\"Address line 2 is required\",addressLine2Placeholder:\"Address line 2\",amount:\"Amount\",applePayFailedToTokenize:\"Failed to tokenize\",applePayMissingFirstNameOrLastName:\"Missing first name or last name\",bankHolderNameErrorRequired:\"Account holder name is required\",bankListErrorRequired:\"Bank is required\",bankListLabel:\"List of banks\",bankNameErrorRequired:\"Bank name is required\",bankNameLabel:\"Select your bank from the list\",bankNetworkErrorButton:\"Load again\",bankNetworkErrorTitle:\"Failed to load banks. Check your connection and try again.\",bankSearchInputPlaceholder:\"Search bank\",bankSelectTitle:\"Select your bank\",billingAddressLabel:\"Billing address\",cancel:\"Cancel\",cardCVV:\"CVV\",cardDescription:\"Card description (optional)\",cardDescriptionPlaceholder:\"My favourite card\",cardEndingWith:\"Card ending with\",cardExpired:\"Card has expired\",cardExpiry:\"Expiry (MM/YY)\",cardExpiryPlaceholder:\"MM/YY\",cardholderName:\"Name on card\",cardholderNameErrorRequired:\"Name on card is required\",cardholderNameLabel:\"Name on card\",cardholderNamePlaceholder:\"Full name\",cardIncomplete:\"Card number is incomplete\",cardInvalid:\"Card number is invalid\",cardNameContainsNumbers:\"Name cannot contain numbers\",cardNameLength:\"Name must have between 2 and 45 characters\",cardNameRequired:\"Name on card is required\",cardNumber:\"Card number\",cardRequired:\"Card number is required\",checkSuccessTitle:\"Your payment was successful!\",checkoutWith:\"Checkout with\",chooseAnotherPaymentMethod:\"Choose another payment method\",city:\"City\",cityErrorRequired:\"City is required\",cityLabel:\"City\",cityPlaceholder:\"Cape Town\",completeYourPayment:\"Complete your payment\",completeYourPaymentInTheApp:\"Complete your payment in %s\",confirm:\"Confirm\",confirmCardDeletion:\"Confirm - Delete Card\",confirmPayPalDeletion:\"Confirm - Delete PayPal\",confirmVaultedPaymentMethodDeletion:\"Yes, delete it\",countryCodeErrorRequired:\"Country is required\",countryCodeLabel:\"Country code\",countryCodePlaceholder:\"Country code\",countrySelectPlaceholder:\"Select a country\",creditOrDebitCard:\"Credit or debit card\",creditTransfer:\"Credit Transfer\",cvvIncomplete:\"CVV number is incomplete\",cvvInvalid3:\"CVV must be 3 digits\",cvvInvalid4:\"CVV must be 4 digits\",cvvRequired:\"CVV number is required\",delete:\"Delete\",digits:\"digits\",directDebit:\"Direct debit\",directDebitMandateTitle:\"SEPA Core Direct Debit Mandate\",directDebitSmallPrint:\"By signing this mandate form, you authorise (A) {companyName} to send instructions to your bank to debit your account and (B) your bank to debit your account in accordance with the instruction from {companyName}\",directDebitSuccessDescription:\"{companyName} will appear on your bank statement when payments are taken against the Direct Debit\",directDebitSuccessReference:\"Reference\",directDebitSuccessTitle:\"Direct Debit set up successfully\",dueAt:\"Due at\",dummyApmDescription:\"This is a mocked flow for sandbox. Choose the result you want to test from the list below:\",duplicatePaymentMethodError:\"This payment method is already saved.\",editPaymentMethods:\"Edit saved payment methods\",email:\"Email\",entity:\"Entity\",expiresAt:\"Expires at\",expiryIncomplete:\"Expiry date is incomplete\",expiryInvalid:\"Expiry date is invalid\",expiryMonthInvalid:\"Expiry date month is invalid\",expiryRequired:\"Expiry date is required\",expiryYearInvalid:\"Expiry date year is invalid\",fee_label_fallback:\"Fee\",firstNameErrorRequired:\"First name is required\",firstNameLabel:\"First name\",firstNamePlaceholder:\"First name\",forgetPaymentMethods:\"Forget payment methods\",forgetPayPal:\"Forget PayPal account\",forgetSavedCard:\"Forget saved card ending in {last4Digits}\",fullName:\"First and last name\",getCodeFromBankingApp:\"Get the code from your banking app\",giftCard:\"Gift card\",iban:\"IBAN\",ibanErrorInvalid:\"IBAN is invalid\",ibanErrorRequired:\"IBAN is required\",ibanPlaceholder:\"e.g. GB60 BARC 2000 0055 7799 11\",invalid:\"Invalid\",item_label_fallback:\"Item\",lastNameErrorRequired:\"Last name is required\",lastNameLabel:\"Last name\",lastNamePlaceholder:\"Last name\",loading:\"Loading...\",managePaymentMethods:\"Manage your payment methods\",multibancoFirstStep:\"Payment details for a Multibanco Reference will be created.\",multibancoPayWith:\"Pay with Multibanco\",multibancoPleaseMakePayment:\"Please make the payment at a Multibanco ATM, or through your home banking app.\",multibancoSecondStep:\"Go to a Multibanco ATM or login to your home banking app, then select \\u201CPay for Services\\u201D.\",multibancoThirdStep:\"Enter the Entity, Reference and Amount.\",navigateToPaymentMethods:\"Show other ways to pay\",newPaymentMethod:\"Add a new payment method\",noAdditionalFees:\"No additional fees\",otherWaysToPay:\"Other ways to pay\",pay_with_ach:\"Pay with ACH\",pay_with:\"Pay with\",pay:\"Pay\",payByCard:\"Pay by card\",payByImmediateTransfer:\"Pay by Immediate transfer\",payBySmartTransfer:\"Pay by Bank transfer\",payInInstallments:\"Pay in installments\",paymentMethodPopupLoadingScreenText:\"Hold on! {paymentMethodName} is loading.\",paymentMethodPopupOverlayBringBackThePaymentPage:\"Bring back the payment page\",paymentMethodPopupOverlayClose:\"Close\",paymentMethodPopupOverlayDescription:\"Having trouble viewing the {paymentMethodName} payment page? We'll help you find it!\",paymentMethodPopupOverlayNonFocusDescription:\"Open the {paymentMethodName} payment page to review your payment.\",paymentMethodTypeKlarna:\"Pay later\",paymentMethodTypeKlarnaAccount:\"Pay over time\",paymentMethodTypeKlarnaPaynow:\"Pay now\",payViaBankTransfer:\"Pay via bank transfer\",payWithAch:\"Pay with ACH\",payWithCard:\"Or pay with card\",payWithCrypto:\"Pay with crypto\",pleaseTransferFunds:\"Please Transfer funds to the provided DBS bank account using your Singapore based bank account via FAST (preferred), MEPS or GIRO.\",postalCode:\"Postal code\",postalCodeErrorRequired:\"Postal code is required\",postalCodeLabel:\"Postal code\",postalCodePlaceholder:\"90210\",previouslyUsed:\"Previously used:\",qrCode:\"QR Code\",reference:\"Reference\",required:\"Required\",retry_button:\"Retry\",savedPaymentMethodsEmpty:\"Enter your card details below to add a new payment method\",savePaymentMethod:\"Save payment method\",scanToPay:\"Scan to pay or take a screenshot\",sepaCreditTransfer:\"SEPA Credit Transfer\",sepaDirectDebit:\"SEPA Direct Debit\",session_complete_payment_cancellation_title:\"Payment cancelled\",session_complete_payment_failure_title:\"Payment failed\",session_complete_payment_success_title:\"Payment authorized\",setUpDirectDebit:\"Set up Direct Debit\",shipping_address_unsupported_error:\"We do not ship to this address\",shipping:\"Shipping\",showPaymentDetails:\"Show payment details\",sixDigitCodeErrorNumeric:\"Six digit code should only contain numbers\",sixDigitCodeErrorRequired:\"Six digit code is required\",sixDigitCodeErrorTooShort:\"Code is too short\",sixDigitCodeLabel:\"Six digit code\",sixDigitCodePlaceholder:\"123456\",something_went_wrong_error:\"Something went wrong. Please try again.\",stateErrorRequired:\"State, Region or County is required\",stateLabel:\"State / Region / County\",statePlaceholder:\"State / Region / County\",street:\"Street\",streetPlaceholder:\"My street\",stripe_ach_mandate_accept_button:\"Accept\",stripe_ach_mandate_cancel_payment_button:\"Cancel payment\",stripe_ach_mandate_not_accepted_description:\"Mandate was not accepted\",stripe_ach_mandate_template_web:`By clicking Accept, you authorize {merchantName} to debit the selected bank account for any amount owed for charges arising from your use of {merchantName}\\u2019s services and/or purchase of products from {merchantName}, pursuant to {merchantName}\\u2019s website and terms, until this authorization is revoked. You may amend or cancel this authorization at any time by providing notice to {merchantName} with 30 (thirty) days notice. If you use {merchantName}\\u2019s services or purchase additional products periodically pursuant to {merchantName}\\u2019s terms, you authorize {merchantName} to debit your bank account periodically. Payments that fall outside the regular debits authorized above will only be debited after your authorization is obtained.`,stripe_ach_payment_request_cancelled:\"Please try again or select another bank\",stripe_ach_payment_request_completed_successfully:\"You have now authorized your bank account to be debited. You will be notified via email once the payment has been collected successfully.\",stripe_ach_user_details_collection_continue_button:\"Continue\",stripe_ach_user_details_collection_data_usage_label:\"We'll only use this to keep you updated about your payment\",stripe_ach_user_details_collection_email_address_label:\"Email address\",stripe_ach_user_details_collection_first_name_label:\"First name\",stripe_ach_user_details_collection_invalid_email_address:\"The email address you entered doesn't look like a real email address. Please make sure it includes an '@' and a domain (like '@example.com').\",stripe_ach_user_details_collection_invalid_first_name:\"Please enter a valid first name. Avoid using numbers or special characters.\",stripe_ach_user_details_collection_invalid_last_name:\"Please enter a valid last name. Avoid using numbers or special characters.\",stripe_ach_user_details_collection_last_name_label:\"Last name\",stripe_ach_user_details_collection_subtitle_label:\"Your personal details\",suburb:\"Suburb\",suburbPlaceholder:\"My suburb\",telephoneNumberErrorRequired:\"Phone number is required\",telephoneNumberErrorTooShort:\"Phone number is too short\",telephoneNumberLabel:\"Phone number\",telephoneNumberPlaceholder:\"123xxxxxx\",timeOnDate:\"{time} on {date}\",tokenizationError:\"Your payment could not be processed. Please try another payment method.\",unsupportedCardType:\"Unsupported card type\",uploadScreenshot:\"Upload the screenshot in your banking app\",yourBankDetails:\"Your bank details\"}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/chunk.QMLIEEKM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/cs.WAO4WFS3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "dist/chunks/cs.WAO4WFS3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/da.4OFYGDVA.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "dist/chunks/da.4OFYGDVA.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/de.3FZS52IN.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/de.3FZS52IN.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/el.A4R7VG5T.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/el.A4R7VG5T.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/en-GB.ILZ7SXSW.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "t"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/en-GB.ILZ7SXSW.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/en.7GZJA7MN.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "t"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/en.7GZJA7MN.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/es-AR.QKHDL4JV.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/es-AR.QKHDL4JV.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/es-MX.GG7MJMG2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/es-MX.GG7MJMG2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/es.FEZ6BF3S.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/es.FEZ6BF3S.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/et-EE.FJLPTMF3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "dist/chunks/et-EE.FJLPTMF3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/fi-FI.DM5R27A5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "dist/chunks/fi-FI.DM5R27A5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/fr.YZV52NTA.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/fr.YZV52NTA.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/he.6SCF3XZZ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/he.6SCF3XZZ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/hr.PPDZ7AAS.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/hr.PPDZ7AAS.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/hu.6WOPSGLW.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "s",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "s",
            "module": "dist/chunks/hu.6WOPSGLW.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/id.NS22WGWL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "dist/chunks/id.NS22WGWL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/it.42TO3R4G.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "dist/chunks/it.42TO3R4G.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ja.UEGHEUAP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/ja.UEGHEUAP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ko.HTMDY6RY.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/ko.HTMDY6RY.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/lt-LT.4U3GBQTQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/lt-LT.4U3GBQTQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/lt.73ME4TDM.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/lt.73ME4TDM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/lv-LV.JRWO2BF6.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/lv-LV.JRWO2BF6.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/lv.KROS45TV.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/lv.KROS45TV.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ms.HE3SWJFQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/ms.HE3SWJFQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/nb.TR6TEKBY.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "dist/chunks/nb.TR6TEKBY.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/nl.V5QP6OXL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "dist/chunks/nl.V5QP6OXL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/nl_NL.FCVWIF3Y.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "dist/chunks/nl_NL.FCVWIF3Y.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/pl.DQZDG7LR.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/pl.DQZDG7LR.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/pt-BR.CR4ROBVE.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/pt-BR.CR4ROBVE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/pt.JRWVFJPX.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "t",
            "module": "dist/chunks/pt.JRWVFJPX.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ro.NRMWYY3F.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "i",
            "module": "dist/chunks/ro.NRMWYY3F.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/ru.OWSKHXVO.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/ru.OWSKHXVO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/sk.YGBRNNWT.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "dist/chunks/sk.YGBRNNWT.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/sl.IRTDTNTP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "r",
            "module": "dist/chunks/sl.IRTDTNTP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/sr-RS.AWGLHKVE.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/sr-RS.AWGLHKVE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/sv.O4BXFGNF.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "dist/chunks/sv.O4BXFGNF.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/th.GZCEBRT2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/th.GZCEBRT2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/tr.ZDILMEEO.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "n",
            "module": "dist/chunks/tr.ZDILMEEO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/uk-UA.JUUBOEW3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/uk-UA.JUUBOEW3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/vi.IN7CFTLL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "n"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "dist/chunks/vi.IN7CFTLL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/zf.YT47ULXR.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "default": "t"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "a",
            "module": "dist/chunks/zf.YT47ULXR.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/zh-CN.RBRAS4RP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/zh-CN.RBRAS4RP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/zh-HK.4CK7LBWM.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/zh-HK.4CK7LBWM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/chunks/zh-TW.374TMWNJ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "default": "e"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "templates",
          "declaration": {
            "name": "o",
            "module": "dist/chunks/zh-TW.374TMWNJ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "Spinner",
            "module": "./spinner/spinner"
          }
        },
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "InputWrapper",
            "package": "@components/atoms/input-wrapper/input-wrapper"
          }
        },
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "InputLabel",
            "package": "@components/atoms/input-label/input-label"
          }
        },
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "package": "@components/atoms/button/button"
          }
        },
        {
          "kind": "js",
          "name": "CardFormError",
          "declaration": {
            "name": "CardFormError",
            "package": "@components/atoms/input-error/input-error"
          }
        },
        {
          "kind": "js",
          "name": "PrimerIcon",
          "declaration": {
            "name": "PrimerIcon",
            "module": "./icon/icon"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutState",
          "declaration": {
            "name": "PrimerCheckoutState",
            "module": "./checkout-state/checkout-state"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "Input",
            "module": "./input/input"
          }
        },
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "Collapsable",
            "module": "./collapsable/collapsable"
          }
        },
        {
          "kind": "js",
          "name": "ButtonVariant",
          "declaration": {
            "name": "ButtonVariant",
            "module": "./collapsable/collapsable"
          }
        },
        {
          "kind": "js",
          "name": "ExpandedChangedDetail",
          "declaration": {
            "name": "ExpandedChangedDetail",
            "module": "./collapsable/collapsable"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "ErrorMessage",
            "module": "./error-message/error-message"
          }
        },
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "Portal",
            "module": "./portal/portal"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "Dialog",
            "module": "./dialog/dialog"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerKlarna",
          "declaration": {
            "name": "PrimerKlarna",
            "module": "./klarna/klarna"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "PaymentMethod",
            "module": "./payment-method/payment-method"
          }
        },
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "AchPayment",
            "module": "./ach-payment/ach-payment"
          }
        },
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "DynamicPayment",
            "module": "./dynamic-payment/dynamic-payment"
          }
        },
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "RedirectPayment",
            "module": "./redirect-payment/redirect-payment"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "VaultManager",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultPaymentMethodItem",
          "declaration": {
            "name": "VaultPaymentMethodItem",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerHeader",
          "declaration": {
            "name": "VaultManagerHeader",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultDeleteConfirmation",
          "declaration": {
            "name": "VaultDeleteConfirmation",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultEmptyState",
          "declaration": {
            "name": "VaultEmptyState",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultErrorMessage",
          "declaration": {
            "name": "VaultErrorMessage",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultPaymentSubmit",
          "declaration": {
            "name": "VaultPaymentSubmit",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "VaultCvvInput",
          "declaration": {
            "name": "VaultCvvInput",
            "module": "./vault-manager/vault-manager"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "CardForm",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCardNumber",
          "declaration": {
            "name": "CardFormCardNumber",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCVV",
          "declaration": {
            "name": "CardFormCVV",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormExpiry",
          "declaration": {
            "name": "CardFormExpiry",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormName",
          "declaration": {
            "name": "CardFormName",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "CardFormSubmit",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCardNetworkSelector",
          "declaration": {
            "name": "CardFormCardNetworkSelector",
            "module": "./card-form/card-form"
          }
        },
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "ShowOtherPayments",
            "module": "./show-other-payments/show-other-payments"
          }
        },
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "NativePayment",
            "module": "./native-payment/native-payment"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "PrimerCheckoutComplete",
            "module": "./primer-checkout-complete/primer-checkout-complete"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutFailure",
          "declaration": {
            "name": "PrimerCheckoutFailure",
            "package": "@components/containers/primer-checkout-error/primer-checkout-error"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "ErrorMessageContainer",
            "module": "./error-message-container/error-message-container"
          }
        },
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "PrimerMain",
            "module": "./primer-main/primer-main"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/card-networks-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "cardNetworksContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cardNetworksContext",
          "declaration": {
            "name": "cardNetworksContext",
            "module": "src/contexts/card-networks-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/client-options-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "clientOptionsContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clientOptionsContext",
          "declaration": {
            "name": "clientOptionsContext",
            "module": "src/contexts/client-options-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/computed-styles-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "computedStylesContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "computedStylesContext",
          "declaration": {
            "name": "computedStylesContext",
            "module": "src/contexts/computed-styles-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/headless-unitils-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "headlessUnitilsContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "headlessUnitilsContext",
          "declaration": {
            "name": "headlessUnitilsContext",
            "module": "src/contexts/headless-unitils-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/klarna-categories-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "klarnaCategoriesContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "klarnaCategoriesContext",
          "declaration": {
            "name": "klarnaCategoriesContext",
            "module": "src/contexts/klarna-categories-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/payment-manager-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "paymentManagerContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "paymentManagerContext",
          "declaration": {
            "name": "paymentManagerContext",
            "module": "src/contexts/payment-manager-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/payment-methods-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "paymentMethodsContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "paymentMethodsContext",
          "declaration": {
            "name": "paymentMethodsContext",
            "module": "src/contexts/payment-methods-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/payments-objects.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InitializedPayments",
          "members": [
            {
              "kind": "field",
              "name": "_methods",
              "type": {
                "text": "InitializedPaymentMethodMap"
              },
              "privacy": "private",
              "readonly": true,
              "default": "map"
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "RedirectPaymentMethod | undefined"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "PaymentMethodByType<T> | undefined"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toArray",
              "return": {
                "type": {
                  "text": "InitializedPaymentMethod[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "size",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InitializedPayments",
          "declaration": {
            "name": "InitializedPayments",
            "module": "src/contexts/payments-objects.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/sdk-state-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "sdkStateContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sdkStateContext",
          "declaration": {
            "name": "sdkStateContext",
            "module": "src/contexts/sdk-state-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/vault-item-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "vaultItemContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "vaultItemContext",
          "declaration": {
            "name": "vaultItemContext",
            "module": "src/contexts/vault-item-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/contexts/vault-manager-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "vaultManagerContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "vaultManagerContext",
          "declaration": {
            "name": "vaultManagerContext",
            "module": "src/contexts/vault-manager-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/card-network-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "CardNetworkController manages and processes card network data\n\nThis controller is responsible for:\n- Handling card network change events\n- Processing detected and selectable card networks\n- Maintaining card network state",
          "name": "CardNetworkController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "PrimerCheckoutType"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "setCardNetworksLoading",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Sets the card networks to loading state"
            },
            {
              "kind": "method",
              "name": "updateCardNetworksState",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "cardNetworks",
                  "type": {
                    "text": "CardNetworksContext"
                  },
                  "description": "The new card networks context"
                }
              ],
              "description": "Updates card networks state and dispatches events"
            },
            {
              "kind": "method",
              "name": "processCardNetworkChangeEvent",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CardNetworkChangeEvent"
                  },
                  "description": "The card network change event"
                }
              ],
              "description": "Processes a card network change event"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardNetworkController",
          "declaration": {
            "name": "CardNetworkController",
            "module": "src/controllers/card-network-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/headless-sdk-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HeadlessSdkController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "PrimerCheckoutType"
              }
            },
            {
              "kind": "field",
              "name": "sdkInstanceTask",
              "type": {
                "text": "Task<\n    [string | null, PrimerCheckoutOptions | null],\n    PrimerHeadlessCheckout | null\n  >"
              },
              "privacy": "private",
              "default": "new Task(host, { args: () => [this.host.clientToken, this.host.options] as const, task: this.initializeHeadless(), })"
            },
            {
              "kind": "field",
              "name": "createPaymentMethodManager",
              "type": {
                "text": "CreatePaymentMethodManager | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_paymentsList",
              "type": {
                "text": "PaymentMethodInfo[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "currentSdkInstance",
              "type": {
                "text": "PrimerHeadlessCheckout | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "loadingTimeout",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "isDisconnected",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "paymentsList",
              "type": {
                "text": "PaymentMethodInfo[]"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "setupLoadingTimeout",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "clearLoadingTimeout",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "cleanupResources",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_loadV2Sdk",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "default": "legacySdkCdnUrl",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeHeadless"
            },
            {
              "kind": "method",
              "name": "initializeLitContext"
            },
            {
              "kind": "method",
              "name": "initializePaymentMethodManager",
              "parameters": [
                {
                  "name": "paymentMethod",
                  "type": {
                    "text": "PaymentMethodInfo"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HeadlessSdkController",
          "declaration": {
            "name": "HeadlessSdkController",
            "module": "src/controllers/headless-sdk-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/primer-events-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimerEventsController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "ReactiveControllerHost & LitElement"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "dispatchEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  },
                  "description": "The event name as defined in PrimerEvents."
                },
                {
                  "name": "detail",
                  "type": {
                    "text": "PrimerEvents[K]['detail']"
                  },
                  "description": "The payload for the event."
                }
              ],
              "description": "Dispatch a custom event using the unified naming pattern.\nEnsures that every event bubbles and crosses shadow DOM boundaries."
            },
            {
              "kind": "method",
              "name": "dispatchSdkState",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "sdkState",
                  "type": {
                    "text": "SdkStateContext"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchPaymentMethods",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "paymentMethods",
                  "type": {
                    "text": "InitializedPayments"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchCheckoutInitialized",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "checkoutInstance",
                  "type": {
                    "text": "PrimerHeadlessCheckout"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchCardNetworkChange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "network",
                  "type": {
                    "text": "CardNetworksContext"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchOnCheckoutComplete",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "payment",
                  "type": {
                    "text": "Payment | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchOnCheckoutFailure",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "PrimerClientError"
                  }
                },
                {
                  "name": "payment",
                  "optional": true,
                  "type": {
                    "text": "Payment"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchFormSubmitSuccess",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "result",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchFormSubmitErrors",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "errors",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerEventsController",
          "declaration": {
            "name": "PrimerEventsController",
            "module": "src/controllers/primer-events-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/sdk-context-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "SDKContextController centralizes all context providers and exposes methods to update them.\nThis allows other controllers to delegate context updates and keeps their logic decoupled.",
          "name": "SDKContextController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "PrimerCheckoutType"
              }
            },
            {
              "kind": "field",
              "name": "sdkStateProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: SdkStateContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: sdkStateContext, initialValue: initialSDKState, })"
            },
            {
              "kind": "field",
              "name": "paymentMethodsProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: PaymentMethodsContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: paymentMethodsContext, initialValue: null, })"
            },
            {
              "kind": "field",
              "name": "paymentManagerProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: InitializedManagersMap;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: paymentManagerContext, initialValue: new Map(), })"
            },
            {
              "kind": "field",
              "name": "cardNetworksContext",
              "type": {
                "text": "ContextProvider<{\n    __context__: CardNetworksContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: cardNetworksContext, initialValue: null, })"
            },
            {
              "kind": "field",
              "name": "vaultManagerProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: VaultManagerContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: vaultManagerContext, initialValue: null, })"
            },
            {
              "kind": "field",
              "name": "vaultManagerCvvProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: VaultItemContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: vaultItemContext, initialValue: null, })"
            },
            {
              "kind": "field",
              "name": "clientOptionsContext",
              "type": {
                "text": "ContextProvider<{\n    __context__: PrimerCheckoutOptions | null;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: clientOptionsContext, initialValue: null, })"
            },
            {
              "kind": "field",
              "name": "headlessUtilsProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: HeadlessUnitilsContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: headlessUnitilsContext, initialValue: null, })"
            },
            {
              "kind": "field",
              "name": "klarnaCategoriesProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: KlarnaCategoriesContext;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: klarnaCategoriesContext, initialValue: { categories: [], isLoading: true, }, })"
            },
            {
              "kind": "field",
              "name": "computedStylesProvider",
              "type": {
                "text": "ContextProvider<{\n    __context__: CSSStyleDeclaration;\n  }> | null"
              },
              "privacy": "private",
              "default": "new ContextProvider(host, { context: computedStylesContext, initialValue: null, })"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "setSdkState",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "SdkStateContext"
                  },
                  "description": "The new SDK state."
                }
              ],
              "description": "Updates the SDK state context."
            },
            {
              "kind": "method",
              "name": "setPaymentMethods",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "InitializedPayments"
                  },
                  "description": "The new payment methods data."
                }
              ],
              "description": "Updates the payment methods context."
            },
            {
              "kind": "method",
              "name": "setPaymentManagers",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "InitializedManagersMap"
                  },
                  "description": "The new payment manager mapping."
                }
              ],
              "description": "Updates the payment manager context."
            },
            {
              "kind": "method",
              "name": "setCardNetworks",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "CardNetworksContext"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setVaultManager",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "VaultManagerContext"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setKlarnaCategories",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "KlarnaCategoriesContext"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setClientOptions",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "PrimerCheckoutOptions | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setHeadlessUtils",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "HeadlessUnitilsContext"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setComputedStyles",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "CSSStyleDeclaration"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setVaultManagerCvv",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "VaultItemContext"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SDKContextController",
          "declaration": {
            "name": "SDKContextController",
            "module": "src/controllers/sdk-context-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/sdk-state-controller.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "initialSDKState",
          "type": {
            "text": "SdkState"
          },
          "default": "{ isSuccessful: false, isProcessing: false, isLoading: false, error: null, failure: null, }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "SdkStateController",
          "members": [
            {
              "kind": "method",
              "name": "startLoading"
            },
            {
              "kind": "method",
              "name": "startProcessing"
            },
            {
              "kind": "method",
              "name": "stopProcessing"
            },
            {
              "kind": "method",
              "name": "completeProcessing"
            },
            {
              "kind": "method",
              "name": "completeLoading"
            },
            {
              "kind": "method",
              "name": "setError",
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "Error"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setFailure",
              "parameters": [
                {
                  "name": "code",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "details",
                  "optional": true,
                  "type": {
                    "text": "Record<string, unknown>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "resetError"
            },
            {
              "kind": "method",
              "name": "forceCompleteLoading"
            },
            {
              "kind": "field",
              "name": "_dispatcher",
              "type": {
                "text": "TypedDispatcher<State, Action, Callbacks>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ReactiveStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentState",
              "type": {
                "text": "Readonly<State>"
              },
              "privacy": "public",
              "readonly": true,
              "inheritedFrom": {
                "name": "ReactiveStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatch",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "Action"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ReactiveStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "setCallbacks",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "callbacks",
                  "type": {
                    "text": "Partial<Callbacks>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ReactiveStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ReactiveStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "ReactiveStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            }
          ],
          "superclass": {
            "name": "ReactiveStateController",
            "module": "/src/controllers/reactive-state"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "initialSDKState",
          "declaration": {
            "name": "initialSDKState",
            "module": "src/controllers/sdk-state-controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "SdkStateController",
          "declaration": {
            "name": "SdkStateController",
            "module": "src/controllers/sdk-state-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/style-processing-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Controller that handles processing and application of custom styles to Lit components.\nSafely converts JSON style objects to CSS variables applied to the host element.",
          "name": "StyleProcessingController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "ReactiveControllerHost & LitElement"
              }
            },
            {
              "kind": "field",
              "name": "cssVarCache",
              "privacy": "private",
              "static": true,
              "default": "new Map<string, string>()"
            },
            {
              "kind": "method",
              "name": "processCustomStyles",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "jsonString",
                  "type": {
                    "text": "string"
                  },
                  "description": "The JSON string representing custom styles."
                }
              ],
              "description": "Processes the customStyles JSON string.\nExpected JSON contains only CSS variable properties in camelCase."
            },
            {
              "kind": "method",
              "name": "isValidCssProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "property",
                  "type": {
                    "text": "string"
                  },
                  "description": "The CSS property name to validate."
                }
              ],
              "description": "Validates a CSS property name to ensure it follows expected patterns."
            },
            {
              "kind": "method",
              "name": "isValidCssValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The CSS value to validate."
                }
              ],
              "description": "Validates a CSS value to ensure it only contains safe, expected characters.\nAllowed characters include alphanumerics, whitespace, and common CSS punctuation.\nThis helps prevent CSS injection attacks."
            },
            {
              "kind": "method",
              "name": "getCssVarName",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "The camelCase property key"
                }
              ],
              "description": "Gets the CSS variable name for a camelCase property key.\nUses caching for performance."
            },
            {
              "kind": "method",
              "name": "applyStyles",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "styles",
                  "type": {
                    "text": "StylesObject"
                  },
                  "description": "An object with style keys and corresponding CSS values."
                }
              ],
              "description": "Transforms a styles object into CSS variables and applies them to the host element.\nEach key (in camelCase) is converted into a kebab-case CSS variable prefixed with '--'.\nOnly valid CSS properties and values are applied."
            },
            {
              "kind": "method",
              "name": "removeStyle",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "The camelCase property key to remove"
                }
              ],
              "description": "Removes a specific CSS variable from the host element"
            },
            {
              "kind": "method",
              "name": "clearAllStyles",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Removes all custom styles from the host element"
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Optional cleanup when the host is disconnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StyleProcessingController",
          "declaration": {
            "name": "StyleProcessingController",
            "module": "src/controllers/style-processing-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/ach-payment.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AchPayment"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "AchPayment",
            "module": "src/react-components/ach-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/button.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Button"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "src/react-components/button.ts"
          }
        },
        {
          "kind": "js",
          "name": "ButtonSelectionState",
          "declaration": {
            "name": "ButtonSelectionState",
            "module": "../atoms/button/button.component"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/card-form-submit.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CardFormSubmit"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "CardFormSubmit",
            "module": "src/react-components/card-form-submit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/card-form.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CardForm"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "CardForm",
            "module": "src/react-components/card-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/card-network-selector.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CardNetworkSelector"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardNetworkSelector",
          "declaration": {
            "name": "CardNetworkSelector",
            "module": "src/react-components/card-network-selector.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/checkout-state.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CheckoutState"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CheckoutState",
          "declaration": {
            "name": "CheckoutState",
            "module": "src/react-components/checkout-state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/checkout.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimerCheckout"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckout",
          "declaration": {
            "name": "PrimerCheckout",
            "module": "src/react-components/checkout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/collapsable.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Collapsable"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "Collapsable",
            "module": "src/react-components/collapsable.ts"
          }
        },
        {
          "kind": "js",
          "name": "ButtonVariant",
          "declaration": {
            "name": "ButtonVariant",
            "module": "../atoms/collapsable/collapsable.component"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/dialog.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Dialog"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "Dialog",
            "module": "src/react-components/dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/dynamic-payment.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DynamicPayment"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "DynamicPayment",
            "module": "src/react-components/dynamic-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/error-message-container.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ErrorMessageContainer"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "ErrorMessageContainer",
            "module": "src/react-components/error-message-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/error-message.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ErrorMessage"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "ErrorMessage",
            "module": "src/react-components/error-message.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/icon.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Icon"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Icon",
          "declaration": {
            "name": "Icon",
            "module": "src/react-components/icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckout",
          "declaration": {
            "name": "PrimerCheckout",
            "module": "./checkout"
          }
        },
        {
          "kind": "js",
          "name": "CheckoutState",
          "declaration": {
            "name": "CheckoutState",
            "module": "./checkout-state"
          }
        },
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "Collapsable",
            "module": "./collapsable"
          }
        },
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "Dialog",
            "module": "./dialog"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "ErrorMessage",
            "module": "./error-message"
          }
        },
        {
          "kind": "js",
          "name": "Icon",
          "declaration": {
            "name": "Icon",
            "module": "./icon"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "Input",
            "module": "./input"
          }
        },
        {
          "kind": "js",
          "name": "InputError",
          "declaration": {
            "name": "InputError",
            "module": "./input-error"
          }
        },
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "InputLabel",
            "module": "./input-label"
          }
        },
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "InputWrapper",
            "module": "./input-wrapper"
          }
        },
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "Portal",
            "module": "./portal"
          }
        },
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "Spinner",
            "module": "./spinner"
          }
        },
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "Button",
            "module": "./button"
          }
        },
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "AchPayment",
            "module": "./ach-payment"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "CardForm",
            "module": "./card-form"
          }
        },
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "CardFormSubmit",
            "module": "./card-form-submit"
          }
        },
        {
          "kind": "js",
          "name": "CardNetworkSelector",
          "declaration": {
            "name": "CardNetworkSelector",
            "module": "./card-network-selector"
          }
        },
        {
          "kind": "js",
          "name": "InputCardHolderName",
          "declaration": {
            "name": "InputCardHolderName",
            "module": "./input-card-holder-name"
          }
        },
        {
          "kind": "js",
          "name": "InputCardExpiry",
          "declaration": {
            "name": "InputCardExpiry",
            "module": "./input-card-expiry"
          }
        },
        {
          "kind": "js",
          "name": "InputCvv",
          "declaration": {
            "name": "InputCvv",
            "module": "./input-cvv"
          }
        },
        {
          "kind": "js",
          "name": "InputCardNumber",
          "declaration": {
            "name": "InputCardNumber",
            "module": "./input-card-number"
          }
        },
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "DynamicPayment",
            "module": "./dynamic-payment"
          }
        },
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "ErrorMessageContainer",
            "module": "./error-message-container"
          }
        },
        {
          "kind": "js",
          "name": "Klarna",
          "declaration": {
            "name": "Klarna",
            "module": "./klarna"
          }
        },
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "NativePayment",
            "module": "./native-payment"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "PaymentMethod",
            "module": "./payment-method"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "PrimerCheckoutComplete",
            "module": "./primer-checkout-complete"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckoutError",
          "declaration": {
            "name": "PrimerCheckoutError",
            "module": "./primer-checkout-error"
          }
        },
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "PrimerMain",
            "module": "./primer-main"
          }
        },
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "RedirectPayment",
            "module": "./redirect-payment"
          }
        },
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "ShowOtherPayments",
            "module": "./show-other-payments"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "VaultManager",
            "module": "./vault-manager"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-card-expiry.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputCardExpiry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCardExpiry",
          "declaration": {
            "name": "InputCardExpiry",
            "module": "src/react-components/input-card-expiry.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-card-holder-name.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputCardHolderName"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCardHolderName",
          "declaration": {
            "name": "InputCardHolderName",
            "module": "src/react-components/input-card-holder-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-card-number.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputCardNumber"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCardNumber",
          "declaration": {
            "name": "InputCardNumber",
            "module": "src/react-components/input-card-number.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-cvv.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputCvv"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCvv",
          "declaration": {
            "name": "InputCvv",
            "module": "src/react-components/input-cvv.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-error.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputError"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputError",
          "declaration": {
            "name": "InputError",
            "module": "src/react-components/input-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-label.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputLabel"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "InputLabel",
            "module": "src/react-components/input-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input-wrapper.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "InputWrapper"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "InputWrapper",
            "module": "src/react-components/input-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/input.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Input"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "Input",
            "module": "src/react-components/input.ts"
          }
        },
        {
          "kind": "js",
          "name": "InputType",
          "declaration": {
            "name": "InputType",
            "module": "../atoms/input/input.component"
          }
        },
        {
          "kind": "js",
          "name": "InputEventMap",
          "declaration": {
            "name": "InputEventMap",
            "module": "../atoms/input/input.component"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/klarna.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Klarna"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Klarna",
          "declaration": {
            "name": "Klarna",
            "module": "src/react-components/klarna.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/native-payment.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NativePayment"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "NativePayment",
            "module": "src/react-components/native-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/payment-method.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PaymentMethod"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "PaymentMethod",
            "module": "src/react-components/payment-method.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/portal.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Portal"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "Portal",
            "module": "src/react-components/portal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/primer-checkout-complete.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimerCheckoutComplete"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "PrimerCheckoutComplete",
            "module": "src/react-components/primer-checkout-complete.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/primer-checkout-error.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimerCheckoutError"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutError",
          "declaration": {
            "name": "PrimerCheckoutError",
            "module": "src/react-components/primer-checkout-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/primer-main.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimerMain"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "PrimerMain",
            "module": "src/react-components/primer-main.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/redirect-payment.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "RedirectPayment"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "RedirectPayment",
            "module": "src/react-components/redirect-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/show-other-payments.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ShowOtherPayments"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "ShowOtherPayments",
            "module": "src/react-components/show-other-payments.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/spinner.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Spinner"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "Spinner",
            "module": "src/react-components/spinner.ts"
          }
        },
        {
          "kind": "js",
          "name": "SpinnerSize",
          "declaration": {
            "name": "SpinnerSize",
            "module": "../atoms/spinner/spinner.component"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/react-components/vault-manager.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "VaultManager"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "VaultManager",
            "module": "src/react-components/vault-manager.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/theme-loader.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "LIGHT_THEME_ID",
          "type": {
            "text": "string"
          },
          "default": "'primer-light-theme-css'",
          "description": "ID for the light theme CSS element in the DOM"
        },
        {
          "kind": "variable",
          "name": "DARK_THEME_ID",
          "type": {
            "text": "string"
          },
          "default": "'primer-dark-theme-css'",
          "description": "ID for the dark theme CSS element in the DOM"
        },
        {
          "kind": "function",
          "name": "injectLightThemeCSS",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Injects the light theme CSS variables into the document\nThese styles provide the base visual design system for Primer components\n\nThe styles are injected at the beginning of the document head,\nallowing merchant styles to override our default variables."
        },
        {
          "kind": "function",
          "name": "injectDarkThemeCSS",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Injects the dark theme CSS variables into the document\nThese styles provide dark mode styling for Primer components\n\nThe styles are injected at the beginning of the document head,\nallowing merchant styles to override our default variables."
        },
        {
          "kind": "function",
          "name": "injectThemeCSS",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "description": "Injects CSS variables for both light and dark themes\nThe light theme is applied by default, while the dark theme\nwill be activated when the .primer-dark-theme class is used\n\nThese styles are injected at the beginning of the document head,\nso that merchant CSS can override our default theme variables."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LIGHT_THEME_ID",
          "declaration": {
            "name": "LIGHT_THEME_ID",
            "module": "src/styles/theme-loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "DARK_THEME_ID",
          "declaration": {
            "name": "DARK_THEME_ID",
            "module": "src/styles/theme-loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectLightThemeCSS",
          "declaration": {
            "name": "injectLightThemeCSS",
            "module": "src/styles/theme-loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectDarkThemeCSS",
          "declaration": {
            "name": "injectDarkThemeCSS",
            "module": "src/styles/theme-loader.ts"
          }
        },
        {
          "kind": "js",
          "name": "injectThemeCSS",
          "declaration": {
            "name": "injectThemeCSS",
            "module": "src/styles/theme-loader.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/theme-variables.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "lightThemeCSS",
          "default": "`/** * Do not edit directly, this file was auto-generated. */ :root, primer-checkout { --primer-color-background-transparent-default: rgba(255, 255, 255, 0); --primer-color-border-transparent-default: rgba(255, 255, 255, 0); --primer-color-gray-100: #f5f5f5; --primer-color-gray-200: #eeeeee; --primer-color-gray-300: #e0e0e0; --primer-color-gray-400: #bdbdbd; --primer-color-gray-500: #9e9e9e; --primer-color-gray-600: #757575; --primer-color-gray-900: #212121; --primer-color-gray-000: #ffffff; --primer-color-brand: #2f98ff; --primer-color-red-100: #ffecec; --primer-color-red-500: #ff7279; --primer-color-red-900: #b4324b; --primer-color-blue-500: #399dff; --primer-color-blue-900: #2270f4; --primer-radius-base: 4px; --primer-typography-brand: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif; --primer-typography-title-xlarge-letter-spacing: -0.6px; --primer-typography-title-xlarge-weight: 550; --primer-typography-title-xlarge-size: 24px; --primer-typography-title-xlarge-line-height: 32px; --primer-typography-title-large-letter-spacing: -0.2px; --primer-typography-title-large-weight: 550; --primer-typography-title-large-size: 16px; --primer-typography-title-large-line-height: 20px; --primer-typography-body-large-letter-spacing: -0.2px; --primer-typography-body-large-weight: 400; --primer-typography-body-large-size: 16px; --primer-typography-body-large-line-height: 20px; --primer-typography-body-medium-letter-spacing: 0px; --primer-typography-body-medium-weight: 400; --primer-typography-body-medium-size: 14px; --primer-typography-body-medium-line-height: 20px; --primer-typography-body-small-letter-spacing: 0px; --primer-typography-body-small-weight: 400; --primer-typography-body-small-size: 12px; --primer-typography-body-small-line-height: 16px; --primer-space-base: 4px; --primer-size-base: 4px; --primer-animation-duration: 200ms; --primer-animation-easing: cubic-bezier(0.44, 0, 0.4, 1); --primer-color-background-outlined-default: var(--primer-color-gray-000); --primer-color-background-outlined-disabled: var(--primer-color-gray-100); --primer-color-background-transparent-hover: var(--primer-color-gray-100); --primer-color-background-transparent-active: var(--primer-color-gray-200); --primer-color-background-transparent-loading: var(--primer-color-gray-100); --primer-color-background-transparent-focus: var(--primer-color-background-transparent-default); --primer-color-background-transparent-disabled: var(--primer-color-gray-100); --primer-color-background-transparent-selected: var(--primer-color-gray-100); --primer-color-text-primary: var(--primer-color-gray-900); --primer-color-text-placeholder: var(--primer-color-gray-500); --primer-color-text-disabled: var(--primer-color-gray-400); --primer-color-text-negative: var(--primer-color-red-900); --primer-color-text-link: var(--primer-color-blue-900); --primer-color-text-secondary: var(--primer-color-gray-600); --primer-color-border-outlined-default: var(--primer-color-gray-300); --primer-color-border-outlined-hover: var(--primer-color-gray-400); --primer-color-border-outlined-active: var(--primer-color-gray-500); --primer-color-border-outlined-disabled: var(--primer-color-gray-200); --primer-color-border-outlined-loading: var(--primer-color-gray-200); --primer-color-border-outlined-selected: var(--primer-color-brand); --primer-color-border-outlined-error: var(--primer-color-red-500); --primer-color-border-transparent-hover: var(--primer-color-border-transparent-default); --primer-color-border-transparent-active: var(--primer-color-border-transparent-default); --primer-color-border-transparent-disabled: var(--primer-color-border-transparent-default); --primer-color-border-transparent-selected: var(--primer-color-border-transparent-default); --primer-color-icon-primary: var(--primer-color-gray-900); --primer-color-icon-disabled: var(--primer-color-gray-400); --primer-color-icon-negative: var(--primer-color-red-500); --primer-color-focus: var(--primer-color-brand); --primer-color-loader: var(--primer-color-brand); --primer-radius-medium: 8px; --primer-radius-small: 4px; --primer-radius-large: 12px; --primer-radius-xsmall: 2px; --primer-typography-title-xlarge-font: var(--primer-typography-brand); --primer-typography-title-large-font: var(--primer-typography-brand); --primer-typography-body-large-font: var(--primer-typography-brand); --primer-typography-body-medium-font: var(--primer-typography-brand); --primer-typography-body-small-font: var(--primer-typography-brand); --primer-space-xxsmall: 2px; --primer-space-xsmall: 4px; --primer-space-small: 8px; --primer-space-medium: 12px; --primer-space-large: 16px; --primer-space-xlarge: 20px; --primer-size-small: 16px; --primer-size-medium: 20px; --primer-size-large: 24px; --primer-size-xlarge: 32px; --primer-size-xxlarge: 40px; --primer-size-xxxlarge: 56px; --primer-color-background-outlined-focus: var(--primer-color-background-outlined-default); --primer-color-background-outlined-loading: var(--primer-color-background-outlined-disabled); --primer-color-background-outlined-active: var(--primer-color-background-outlined-default); --primer-color-background-outlined-hover: var(--primer-color-background-outlined-default); --primer-color-background-outlined-selected: var(--primer-color-background-outlined-default); --primer-color-background-outlined-error: var(--primer-color-background-outlined-default); --primer-color-border-outlined-focus: var(--primer-color-focus); --primer-color-border-transparent-focus: var(--primer-color-focus); --primer-color-border-transparent-loading: var(--primer-color-border-transparent-disabled); } `",
          "description": "Light theme CSS variables"
        },
        {
          "kind": "variable",
          "name": "darkThemeCSS",
          "default": "`/** * Do not edit directly, this file was auto-generated. */ :root, primer-checkout.primer-dark-theme { --primer-color-gray-100: #292929; --primer-color-gray-200: #424242; --primer-color-gray-300: #575757; --primer-color-gray-400: #858585; --primer-color-gray-500: #767577; --primer-color-gray-600: #c7c7c7; --primer-color-gray-900: #efefef; --primer-color-gray-000: #171619; --primer-color-brand: #2f98ff; --primer-color-red-100: #321c20; --primer-color-red-500: #e46d70; --primer-color-red-900: #f6bfbf; --primer-color-blue-500: #3f93e4; --primer-color-blue-900: #4aaeff; } `",
          "description": "Dark theme CSS variables"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "lightThemeCSS",
          "declaration": {
            "name": "lightThemeCSS",
            "module": "src/styles/theme-variables.ts"
          }
        },
        {
          "kind": "js",
          "name": "darkThemeCSS",
          "declaration": {
            "name": "darkThemeCSS",
            "module": "src/styles/theme-variables.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types/checkout.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/types/paymentTypes.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "PaymentInstrumentType",
          "type": {
            "text": "{\n  WORLDPAY_IDEAL: 'WORLDPAY_IDEAL',\n  AUTOMATED_CLEARING_HOUSE: 'AUTOMATED_CLEARING_HOUSE',\n  ADYEN_KLARNA: 'ADYEN_KLARNA',\n  ADYEN_BANCONTACT_CARD: 'ADYEN_BANCONTACT_CARD',\n  PAY_NL_KAARTDIRECT: 'PAY_NL_KAARTDIRECT',\n  ADYEN_EPS: 'ADYEN_EPS',\n  ADYEN_BANCONTACT_PAYCONIQ: 'ADYEN_BANCONTACT_PAYCONIQ',\n  OMISE_PROMPTPAY: 'OMISE_PROMPTPAY',\n  OMISE_TRUEMONEY: 'OMISE_TRUEMONEY',\n  ADYEN_MULTIBANCO: 'ADYEN_MULTIBANCO',\n  PACYPAY_WECHAT: 'PACYPAY_WECHAT',\n  PACYPAY_ALIPAY: 'PACYPAY_ALIPAY',\n  ADYEN_MBWAY: 'ADYEN_MBWAY',\n  XENDIT_DANA: 'XENDIT_DANA',\n  XENDIT_SHOPEEPAY: 'XENDIT_SHOPEEPAY',\n  ADYEN_PAYSHOP: 'ADYEN_PAYSHOP',\n  ADYEN_PAYTRAIL: 'ADYEN_PAYTRAIL',\n  CLEARPAY: 'CLEARPAY',\n  RAPYD_FAST: 'RAPYD_FAST',\n  RAPYD_PROMPTPAY: 'RAPYD_PROMPTPAY',\n  RAPYD_GCASH: 'RAPYD_GCASH',\n  RAPYD_POLI: 'RAPYD_POLI',\n  RAPYD_GRABPAY: 'RAPYD_GRABPAY',\n  PRIMER_PAYPAL: 'PRIMER_PAYPAL',\n  TWOC2P: 'TWOC2P',\n  NETS: 'NETS',\n  STRIPE_ACH: 'STRIPE_ACH',\n  STRIPE_GIROPAY: 'STRIPE_GIROPAY',\n  MOLLIE_GIROPAY: 'MOLLIE_GIROPAY',\n  MOLLIE_EPS: 'MOLLIE_EPS',\n  PAY_NL_EPS: 'PAY_NL_EPS',\n  PAY_NL_P24: 'PAY_NL_P24',\n  MOLLIE_P24: 'MOLLIE_P24',\n  MOLLIE_SOFORT: 'MOLLIE_SOFORT',\n  COINBASE: 'COINBASE',\n  OPENNODE: 'OPENNODE',\n  MOLLIE_GIFT_CARD: 'MOLLIE_GIFTCARD',\n  XFERS_PAYNOW: 'XFERS_PAYNOW',\n  CARD: 'PAYMENT_CARD',\n  APPLE_PAY: 'APPLE_PAY',\n  GOOGLE_PAY: 'GOOGLE_PAY',\n  PAYPAL: 'PAYPAL_ORDER',\n  PAYPAL_VAULTED: 'PAYPAL_BILLING_AGREEMENT',\n  GO_CARDLESS: 'GOCARDLESS',\n  PAY_NL_IDEAL: 'PAY_NL_IDEAL',\n  PAY_NL_SOFORT_BANKING: 'PAY_NL_SOFORT_BANKING',\n  PAY_NL_BANCONTACT: 'PAY_NL_BANCONTACT',\n  PAY_NL_PAYPAL: 'PAY_NL_PAYPAL',\n  PAY_NL_CREDIT_TRANSFER: 'PAY_NL_CREDIT_TRANSFER',\n  PAY_NL_DIRECT_DEBIT: 'PAY_NL_DIRECT_DEBIT',\n  PAY_NL_GIROPAY: 'PAY_NL_GIROPAY',\n  PAY_NL_PAYCONIQ: 'PAY_NL_PAYCONIQ',\n  HOOLAH: 'HOOLAH',\n  ADYEN_BLIK: 'ADYEN_BLIK',\n  ADYEN_VIPPS: 'ADYEN_VIPPS',\n  ADYEN_GIROPAY: 'ADYEN_GIROPAY',\n  ADYEN_SOFORT: 'ADYEN_SOFORT',\n  ADYEN_IDEAL: 'ADYEN_IDEAL',\n  ADYEN_TRUSTLY: 'ADYEN_TRUSTLY',\n  ADYEN_ALIPAY: 'ADYEN_ALIPAY',\n  ADYEN_TWINT: 'ADYEN_TWINT',\n  ADYEN_MOBILEPAY: 'ADYEN_MOBILEPAY',\n  MOLLIE_BANCONTACT: 'MOLLIE_BANCONTACT',\n  MOLLIE_IDEAL: 'MOLLIE_IDEAL',\n  BUCKAROO_GIROPAY: 'BUCKAROO_GIROPAY',\n  BUCKAROO_EPS: 'BUCKAROO_EPS',\n  BUCKAROO_SOFORT: 'BUCKAROO_SOFORT',\n  BUCKAROO_BANCONTACT: 'BUCKAROO_BANCONTACT',\n  BUCKAROO_IDEAL: 'BUCKAROO_IDEAL',\n  ATOME: 'ATOME',\n  KLARNA_CUSTOMER_TOKEN: 'KLARNA_CUSTOMER_TOKEN',\n}"
          },
          "default": "{ WORLDPAY_IDEAL: 'WORLDPAY_IDEAL', AUTOMATED_CLEARING_HOUSE: 'AUTOMATED_CLEARING_HOUSE', ADYEN_KLARNA: 'ADYEN_KLARNA', ADYEN_BANCONTACT_CARD: 'ADYEN_BANCONTACT_CARD', PAY_NL_KAARTDIRECT: 'PAY_NL_KAARTDIRECT', ADYEN_EPS: 'ADYEN_EPS', ADYEN_BANCONTACT_PAYCONIQ: 'ADYEN_BANCONTACT_PAYCONIQ', OMISE_PROMPTPAY: 'OMISE_PROMPTPAY', OMISE_TRUEMONEY: 'OMISE_TRUEMONEY', ADYEN_MULTIBANCO: 'ADYEN_MULTIBANCO', PACYPAY_WECHAT: 'PACYPAY_WECHAT', PACYPAY_ALIPAY: 'PACYPAY_ALIPAY', ADYEN_MBWAY: 'ADYEN_MBWAY', XENDIT_DANA: 'XENDIT_DANA', XENDIT_SHOPEEPAY: 'XENDIT_SHOPEEPAY', ADYEN_PAYSHOP: 'ADYEN_PAYSHOP', ADYEN_PAYTRAIL: 'ADYEN_PAYTRAIL', CLEARPAY: 'CLEARPAY', RAPYD_FAST: 'RAPYD_FAST', RAPYD_PROMPTPAY: 'RAPYD_PROMPTPAY', RAPYD_GCASH: 'RAPYD_GCASH', RAPYD_POLI: 'RAPYD_POLI', RAPYD_GRABPAY: 'RAPYD_GRABPAY', PRIMER_PAYPAL: 'PRIMER_PAYPAL', TWOC2P: 'TWOC2P', NETS: 'NETS', STRIPE_ACH: 'STRIPE_ACH', STRIPE_GIROPAY: 'STRIPE_GIROPAY', MOLLIE_GIROPAY: 'MOLLIE_GIROPAY', MOLLIE_EPS: 'MOLLIE_EPS', PAY_NL_EPS: 'PAY_NL_EPS', PAY_NL_P24: 'PAY_NL_P24', MOLLIE_P24: 'MOLLIE_P24', MOLLIE_SOFORT: 'MOLLIE_SOFORT', COINBASE: 'COINBASE', OPENNODE: 'OPENNODE', MOLLIE_GIFT_CARD: 'MOLLIE_GIFTCARD', XFERS_PAYNOW: 'XFERS_PAYNOW', CARD: 'PAYMENT_CARD', APPLE_PAY: 'APPLE_PAY', GOOGLE_PAY: 'GOOGLE_PAY', PAYPAL: 'PAYPAL_ORDER', PAYPAL_VAULTED: 'PAYPAL_BILLING_AGREEMENT', GO_CARDLESS: 'GOCARDLESS', PAY_NL_IDEAL: 'PAY_NL_IDEAL', PAY_NL_SOFORT_BANKING: 'PAY_NL_SOFORT_BANKING', PAY_NL_BANCONTACT: 'PAY_NL_BANCONTACT', PAY_NL_PAYPAL: 'PAY_NL_PAYPAL', PAY_NL_CREDIT_TRANSFER: 'PAY_NL_CREDIT_TRANSFER', PAY_NL_DIRECT_DEBIT: 'PAY_NL_DIRECT_DEBIT', PAY_NL_GIROPAY: 'PAY_NL_GIROPAY', PAY_NL_PAYCONIQ: 'PAY_NL_PAYCONIQ', HOOLAH: 'HOOLAH', ADYEN_BLIK: 'ADYEN_BLIK', ADYEN_VIPPS: 'ADYEN_VIPPS', ADYEN_GIROPAY: 'ADYEN_GIROPAY', ADYEN_SOFORT: 'ADYEN_SOFORT', ADYEN_IDEAL: 'ADYEN_IDEAL', ADYEN_TRUSTLY: 'ADYEN_TRUSTLY', ADYEN_ALIPAY: 'ADYEN_ALIPAY', ADYEN_TWINT: 'ADYEN_TWINT', ADYEN_MOBILEPAY: 'ADYEN_MOBILEPAY', MOLLIE_BANCONTACT: 'MOLLIE_BANCONTACT', MOLLIE_IDEAL: 'MOLLIE_IDEAL', BUCKAROO_GIROPAY: 'BUCKAROO_GIROPAY', BUCKAROO_EPS: 'BUCKAROO_EPS', BUCKAROO_SOFORT: 'BUCKAROO_SOFORT', BUCKAROO_BANCONTACT: 'BUCKAROO_BANCONTACT', BUCKAROO_IDEAL: 'BUCKAROO_IDEAL', ATOME: 'ATOME', KLARNA_CUSTOMER_TOKEN: 'KLARNA_CUSTOMER_TOKEN', }"
        },
        {
          "kind": "variable",
          "name": "PaymentMethodType",
          "type": {
            "text": "{\n  WORLDPAY_IDEAL: 'WORLDPAY_IDEAL',\n  STRIPE_ACH: 'STRIPE_ACH',\n  STRIPE_IDEAL: 'STRIPE_IDEAL',\n  ADYEN_KLARNA: 'ADYEN_KLARNA',\n  ADYEN_BANCONTACT_CARD: 'ADYEN_BANCONTACT_CARD',\n  PAY_NL_KAARTDIRECT: 'PAY_NL_KAARTDIRECT',\n  ADYEN_EPS: 'ADYEN_EPS',\n  ADYEN_BANCONTACT_PAYCONIQ: 'ADYEN_BANCONTACT_PAYCONIQ',\n  OMISE_PROMPTPAY: 'OMISE_PROMPTPAY',\n  OMISE_TRUEMONEY: 'OMISE_TRUEMONEY',\n  ADYEN_MULTIBANCO: 'ADYEN_MULTIBANCO',\n  PACYPAY_WECHAT: 'PACYPAY_WECHAT',\n  PACYPAY_ALIPAY: 'PACYPAY_ALIPAY',\n  ADYEN_MBWAY: 'ADYEN_MBWAY',\n  XENDIT_DANA: 'XENDIT_DANA',\n  XENDIT_SHOPEEPAY: 'XENDIT_SHOPEEPAY',\n  ADYEN_PAYSHOP: 'ADYEN_PAYSHOP',\n  ADYEN_PAYTRAIL: 'ADYEN_PAYTRAIL',\n  CLEARPAY: 'CLEARPAY',\n  RAPYD_FAST: 'RAPYD_FAST',\n  RAPYD_PROMPTPAY: 'RAPYD_PROMPTPAY',\n  RAPYD_GCASH: 'RAPYD_GCASH',\n  RAPYD_POLI: 'RAPYD_POLI',\n  RAPYD_GRABPAY: 'RAPYD_GRABPAY',\n  PRIMER_PAYPAL: 'PRIMER_PAYPAL',\n  TWOC2P: 'TWOC2P',\n  NETS: 'NETS',\n  STRIPE_GIROPAY: 'STRIPE_GIROPAY',\n  MOLLIE_GIROPAY: 'MOLLIE_GIROPAY',\n  MOLLIE_EPS: 'MOLLIE_EPS',\n  PAY_NL_EPS: 'PAY_NL_EPS',\n  PAY_NL_P24: 'PAY_NL_P24',\n  MOLLIE_P24: 'MOLLIE_P24',\n  MOLLIE_SOFORT: 'MOLLIE_SOFORT',\n  COINBASE: 'COINBASE',\n  OPENNODE: 'OPENNODE',\n  MOLLIE_GIFT_CARD: 'MOLLIE_GIFTCARD',\n  XFERS_PAYNOW: 'XFERS_PAYNOW',\n  PAYMENT_CARD: 'PAYMENT_CARD',\n  APPLE_PAY: 'APPLE_PAY',\n  GOOGLE_PAY: 'GOOGLE_PAY',\n  PAYPAL: 'PAYPAL',\n  GO_CARDLESS: 'GOCARDLESS',\n  KLARNA: 'KLARNA',\n  PAY_NL_IDEAL: 'PAY_NL_IDEAL',\n  PAY_NL_SOFORT_BANKING: 'PAY_NL_SOFORT_BANKING',\n  PAY_NL_BANCONTACT: 'PAY_NL_BANCONTACT',\n  PAY_NL_PAYPAL: 'PAY_NL_PAYPAL',\n  PAY_NL_CREDIT_TRANSFER: 'PAY_NL_CREDIT_TRANSFER',\n  PAY_NL_DIRECT_DEBIT: 'PAY_NL_DIRECT_DEBIT',\n  PAY_NL_GIROPAY: 'PAY_NL_GIROPAY',\n  PAY_NL_PAYCONIQ: 'PAY_NL_PAYCONIQ',\n  HOOLAH: 'HOOLAH',\n  ADYEN_BLIK: 'ADYEN_BLIK',\n  ADYEN_MOBILEPAY: 'ADYEN_MOBILEPAY',\n  ADYEN_VIPPS: 'ADYEN_VIPPS',\n  ADYEN_GIROPAY: 'ADYEN_GIROPAY',\n  ADYEN_SOFORT: 'ADYEN_SOFORT',\n  ADYEN_IDEAL: 'ADYEN_IDEAL',\n  ADYEN_TRUSTLY: 'ADYEN_TRUSTLY',\n  ADYEN_ALIPAY: 'ADYEN_ALIPAY',\n  ADYEN_TWINT: 'ADYEN_TWINT',\n  ADYEN_BANK_TRANSFER: 'ADYEN_BANK_TRANSFER',\n  MOLLIE_BANCONTACT: 'MOLLIE_BANCONTACT',\n  MOLLIE_IDEAL: 'MOLLIE_IDEAL',\n  BUCKAROO_GIROPAY: 'BUCKAROO_GIROPAY',\n  BUCKAROO_EPS: 'BUCKAROO_EPS',\n  BUCKAROO_SOFORT: 'BUCKAROO_SOFORT',\n  BUCKAROO_BANCONTACT: 'BUCKAROO_BANCONTACT',\n  BUCKAROO_IDEAL: 'BUCKAROO_IDEAL',\n  ATOME: 'ATOME',\n}"
          },
          "default": "{ WORLDPAY_IDEAL: 'WORLDPAY_IDEAL', STRIPE_ACH: 'STRIPE_ACH', STRIPE_IDEAL: 'STRIPE_IDEAL', ADYEN_KLARNA: 'ADYEN_KLARNA', ADYEN_BANCONTACT_CARD: 'ADYEN_BANCONTACT_CARD', PAY_NL_KAARTDIRECT: 'PAY_NL_KAARTDIRECT', ADYEN_EPS: 'ADYEN_EPS', ADYEN_BANCONTACT_PAYCONIQ: 'ADYEN_BANCONTACT_PAYCONIQ', OMISE_PROMPTPAY: 'OMISE_PROMPTPAY', OMISE_TRUEMONEY: 'OMISE_TRUEMONEY', ADYEN_MULTIBANCO: 'ADYEN_MULTIBANCO', PACYPAY_WECHAT: 'PACYPAY_WECHAT', PACYPAY_ALIPAY: 'PACYPAY_ALIPAY', ADYEN_MBWAY: 'ADYEN_MBWAY', XENDIT_DANA: 'XENDIT_DANA', XENDIT_SHOPEEPAY: 'XENDIT_SHOPEEPAY', ADYEN_PAYSHOP: 'ADYEN_PAYSHOP', ADYEN_PAYTRAIL: 'ADYEN_PAYTRAIL', CLEARPAY: 'CLEARPAY', RAPYD_FAST: 'RAPYD_FAST', RAPYD_PROMPTPAY: 'RAPYD_PROMPTPAY', RAPYD_GCASH: 'RAPYD_GCASH', RAPYD_POLI: 'RAPYD_POLI', RAPYD_GRABPAY: 'RAPYD_GRABPAY', PRIMER_PAYPAL: 'PRIMER_PAYPAL', TWOC2P: 'TWOC2P', NETS: 'NETS', STRIPE_GIROPAY: 'STRIPE_GIROPAY', MOLLIE_GIROPAY: 'MOLLIE_GIROPAY', MOLLIE_EPS: 'MOLLIE_EPS', PAY_NL_EPS: 'PAY_NL_EPS', PAY_NL_P24: 'PAY_NL_P24', MOLLIE_P24: 'MOLLIE_P24', MOLLIE_SOFORT: 'MOLLIE_SOFORT', COINBASE: 'COINBASE', OPENNODE: 'OPENNODE', MOLLIE_GIFT_CARD: 'MOLLIE_GIFTCARD', XFERS_PAYNOW: 'XFERS_PAYNOW', PAYMENT_CARD: 'PAYMENT_CARD', APPLE_PAY: 'APPLE_PAY', GOOGLE_PAY: 'GOOGLE_PAY', PAYPAL: 'PAYPAL', GO_CARDLESS: 'GOCARDLESS', KLARNA: 'KLARNA', PAY_NL_IDEAL: 'PAY_NL_IDEAL', PAY_NL_SOFORT_BANKING: 'PAY_NL_SOFORT_BANKING', PAY_NL_BANCONTACT: 'PAY_NL_BANCONTACT', PAY_NL_PAYPAL: 'PAY_NL_PAYPAL', PAY_NL_CREDIT_TRANSFER: 'PAY_NL_CREDIT_TRANSFER', PAY_NL_DIRECT_DEBIT: 'PAY_NL_DIRECT_DEBIT', PAY_NL_GIROPAY: 'PAY_NL_GIROPAY', PAY_NL_PAYCONIQ: 'PAY_NL_PAYCONIQ', HOOLAH: 'HOOLAH', ADYEN_BLIK: 'ADYEN_BLIK', ADYEN_MOBILEPAY: 'ADYEN_MOBILEPAY', ADYEN_VIPPS: 'ADYEN_VIPPS', ADYEN_GIROPAY: 'ADYEN_GIROPAY', ADYEN_SOFORT: 'ADYEN_SOFORT', ADYEN_IDEAL: 'ADYEN_IDEAL', ADYEN_TRUSTLY: 'ADYEN_TRUSTLY', ADYEN_ALIPAY: 'ADYEN_ALIPAY', ADYEN_TWINT: 'ADYEN_TWINT', ADYEN_BANK_TRANSFER: 'ADYEN_BANK_TRANSFER', MOLLIE_BANCONTACT: 'MOLLIE_BANCONTACT', MOLLIE_IDEAL: 'MOLLIE_IDEAL', BUCKAROO_GIROPAY: 'BUCKAROO_GIROPAY', BUCKAROO_EPS: 'BUCKAROO_EPS', BUCKAROO_SOFORT: 'BUCKAROO_SOFORT', BUCKAROO_BANCONTACT: 'BUCKAROO_BANCONTACT', BUCKAROO_IDEAL: 'BUCKAROO_IDEAL', ATOME: 'ATOME', }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaymentInstrumentType",
          "declaration": {
            "name": "PaymentInstrumentType",
            "module": "src/types/paymentTypes.ts"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethodType",
          "declaration": {
            "name": "PaymentMethodType",
            "module": "src/types/paymentTypes.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types/sdk.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ACHVaultedMethod",
          "declaration": {
            "name": "ACHVaultedMethod",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "BackgroundColor",
          "declaration": {
            "name": "BackgroundColor",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "BasePaymentInstrumentData",
          "declaration": {
            "name": "BasePaymentInstrumentData",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "CardNetworkChangeEvent",
          "declaration": {
            "name": "CardNetworkChangeEvent",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "CardNetworkDetails",
          "declaration": {
            "name": "CardNetworkDetails",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "CardPaymentMethodSubmitValues",
          "declaration": {
            "name": "CardPaymentMethodSubmitValues",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "CardPreferredFlow",
          "declaration": {
            "name": "CardPreferredFlow",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "CardSecurityCodeInputOptions",
          "declaration": {
            "name": "CardSecurityCodeInputOptions",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClientSession",
          "declaration": {
            "name": "ClientSession",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "CvvInput",
          "declaration": {
            "name": "CvvInput",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "EventTypes",
          "declaration": {
            "name": "EventTypes",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "HeadlessManagerType",
          "declaration": {
            "name": "HeadlessManagerType",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "HeadlessSDKUtilities",
          "declaration": {
            "name": "HeadlessSDKUtilities",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "HeadlessUniversalCheckoutOptions",
          "declaration": {
            "name": "HeadlessUniversalCheckoutOptions",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "HeadlessVaultManager",
          "declaration": {
            "name": "HeadlessVaultManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "IAchPaymentMethodManager",
          "declaration": {
            "name": "IAchPaymentMethodManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "IAssetsManager",
          "declaration": {
            "name": "IAssetsManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "ICardPaymentMethodManager",
          "declaration": {
            "name": "ICardPaymentMethodManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "IHeadlessHostedInput",
          "declaration": {
            "name": "IHeadlessHostedInput",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "IKlarnaPaymentMethodManager",
          "declaration": {
            "name": "IKlarnaPaymentMethodManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "INativePaymentMethodManager",
          "declaration": {
            "name": "INativePaymentMethodManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "IRedirectPaymentMethodManager",
          "declaration": {
            "name": "IRedirectPaymentMethodManager",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "IconUrl",
          "declaration": {
            "name": "IconUrl",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "InputMetadata",
          "declaration": {
            "name": "InputMetadata",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "InputStyles",
          "declaration": {
            "name": "InputStyles",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "InputValidationError",
          "declaration": {
            "name": "InputValidationError",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "KlarnaPaymentMethodCategory",
          "declaration": {
            "name": "KlarnaPaymentMethodCategory",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "KlarnaVaultedMethod",
          "declaration": {
            "name": "KlarnaVaultedMethod",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PayPalVaultedMethod",
          "declaration": {
            "name": "PayPalVaultedMethod",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "Payment",
          "declaration": {
            "name": "Payment",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PaymentCardVaultedMethod",
          "declaration": {
            "name": "PaymentCardVaultedMethod",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethodConfig",
          "declaration": {
            "name": "PaymentMethodConfig",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethodInfo",
          "declaration": {
            "name": "PaymentMethodInfo",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PaymentMethodManagerOptions",
          "declaration": {
            "name": "PaymentMethodManagerOptions",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PrimerCheckout",
          "declaration": {
            "name": "PrimerCheckout",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PrimerHeadlessCheckout",
          "declaration": {
            "name": "PrimerHeadlessCheckout",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "PrimerClientError",
          "declaration": {
            "name": "PrimerClientError",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "StripeAchCustomerDetails",
          "declaration": {
            "name": "StripeAchCustomerDetails",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "Validation",
          "declaration": {
            "name": "Validation",
            "module": "src/types/sdk.ts"
          }
        },
        {
          "kind": "js",
          "name": "VaultedPaymentMethod",
          "declaration": {
            "name": "VaultedPaymentMethod",
            "module": "src/types/sdk.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types/vault-manager.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/ComponentsLogger.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "ComponentsLogger provides static methods for styled console logging.\nEvery log is prefixed with a branded [PRIMER] tag using advanced CSS styling.",
          "name": "ComponentsLogger",
          "members": [
            {
              "kind": "field",
              "name": "enabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "static": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "defaultFont",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "'font-family: Consolas, monospace; font-size: 12px;'"
            },
            {
              "kind": "field",
              "name": "brandTag",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "static": true,
              "readonly": true,
              "default": "'[PRIMER]'"
            },
            {
              "kind": "field",
              "name": "brandStyle",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "log",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  },
                  "description": "The message to log."
                },
                {
                  "name": "args",
                  "type": {
                    "text": "any[]"
                  },
                  "description": "Additional data to log."
                }
              ],
              "description": "Logs a standard message with Primer branding."
            },
            {
              "kind": "method",
              "name": "info",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  },
                  "description": "The message to log."
                },
                {
                  "name": "args",
                  "type": {
                    "text": "any[]"
                  },
                  "description": "Additional data to log."
                }
              ],
              "description": "Logs an informational message with Primer branding."
            },
            {
              "kind": "method",
              "name": "warn",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  },
                  "description": "The message to log."
                },
                {
                  "name": "args",
                  "type": {
                    "text": "any[]"
                  },
                  "description": "Additional data to log."
                }
              ],
              "description": "Logs a warning message with Primer branding."
            },
            {
              "kind": "method",
              "name": "error",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  },
                  "description": "The message to log."
                },
                {
                  "name": "args",
                  "type": {
                    "text": "any[]"
                  },
                  "description": "Additional data to log."
                }
              ],
              "description": "Logs an error message with Primer branding."
            },
            {
              "kind": "method",
              "name": "debug",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  },
                  "description": "The message to log."
                },
                {
                  "name": "args",
                  "type": {
                    "text": "any[]"
                  },
                  "description": "Additional data to log."
                }
              ],
              "description": "Logs a debug message with Primer branding."
            },
            {
              "kind": "method",
              "name": "table",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  },
                  "description": "The data to display."
                },
                {
                  "name": "columns",
                  "optional": true,
                  "type": {
                    "text": "string[]"
                  },
                  "description": "Optional list of columns to include."
                }
              ],
              "description": "Displays tabular data as a table."
            },
            {
              "kind": "method",
              "name": "time",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "label",
                  "type": {
                    "text": "string"
                  },
                  "description": "The label for the timer."
                }
              ],
              "description": "Starts a timer with a branded label."
            },
            {
              "kind": "method",
              "name": "timeEnd",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "label",
                  "type": {
                    "text": "string"
                  },
                  "description": "The label for the timer."
                }
              ],
              "description": "Ends the timer with a branded label."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ComponentsLogger",
          "declaration": {
            "name": "ComponentsLogger",
            "module": "src/utils/ComponentsLogger.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/applyInputStyles.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "applyInputStyles",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "name": "host",
              "type": {
                "text": "HTMLElement"
              }
            }
          ],
          "description": "Applies inline base styles directly on the input element and\ninjects a style block to style its pseudo-elements (e.g., ::placeholder and :focus)."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "applyInputStyles",
          "declaration": {
            "name": "applyInputStyles",
            "module": "src/utils/applyInputStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/getFormInputBaseStyles.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getFormInputBaseStyles",
          "return": {
            "type": {
              "text": "InputStyles['base'] | null"
            }
          },
          "parameters": [
            {
              "name": "styles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getFormInputBaseStyles",
          "declaration": {
            "name": "getFormInputBaseStyles",
            "module": "src/utils/getFormInputBaseStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/isBrowser.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "isBrowser"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isBrowser",
          "declaration": {
            "name": "isBrowser",
            "module": "src/utils/isBrowser.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/loadCSS.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "injectCSS",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "css",
              "type": {
                "text": "string"
              },
              "description": "CSS content to inject"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "description": "Unique identifier for the style element"
            },
            {
              "name": "prepend",
              "default": "true",
              "type": {
                "text": "boolean"
              },
              "description": "Whether to prepend the style to the head (default: true)"
            }
          ],
          "description": "Creates a style tag with inline CSS in the document head\n\nThis function inserts the style element at the beginning of the document head,\nmaking it the first style element. This ensures that merchant-provided CSS\nvariables (which will be added later in the document) can override our defaults."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "injectCSS",
          "declaration": {
            "name": "injectCSS",
            "module": "src/utils/loadCSS.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/loadScript.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "loadScript",
          "parameters": [
            {
              "name": "src",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "module",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "loadScript",
          "declaration": {
            "name": "loadScript",
            "module": "src/utils/loadScript.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/shouldUpdateInputMeta.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "shouldUpdateInputMeta",
          "parameters": [
            {
              "name": "a",
              "type": {
                "text": "InputMetadata"
              }
            },
            {
              "name": "b",
              "type": {
                "text": "InputMetadata"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "shouldUpdateInputMeta",
          "declaration": {
            "name": "shouldUpdateInputMeta",
            "module": "src/utils/shouldUpdateInputMeta.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/toCamelCase.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toCamelCase",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "toCamelCase",
            "module": "src/utils/toCamelCase.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/button/button.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ButtonComponent",
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "| 'primary'\n    | 'secondary'\n    | 'tertiary'"
              },
              "default": "'primary'",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Loading state of the button\nWhen true, the button will display a spinner and be disabled",
              "attribute": "loading",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "buttonType",
              "type": {
                "text": "| 'button'\n    | 'submit'\n    | 'reset'"
              },
              "default": "'button'",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "selectionState",
              "type": {
                "text": "ButtonSelectionState"
              },
              "default": "'default'",
              "description": "Selection state of the button\n- default: Not checked\n- checked: Button is checked",
              "attribute": "selectionState",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates if this button is selectable/checkable",
              "attribute": "selectable",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Event handler for button click\nIf selectable, it will toggle between checked and default states"
            },
            {
              "kind": "method",
              "name": "renderCheckmark",
              "privacy": "private",
              "description": "Renders the checkmark icon when checked"
            },
            {
              "kind": "method",
              "name": "renderSpinner",
              "privacy": "private",
              "description": "Renders the spinner when in loading state"
            }
          ],
          "events": [
            {
              "name": "selection-change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "| 'primary'\n    | 'secondary'\n    | 'tertiary'"
              },
              "default": "'primary'",
              "fieldName": "variant"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Loading state of the button\nWhen true, the button will display a spinner and be disabled",
              "fieldName": "loading"
            },
            {
              "name": "type",
              "type": {
                "text": "| 'button'\n    | 'submit'\n    | 'reset'"
              },
              "default": "'button'",
              "fieldName": "buttonType"
            },
            {
              "name": "selectionState",
              "type": {
                "text": "ButtonSelectionState"
              },
              "default": "'default'",
              "description": "Selection state of the button\n- default: Not checked\n- checked: Button is checked",
              "fieldName": "selectionState"
            },
            {
              "name": "selectable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates if this button is selectable/checkable",
              "fieldName": "selectable"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ButtonComponent",
          "declaration": {
            "name": "ButtonComponent",
            "module": "src/atoms/button/button.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-button",
          "declaration": {
            "name": "ButtonComponent",
            "module": "src/atoms/button/button.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/button/button.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/button/button.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/button/button.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "ButtonComponent",
            "module": "src/atoms/button/button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/checkout-state/checkout-state.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimerCheckoutStateComponent",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'complete' | 'failure'"
              },
              "default": "'complete'",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "description",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "'complete' | 'failure'"
              },
              "default": "'complete'",
              "fieldName": "type"
            },
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "description"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-checkout-state",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutStateComponent",
          "declaration": {
            "name": "PrimerCheckoutStateComponent",
            "module": "src/atoms/checkout-state/checkout-state.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-checkout-state",
          "declaration": {
            "name": "PrimerCheckoutStateComponent",
            "module": "src/atoms/checkout-state/checkout-state.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/checkout-state/checkout-state.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/checkout-state/checkout-state.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/checkout-state/checkout-state.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutState",
          "declaration": {
            "name": "PrimerCheckoutStateComponent",
            "module": "src/atoms/checkout-state/checkout-state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/collapsable/collapsable.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A collapsable component that smoothly expands and collapses content.\nUses CSS Grid for smooth animation and incorporates the primary button.",
          "name": "CollapsableComponent",
          "members": [
            {
              "kind": "field",
              "name": "header",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The header text for the collapsable",
              "attribute": "header"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the collapsable is expanded by default",
              "attribute": "expanded"
            },
            {
              "kind": "field",
              "name": "expandText",
              "type": {
                "text": "string"
              },
              "default": "'Expand'",
              "description": "Text for expand button (for accessibility)",
              "attribute": "expandText"
            },
            {
              "kind": "field",
              "name": "collapseText",
              "type": {
                "text": "string"
              },
              "default": "'Collapse'",
              "description": "Text for collapse button (for accessibility)",
              "attribute": "collapseText"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ARIA label for the collapsable header",
              "attribute": "ariaLabel"
            },
            {
              "kind": "field",
              "name": "buttonVariant",
              "type": {
                "text": "ButtonVariant"
              },
              "default": "'primary'",
              "description": "The button variant to use",
              "attribute": "buttonVariant"
            },
            {
              "kind": "field",
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Internal state to track expanded state"
            },
            {
              "kind": "method",
              "name": "dispatchExpandedChangedEvent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "expanded",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Dispatch the expanded-changed event"
            },
            {
              "kind": "method",
              "name": "toggleExpanded",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Toggle the expanded state"
            },
            {
              "kind": "method",
              "name": "expand",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Expand the collapsable programmatically"
            },
            {
              "kind": "method",
              "name": "collapse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Collapse the collapsable programmatically"
            }
          ],
          "events": [
            {
              "name": "expanded-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "header",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The header text for the collapsable",
              "fieldName": "header"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the collapsable is expanded by default",
              "fieldName": "expanded"
            },
            {
              "name": "expandText",
              "type": {
                "text": "string"
              },
              "default": "'Expand'",
              "description": "Text for expand button (for accessibility)",
              "fieldName": "expandText"
            },
            {
              "name": "collapseText",
              "type": {
                "text": "string"
              },
              "default": "'Collapse'",
              "description": "Text for collapse button (for accessibility)",
              "fieldName": "collapseText"
            },
            {
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ARIA label for the collapsable header",
              "fieldName": "ariaLabel"
            },
            {
              "name": "buttonVariant",
              "type": {
                "text": "ButtonVariant"
              },
              "default": "'primary'",
              "description": "The button variant to use",
              "fieldName": "buttonVariant"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-collapsable",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CollapsableComponent",
          "declaration": {
            "name": "CollapsableComponent",
            "module": "src/atoms/collapsable/collapsable.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-collapsable",
          "declaration": {
            "name": "CollapsableComponent",
            "module": "src/atoms/collapsable/collapsable.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/collapsable/collapsable.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/collapsable/collapsable.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/collapsable/collapsable.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Collapsable",
          "declaration": {
            "name": "CollapsableComponent",
            "module": "src/atoms/collapsable/collapsable.ts"
          }
        },
        {
          "kind": "js",
          "name": "ButtonVariant",
          "declaration": {
            "name": "ButtonVariant",
            "module": "src/atoms/collapsable/collapsable.ts"
          }
        },
        {
          "kind": "js",
          "name": "ExpandedChangedDetail",
          "declaration": {
            "name": "ExpandedChangedDetail",
            "module": "src/atoms/collapsable/collapsable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/dialog/dialog.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DialogComponent",
          "members": [
            {
              "kind": "method",
              "name": "_handleCloseClick",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "primer-dialog-close",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DialogComponent",
          "declaration": {
            "name": "DialogComponent",
            "module": "src/atoms/dialog/dialog.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-dialog",
          "declaration": {
            "name": "DialogComponent",
            "module": "src/atoms/dialog/dialog.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/dialog/dialog.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/dialog/dialog.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/dialog/dialog.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Dialog",
          "declaration": {
            "name": "DialogComponent",
            "module": "src/atoms/dialog/dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/error-message/error-message.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A reusable atomic error message component that displays error information\nwith appropriate styling and accessibility attributes.\n\nThis component is fully accessible and designed to work with screen readers.\nIt includes animations for visibility transitions.",
          "name": "ErrorMessageComponent",
          "cssParts": [
            {
              "description": "The main error message container",
              "name": "error-message"
            },
            {
              "description": "The error icon container",
              "name": "error-icon"
            },
            {
              "description": "The error text content",
              "name": "error-content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The error message text to display",
              "attribute": "message"
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the error message is visible",
              "attribute": "visible",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'alert'",
              "description": "Accessibility role for the error message\nDefaults to \"alert\" for proper screen reader announcements",
              "attribute": "role",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showMessage",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Internal state to track animation state\nThis helps manage proper animations with DOM presence/absence"
            },
            {
              "kind": "method",
              "name": "handleVisibilityChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handle visibility changes with proper animation timing"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The error message text to display",
              "name": "message",
              "default": "''",
              "fieldName": "message"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Whether the error message is visible",
              "name": "visible",
              "default": "false",
              "fieldName": "visible"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Accessibility role for the error message\nDefaults to \"alert\" for proper screen reader announcements",
              "name": "role",
              "default": "'alert'",
              "fieldName": "role"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-error-message",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessageComponent",
          "declaration": {
            "name": "ErrorMessageComponent",
            "module": "src/atoms/error-message/error-message.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-error-message",
          "declaration": {
            "name": "ErrorMessageComponent",
            "module": "src/atoms/error-message/error-message.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/error-message/error-message.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/error-message/error-message.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/error-message/error-message.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessage",
          "declaration": {
            "name": "ErrorMessageComponent",
            "module": "src/atoms/error-message/error-message.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/icon/icon.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimerIconComponent",
          "members": [
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "string"
              },
              "default": "'var(--primer-color-icon-primary)'",
              "attribute": "color",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'lg' | 'md' | 'sm'"
              },
              "default": "'lg'",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "The name of the icon to draw - available names can be found under library.ts file",
              "attribute": "name",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "color",
              "type": {
                "text": "string"
              },
              "default": "'var(--primer-color-icon-primary)'",
              "fieldName": "color"
            },
            {
              "name": "size",
              "type": {
                "text": "'lg' | 'md' | 'sm'"
              },
              "default": "'lg'",
              "fieldName": "size"
            },
            {
              "name": "name",
              "type": {
                "text": "IconName | undefined"
              },
              "description": "The name of the icon to draw - available names can be found under library.ts file",
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerIconComponent",
          "declaration": {
            "name": "PrimerIconComponent",
            "module": "src/atoms/icon/icon.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-icon",
          "declaration": {
            "name": "PrimerIconComponent",
            "module": "src/atoms/icon/icon.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/icon/icon.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/icon/icon.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/icon/icon.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerIcon",
          "declaration": {
            "name": "PrimerIconComponent",
            "module": "src/atoms/icon/icon.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/icon/library.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "icons",
          "type": {
            "text": "Record<string, SVGTemplateResult>"
          },
          "default": "{ 'pencil': svg` <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M12.3292 1.82659C12.142 1.63935 11.8779 1.53418 11.6028 1.53418C11.3277 1.53418 11.0636 1.63935 10.8764 1.82659L2.92969 9.77325V13.0666H6.22306L14.1698 5.11992C14.357 4.93268 14.4622 4.66859 14.4622 4.39352C14.4622 4.11844 14.357 3.85435 14.1698 3.66711L12.3292 1.82659ZM5.77375 11.7333H4.26302V10.2225L10.8764 3.60919L12.3871 5.11992L5.77375 11.7333Z\" fill=\"currentColor\"/> </svg> `, 'trash': svg` <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M13.8333 2.99992H11.5V2.49992C11.5 2.05789 11.3244 1.63397 11.0118 1.32141C10.6993 1.00885 10.2754 0.833252 9.83333 0.833252H6.16667C5.72464 0.833252 5.30072 1.00885 4.98816 1.32141C4.67559 1.63397 4.5 2.05789 4.5 2.49992V2.99992H2.16667C1.98986 2.99992 1.82029 3.07015 1.69526 3.19518C1.57024 3.32021 1.5 3.48978 1.5 3.66659C1.5 3.8434 1.57024 4.01297 1.69526 4.138C1.82029 4.26302 1.98986 4.33326 2.16667 4.33326H2.83333V12.4999C2.83333 12.942 3.00893 13.3659 3.32149 13.6784C3.63405 13.991 4.05797 14.1666 4.5 14.1666H11.5C11.942 14.1666 12.3659 13.991 12.6785 13.6784C12.9911 13.3659 13.1667 12.942 13.1667 12.4999V4.33326H13.8333C14.0101 4.33326 14.1797 4.26302 14.3047 4.138C14.4298 4.01297 14.5 3.8434 14.5 3.66659C14.5 3.48978 14.4298 3.32021 14.3047 3.19518C14.1797 3.07015 14.0101 2.99992 13.8333 2.99992ZM5.83333 2.49992C5.83333 2.32311 5.90357 2.15354 6.0286 2.02851C6.15362 1.90349 6.32319 1.83325 6.5 1.83325H9.5C9.67681 1.83325 9.84638 1.90349 9.9714 2.02851C10.0964 2.15354 10.1667 2.32311 10.1667 2.49992V2.99992H5.83333V2.49992ZM11.8333 12.4999C11.8333 12.6767 11.7631 12.8463 11.6381 12.9713C11.513 13.0964 11.3435 13.1666 11.1667 13.1666H4.83333C4.65652 13.1666 4.48695 13.0964 4.36193 12.9713C4.2369 12.8463 4.16667 12.6767 4.16667 12.4999V4.33326H11.8333V12.4999Z\" fill=\"currentColor\"/> <path d=\"M6.5 10.9999C6.67681 10.9999 6.84638 10.9297 6.9714 10.8047C7.09643 10.6796 7.16667 10.5101 7.16667 10.3333V7.33325C7.16667 7.15644 7.09643 6.98687 6.9714 6.86184C6.84638 6.73682 6.67681 6.66658 6.5 6.66658C6.32319 6.66658 6.15362 6.73682 6.0286 6.86184C5.90357 6.98687 5.83333 7.15644 5.83333 7.33325V10.3333C5.83333 10.5101 5.90357 10.6796 6.0286 10.8047C6.15362 10.9297 6.32319 10.9999 6.5 10.9999Z\" fill=\"currentColor\"/> <path d=\"M9.5 10.9999C9.67681 10.9999 9.84638 10.9297 9.9714 10.8047C10.0964 10.6796 10.1667 10.5101 10.1667 10.3333V7.33325C10.1667 7.15644 10.0964 6.98687 9.9714 6.86184C9.84638 6.73682 9.67681 6.66658 9.5 6.66658C9.32319 6.66658 9.15362 6.73682 9.0286 6.86184C8.90357 6.98687 8.83333 7.15644 8.83333 7.33325V10.3333C8.83333 10.5101 8.90357 10.6796 9.0286 10.8047C9.15362 10.9297 9.32319 10.9999 9.5 10.9999Z\" fill=\"currentColor\"/> </svg> `, 'successful-check': svg` <svg viewBox=\"0 0 56 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" > <g id=\"icon/check-circle-large\"> <path id=\"vector\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.1762 29.5746L24.8429 34.2413C25.295 34.7007 26.0387 34.7007 26.4908 34.2413L35.8241 24.9079C36.2835 24.4559 36.2835 23.7121 35.8241 23.26C35.372 22.8007 34.6283 22.8007 34.1762 23.26L25.6668 31.7694L21.8241 27.9267C21.372 27.4673 20.6283 27.4673 20.1762 27.9267C19.7168 28.3788 19.7168 29.1225 20.1762 29.5746ZM28.0002 47.4173C38.3106 47.4173 46.6668 39.0611 46.6668 28.7507C46.6668 18.4402 38.3106 10.084 28.0002 10.084C17.6897 10.084 9.3335 18.4402 9.3335 28.7507C9.3335 39.0611 17.6897 47.4173 28.0002 47.4173Z\" /> </g> </svg> `, 'failure-icon': svg` <svg viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" > <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0008 23.3333C20.4614 23.3333 20.7873 22.9606 20.7873 22.5V15C20.7873 14.5394 20.4146 14.1666 20.0008 14.1666C19.587 14.1666 19.1675 14.5416 19.1675 15V22.5C19.1675 22.9583 19.5425 23.3333 20.0008 23.3333ZM32.9331 27.3594L22.5269 9.75935C22.0008 8.86821 21.0529 8.33488 20.0008 8.33331C18.9487 8.33331 18.006 8.8656 17.4748 9.75831L7.06331 27.3625C6.53987 28.2463 6.53206 29.3073 7.04134 30.201C7.568 31.1198 8.51904 31.6666 9.58935 31.6666H30.4175C31.4857 31.6666 32.4357 31.1182 32.9597 30.1995C33.4696 29.3073 33.4591 28.2448 32.9331 27.3594ZM18.7977 26.6666C18.7977 25.976 19.3107 25.4166 20.0008 25.4166C20.6935 25.4166 21.2508 25.9739 21.2039 26.6666C21.2039 27.3568 20.6909 27.9166 20.0008 27.9166C19.3576 27.9166 18.7977 27.3568 18.7977 26.6666Z\" /> </svg> `, 'payment-card': svg` <svg width=\"28\" height=\"21\" viewBox=\"0 0 28 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <rect y=\"0.748047\" width=\"28\" height=\"20\" rx=\"2\" fill=\"#E0E0E0\"/> <rect y=\"6.74805\" width=\"28\" height=\"4\" fill=\"#212121\"/> <rect x=\"19\" y=\"13.748\" width=\"6\" height=\"4\" rx=\"0.933333\" fill=\"white\"/> </svg> `, 'chevron-down': svg` <svg width=\"8\" height=\"6\" viewBox=\"0 0 8 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M4.41978 4.90118C4.32079 5.02361 4.16188 5.08353 4.00037 5.08353C3.83887 5.08353 3.67996 5.02361 3.55753 4.90118L0.63995 1.9836C0.395733 1.73939 0.395733 1.34382 0.63995 1.09947C0.884167 0.855124 1.27973 0.855254 1.52408 1.09947L4.00037 3.57524L6.47589 1.09973C6.72011 0.855515 7.11567 0.855515 7.36002 1.09973C7.60437 1.34395 7.60424 1.73952 7.36002 1.98386L4.41978 4.90118Z\" fill=\"#212121\"/> </svg>`, 'checkmark': svg` <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M15.6326 6.12193C15.8983 6.3668 15.8983 6.76276 15.6326 6.98418L8.75546 13.8613C8.53404 14.127 8.13808 14.127 7.89321 13.8613L4.35119 10.3186C4.10706 10.0971 4.10706 9.70118 4.35119 9.45631C4.59531 9.21404 4.99126 9.21404 5.23535 9.45631L8.33606 12.5588L14.7704 6.12193C15.0152 5.87863 15.4112 5.87863 15.6326 6.12193Z\" fill=\"#212121\"/> </svg> `, 'close': svg` <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"> <path d=\"M14.7551 13.734C15.0479 14.0269 15.0479 14.502 14.7551 14.7949C14.4622 15.0879 13.987 15.0878 13.6941 14.7949L10.0005 11.0738L6.28054 14.7937C5.98767 15.0866 5.51249 15.0866 5.21959 14.7937C4.92668 14.5008 4.92671 14.0256 5.21959 13.7327L8.94075 10.0141L5.21856 6.26604C4.92568 5.97316 4.92568 5.49798 5.21856 5.20508C5.51143 4.91217 5.98661 4.91221 6.27951 5.20508L10.0005 8.95438L13.7204 5.23446C14.0132 4.94159 14.4884 4.94159 14.7813 5.23446C15.0742 5.52734 15.0742 6.00252 14.7813 6.29542L11.0602 10.0141L14.7551 13.734Z\" fill=\"#212121\" /> </svg> `, }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "icons",
          "declaration": {
            "name": "icons",
            "module": "src/atoms/icon/library.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input/input.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A fully type-safe input component that wraps the native HTML input element\nwhile providing additional functionality and styling.",
          "name": "InputComponent",
          "cssParts": [
            {
              "description": "The native input element",
              "name": "input"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "inputElement",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "placeholder",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "name",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "InputType"
              },
              "default": "'text'",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "pattern",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "minlength",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "minlength",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "attribute": "maxlength",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "min",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "max",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "step",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "autocomplete",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hasFocus",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "hasError",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "Handles input events and dispatches a custom event with the current value"
            },
            {
              "kind": "method",
              "name": "handleChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "Handles change events and dispatches a custom event with the committed value"
            },
            {
              "kind": "method",
              "name": "handleFocus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handles focus events and updates internal state"
            },
            {
              "kind": "method",
              "name": "handleBlur",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handles blur events and updates internal state"
            },
            {
              "kind": "method",
              "name": "handleInvalid",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "Handles invalid events and updates internal state"
            },
            {
              "kind": "method",
              "name": "focus",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "FocusOptions"
                  },
                  "description": "Optional focus options"
                }
              ],
              "description": "Focus the input element"
            },
            {
              "kind": "method",
              "name": "blur",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Remove focus from the input element"
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Select all text in the input element"
            },
            {
              "kind": "method",
              "name": "setSelectionRange",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "start",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "end",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "direction",
                  "optional": true,
                  "type": {
                    "text": "'forward' | 'backward' | 'none'"
                  }
                }
              ],
              "description": "Set the selection range of the input element"
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "description": "Get the validity state of the input element",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "description": "Get the validation message of the input element",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "description": "Check if the input element is valid"
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "description": "Report the validity of the input element"
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(ev: InputEventMap[K]) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "description": "Type safe event dispatcher - allows consumers to use proper types\nwhen listening to events from this component"
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "text": "(ev: InputEventMap[K]) => void"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | EventListenerOptions"
                  }
                }
              ],
              "description": "Type safe event dispatcher removal"
            }
          ],
          "events": [
            {
              "name": "focus",
              "type": {
                "text": "FocusEvent"
              },
              "description": "Fired when the input receives focus"
            },
            {
              "name": "blur",
              "type": {
                "text": "FocusEvent"
              },
              "description": "Fired when the input loses focus"
            },
            {
              "name": "invalid",
              "type": {
                "text": "Event"
              },
              "description": "Fired when the input fails validation"
            },
            {
              "description": "Fired when the input value changes",
              "name": "input"
            },
            {
              "description": "Fired when the input value is committed",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "placeholder"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            },
            {
              "name": "type",
              "type": {
                "text": "InputType"
              },
              "default": "'text'",
              "fieldName": "type"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "pattern"
            },
            {
              "name": "minlength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "minlength"
            },
            {
              "name": "maxlength",
              "type": {
                "text": "number | undefined"
              },
              "fieldName": "maxlength"
            },
            {
              "name": "min",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "min"
            },
            {
              "name": "max",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "max"
            },
            {
              "name": "step",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "step"
            },
            {
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "autocomplete"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "id"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputComponent",
          "declaration": {
            "name": "InputComponent",
            "module": "src/atoms/input/input.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input",
          "declaration": {
            "name": "InputComponent",
            "module": "src/atoms/input/input.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input/input.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/input/input.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input/input.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "InputComponent",
            "module": "src/atoms/input/input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-error/input-error.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Input error component for displaying form validation messages",
          "name": "InputErrorComponent",
          "slots": [
            {
              "description": "Default slot for error message content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "for",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ID of the form control this error message is associated with",
              "attribute": "for",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether the error is currently active/visible",
              "attribute": "active",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "for",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ID of the form control this error message is associated with",
              "fieldName": "for"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether the error is currently active/visible",
              "fieldName": "active"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-input-error",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputErrorComponent",
          "declaration": {
            "name": "InputErrorComponent",
            "module": "src/atoms/input-error/input-error.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-error",
          "declaration": {
            "name": "InputErrorComponent",
            "module": "src/atoms/input-error/input-error.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-error/input-error.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/input-error/input-error.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-error/input-error.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormError",
          "declaration": {
            "name": "InputErrorComponent",
            "module": "src/atoms/input-error/input-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-label/input-label.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Input label component for form elements",
          "name": "InputLabelComponent",
          "slots": [
            {
              "description": "Default slot for label text content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "for",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ID of the form control this label is associated with",
              "attribute": "for",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the label should appear disabled",
              "attribute": "disabled",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "for",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "ID of the form control this label is associated with",
              "fieldName": "for"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the label should appear disabled",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-input-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputLabelComponent",
          "declaration": {
            "name": "InputLabelComponent",
            "module": "src/atoms/input-label/input-label.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-label",
          "declaration": {
            "name": "InputLabelComponent",
            "module": "src/atoms/input-label/input-label.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-label/input-label.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/input-label/input-label.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-label/input-label.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "InputLabel",
          "declaration": {
            "name": "InputLabelComponent",
            "module": "src/atoms/input-label/input-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-wrapper/input-wrapper.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A wrapper component for input elements that handles focus styling and interactions.\nProvides an improved user experience by making the entire wrapper clickable to focus the inner input.\n\nFeatures:\n- Automatically focuses primer-input elements when wrapper is clicked\n- Dispatches wrapper-click events for iframe-based hosted inputs\n- Sets proper cursor styling to indicate text input functionality",
          "name": "InputWrapperComponent",
          "members": [
            {
              "kind": "field",
              "name": "focusWithin",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "focusWithin"
            },
            {
              "kind": "field",
              "name": "hasError",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "has-error",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "inputSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleWrapperClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "description": "Event handler for click events on the input slot wrapper.\nDoes one of the following:\n1. If a primer-input is found inside, focus it directly\n2. Otherwise, dispatch a wrapper-click event for hosted inputs to handle"
            },
            {
              "kind": "method",
              "name": "findSlottedPrimerInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Finds the first primer-input element inside the input slot"
            }
          ],
          "events": [
            {
              "name": "wrapper-click",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "focusWithin",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "focusWithin"
            },
            {
              "name": "has-error",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hasError"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-input-wrapper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputWrapperComponent",
          "declaration": {
            "name": "InputWrapperComponent",
            "module": "src/atoms/input-wrapper/input-wrapper.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-wrapper",
          "declaration": {
            "name": "InputWrapperComponent",
            "module": "src/atoms/input-wrapper/input-wrapper.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-wrapper/input-wrapper.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/input-wrapper/input-wrapper.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/input-wrapper/input-wrapper.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "InputWrapper",
          "declaration": {
            "name": "InputWrapperComponent",
            "module": "src/atoms/input-wrapper/input-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/portal/portal.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PortalComponent",
          "members": [
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "getContainer"
            },
            {
              "kind": "method",
              "name": "_setupEventListeners",
              "privacy": "private",
              "parameters": [
                {
                  "name": "container",
                  "type": {
                    "text": "HTMLDivElement"
                  }
                }
              ],
              "description": "Proxies the events sent from the portalled content and\nre-dispatches them.\n\nTODO: find a better way to scale to new events instead\nof hardcoding them one by one here."
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "HTMLElementEventMap['slotchange']"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-portal",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PortalComponent",
          "declaration": {
            "name": "PortalComponent",
            "module": "src/atoms/portal/portal.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-portal",
          "declaration": {
            "name": "PortalComponent",
            "module": "src/atoms/portal/portal.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/portal/portal.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/portal/portal.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/portal/portal.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Portal",
          "declaration": {
            "name": "PortalComponent",
            "module": "src/atoms/portal/portal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/spinner/spinner.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Spinner component with configurable size and color\nAdapted to work both standalone and within input components",
          "name": "SpinnerComponent",
          "members": [
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "string"
              },
              "default": "'var(--primer-color-loader)'",
              "description": "Color of the spinner\nDefaults to the design system loader color",
              "attribute": "color"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "SpinnerSize | string"
              },
              "default": "'medium'",
              "description": "Size of the spinner\nAvailable values: 'small', 'medium', 'large' or a custom number as string",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use compact mode (minimal margins)\nUseful when embedding in inputs",
              "attribute": "compact"
            },
            {
              "kind": "method",
              "name": "getSize",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "description": "Get the actual size value in pixels"
            }
          ],
          "attributes": [
            {
              "name": "color",
              "type": {
                "text": "string"
              },
              "default": "'var(--primer-color-loader)'",
              "description": "Color of the spinner\nDefaults to the design system loader color",
              "fieldName": "color"
            },
            {
              "name": "size",
              "type": {
                "text": "SpinnerSize | string"
              },
              "default": "'medium'",
              "description": "Size of the spinner\nAvailable values: 'small', 'medium', 'large' or a custom number as string",
              "fieldName": "size"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use compact mode (minimal margins)\nUseful when embedding in inputs",
              "fieldName": "compact"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-spinner",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SpinnerComponent",
          "declaration": {
            "name": "SpinnerComponent",
            "module": "src/atoms/spinner/spinner.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-spinner",
          "declaration": {
            "name": "SpinnerComponent",
            "module": "src/atoms/spinner/spinner.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/spinner/spinner.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/atoms/spinner/spinner.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/atoms/spinner/spinner.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Spinner",
          "declaration": {
            "name": "SpinnerComponent",
            "module": "src/atoms/spinner/spinner.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/ach-payment/ach-payment-events-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AchPaymentEventsController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "PrimerCheckoutComponent"
              },
              "default": "host"
            },
            {
              "kind": "method",
              "name": "_error",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PrimerEvents['primer-ach-error']"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_mandateConfirmed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_mandateDeclined",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AchPaymentEventsController",
          "declaration": {
            "name": "AchPaymentEventsController",
            "module": "src/containers/ach-payment/ach-payment-events-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/ach-payment/ach-payment-form-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AchPaymentFormControler",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "AchPaymentComponent"
              },
              "default": "host"
            },
            {
              "kind": "field",
              "name": "validate",
              "type": {
                "text": "ValidationFunction"
              },
              "default": "validate"
            },
            {
              "kind": "field",
              "name": "formState",
              "type": {
                "text": "AchFormStateMap"
              }
            },
            {
              "kind": "field",
              "name": "hasError",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "formData",
              "type": {
                "text": "StripeAchCustomerDetails"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setFieldValue",
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "AchField"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValidation",
              "parameters": [
                {
                  "name": "validation",
                  "type": {
                    "text": "Validation"
                  }
                },
                {
                  "name": "submit",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setFieldTouched",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "AchField"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetForm"
            },
            {
              "kind": "method",
              "name": "isValidFieldName",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "field is AchField"
                }
              },
              "parameters": [
                {
                  "name": "field",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AchPaymentFormControler",
          "declaration": {
            "name": "AchPaymentFormControler",
            "module": "src/containers/ach-payment/ach-payment-form-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/ach-payment/ach-payment.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AchPaymentComponent",
          "members": [
            {
              "kind": "field",
              "name": "formController",
              "privacy": "protected",
              "readonly": true,
              "default": "new AchPaymentFormControler( this, (data) => this._paymentMethodManagerTask.value!.setAndValidate(data), )"
            },
            {
              "kind": "field",
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "attribute": "paymentMethod"
            },
            {
              "kind": "field",
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext | undefined"
              },
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "clientOptions",
              "type": {
                "text": "ClientOptionsContext | undefined"
              },
              "default": "undefined"
            },
            {
              "kind": "field",
              "name": "screen",
              "type": {
                "text": "'form' | 'mandate'"
              },
              "default": "'form'"
            },
            {
              "kind": "field",
              "name": "isSubmitting",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_paymentMethodManagerTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodType]) => { if (paymentMethodType !== 'STRIPE_ACH') return initialState; return this.paymentManagers.get(paymentMethodType)?.manager; }, args: () => [this.paymentMethod?.type], })"
            },
            {
              "kind": "method",
              "name": "_handleInput",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "field",
                  "type": {
                    "text": "AchField"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleBlur",
              "privacy": "private",
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "AchField"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleError",
              "privacy": "private",
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "unknown"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSubmitButtonClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "manager",
                  "type": {
                    "text": "IAchPaymentMethodManager"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleCollectBankAccountDetails",
              "privacy": "private",
              "parameters": [
                {
                  "name": "manager",
                  "type": {
                    "text": "IAchPaymentMethodManager"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleConfirmMandate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "_handleDeclineMandate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderForm",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "parameters": [
                {
                  "name": "manager",
                  "type": {
                    "text": "IAchPaymentMethodManager"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderMandate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            }
          ],
          "events": [
            {
              "name": "primer-ach-error",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "primer-ach-bank-details-collected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "primer-ach-mandate-confirmed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "primer-ach-mandate-declined",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "fieldName": "paymentMethod"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-ach-payment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AchPaymentComponent",
          "declaration": {
            "name": "AchPaymentComponent",
            "module": "src/containers/ach-payment/ach-payment.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-ach-payment",
          "declaration": {
            "name": "AchPaymentComponent",
            "module": "src/containers/ach-payment/ach-payment.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/ach-payment/ach-payment.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/ach-payment/ach-payment.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/ach-payment/ach-payment.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "AchPayment",
          "declaration": {
            "name": "AchPaymentComponent",
            "module": "src/containers/ach-payment/ach-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/card-form-context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "cardFormContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "cardFormContext",
          "declaration": {
            "name": "cardFormContext",
            "module": "src/containers/card-form/card-form-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/card-form.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "CardFormComponent serves as a container for card input components.\nIt handles form submission, validation, and provides context to child components.",
          "name": "CardFormComponent",
          "members": [
            {
              "kind": "field",
              "name": "hideLabels",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hide-labels",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hasAssignedContent",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Tracks whether custom content has been provided via slot"
            },
            {
              "kind": "field",
              "name": "selectedCardNetwork",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()",
              "description": "Payment managers injected from context",
              "attribute": "paymentManagers"
            },
            {
              "kind": "field",
              "name": "cardFormProvider",
              "privacy": "private",
              "readonly": true,
              "default": "new ContextProvider(this, { context: cardFormContext, initialValue: null, })",
              "description": "Context provider for card form data"
            },
            {
              "kind": "field",
              "name": "eventsController",
              "privacy": "private",
              "readonly": true,
              "default": "new PrimerEventsController(this)",
              "description": "Events controller for dispatching form events"
            },
            {
              "kind": "field",
              "name": "setupCardFormTask",
              "privacy": "private",
              "readonly": true,
              "default": "new Task(this, { task: async ([cardManager]) => { if (!cardManager?.manager) return initialState; const { manager } = cardManager; const { cardNumberInput, expiryInput, cvvInput } = manager.createHostedInputs(); this.cardFormProvider.setValue({ cardNumberInput, expiryInput, cvvInput, setCardholderName: (val: string) => manager.setCardholderName(val), setCardNetwork: (val: string) => { this.selectedCardNetwork = val; }, validate: () => manager.validate(), submit: (args) => manager.submit(args), hideLabels: this.hideLabels, }); return true; }, args: () => [this.paymentManagers.get('PAYMENT_CARD')], })",
              "description": "Task to set up the card form with hosted inputs"
            },
            {
              "kind": "field",
              "name": "handleSlotButtonClick",
              "privacy": "private",
              "description": "Handles click events from slotted content.\nSupports both native <button> and custom <primer-button> elements."
            },
            {
              "kind": "field",
              "name": "handleDirectSubmit",
              "privacy": "private",
              "description": "Handles direct submit events from child components\nThis is a backup method to catch all possible submission events"
            },
            {
              "kind": "method",
              "name": "isSubmitButton",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "button",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "description": "Determines if a button is a submit button based on its attributes"
            },
            {
              "kind": "field",
              "name": "onSlotChange",
              "privacy": "private",
              "description": "Handles slot change events to detect custom content"
            },
            {
              "kind": "method",
              "name": "submitCardPayment",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Handles the card form submission.\nValidates the form and dispatches either a submit success or errors event."
            },
            {
              "kind": "field",
              "name": "handleFormSubmit",
              "privacy": "private",
              "description": "Event handler for form submission\nHandles both native form submissions and custom events"
            }
          ],
          "attributes": [
            {
              "name": "hide-labels",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hideLabels"
            },
            {
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()",
              "description": "Payment managers injected from context",
              "fieldName": "paymentManagers"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-card-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormComponent",
          "declaration": {
            "name": "CardFormComponent",
            "module": "src/containers/card-form/card-form.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-card-form",
          "declaration": {
            "name": "CardFormComponent",
            "module": "src/containers/card-form/card-form.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/card-form.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/card-form.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/card-form.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormCardNumber",
          "declaration": {
            "name": "CardFormCardNumber",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCVV",
          "declaration": {
            "name": "CardFormCVV",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "CardFormExpiry",
          "declaration": {
            "name": "CardFormExpiry",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "CardFormName",
          "declaration": {
            "name": "CardFormName",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "CardFormSubmit",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCardNetworkSelector",
          "declaration": {
            "name": "CardFormCardNetworkSelector",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "CardForm",
          "declaration": {
            "name": "CardFormComponent",
            "module": "src/containers/card-form/card-form.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/dynamic-payment/dynamic-payment.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DynamicPaymentComponent",
          "members": [
            {
              "kind": "field",
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "attribute": "paymentMethod"
            },
            {
              "kind": "field",
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_paymentMethodManagerTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodType, paymentManagers]) => { if (!paymentMethodType || !paymentManagers) { return initialState; } return paymentManagers.get(paymentMethodType as DynamicPaymentMethodTypes) ?.manager; }, args: () => [this.paymentMethod?.type, this.paymentManagers], })"
            },
            {
              "kind": "field",
              "name": "_getAssetsTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodType, headlessUtils]) => { if (!paymentMethodType || !headlessUtils) { return initialState; } const paymentConfig = headlessUtils.getPaymentMethodConfiguration(paymentMethodType); if (!paymentConfig) { return initialState; } const backgroundColor = paymentConfig.displayMetadata.button.backgroundColor.colored; return { backgroundColor, name: paymentConfig.name, displayName: this._legacyGetButtonLabel( paymentConfig.displayMetadata.button.text, ), iconUrl: paymentConfig.displayMetadata.button.iconUrl.colored || paymentConfig.displayMetadata.button.iconUrl.light || paymentConfig.displayMetadata.button.iconUrl.dark, }; }, args: () => [this.paymentMethod?.type, this.headlessUtils], })"
            },
            {
              "kind": "method",
              "name": "_legacyGetButtonLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "text",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Based on packages/primer-sdk-web/src/payment-methods/Button.tsx\nShould be replaced once we align on a better solution across all platforms.\nTODO: get label from payment config"
            },
            {
              "kind": "field",
              "name": "_setupTasks",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodManager, assetsConfig]) => { if (!paymentMethodManager || !assetsConfig) { return initialState; } return { paymentMethodManager, assetsConfig }; }, args: () => [ this._paymentMethodManagerTask.value, this._getAssetsTask.value, ], })"
            },
            {
              "kind": "method",
              "name": "start"
            },
            {
              "kind": "method",
              "name": "renderDialog"
            }
          ],
          "attributes": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "fieldName": "paymentMethod"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-dynamic-payment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DynamicPaymentComponent",
          "declaration": {
            "name": "DynamicPaymentComponent",
            "module": "src/containers/dynamic-payment/dynamic-payment.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-dynamic-payment",
          "declaration": {
            "name": "DynamicPaymentComponent",
            "module": "src/containers/dynamic-payment/dynamic-payment.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/dynamic-payment/dynamic-payment.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/dynamic-payment/dynamic-payment.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/dynamic-payment/dynamic-payment.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "DynamicPayment",
          "declaration": {
            "name": "DynamicPaymentComponent",
            "module": "src/containers/dynamic-payment/dynamic-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/error-message-container/error-message-container.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A container component that connects to the SDK state context\nand displays appropriate error messages based on error state.\n\nThis component handles both process errors (typically from backend)\nand validation errors (typically from client-side), managing when\nand how they are displayed based on the current SDK state.",
          "name": "ErrorMessageContainerComponent",
          "members": [
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext | undefined"
              },
              "privacy": "protected",
              "description": "Consume the SDK state context\nThis automatically subscribes to changes in the SDK state"
            },
            {
              "kind": "field",
              "name": "showProcessingErrors",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "show-processing-errors"
            },
            {
              "kind": "field",
              "name": "shouldShowError",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "description": "Determine if an error should be shown\nTakes into account the current SDK state and component configuration",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "show-processing-errors",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "showProcessingErrors"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-error-message-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessageContainerComponent",
          "declaration": {
            "name": "ErrorMessageContainerComponent",
            "module": "src/containers/error-message-container/error-message-container.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-error-message-container",
          "declaration": {
            "name": "ErrorMessageContainerComponent",
            "module": "src/containers/error-message-container/error-message-container.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/error-message-container/error-message-container.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/error-message-container/error-message-container.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/error-message-container/error-message-container.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorMessageContainer",
          "declaration": {
            "name": "ErrorMessageContainerComponent",
            "module": "src/containers/error-message-container/error-message-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/klarna/klarna.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "This component renders Klarna payment method in a card-like (accordion) container with\npayment categories options to choose from.\n\n[ Pay with Klarna    v ] --> accordion header\n\n[ Pay Now ] [ Buy now, pay later ] --> payment categories options from Klarna\n[ Continue with Klarna ] --> opens a Klarna popup",
          "name": "PrimerKlarnaComponent",
          "members": [
            {
              "kind": "field",
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()",
              "attribute": "paymentManagers"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "attribute": "sdkState"
            },
            {
              "kind": "field",
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "attribute": "headlessUtils"
            },
            {
              "kind": "field",
              "name": "klarnaCategories",
              "type": {
                "text": "KlarnaCategoriesContext | null"
              },
              "default": "null",
              "attribute": "klarnaCategories"
            },
            {
              "kind": "field",
              "name": "selectedCategory",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "isExpanded",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "headerAriaLabel",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "klarnaContainer",
              "type": {
                "text": "HTMLDivElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_paymentMethodManagerTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([manager, headlessUtils]) => { if (!manager || !headlessUtils) { return initialState; } const assetsConfig = await headlessUtils.getCDNAssets('KLARNA'); return { manager: manager.manager, klarnaIcon: assetsConfig?.assets?.icon ? `${assetsConfig.goatCdnUrl}/${assetsConfig.assets.icon}` : '', }; }, args: () => [this.paymentManagers.get('KLARNA'), this.headlessUtils], })"
            },
            {
              "kind": "method",
              "name": "toggleExpand"
            },
            {
              "kind": "method",
              "name": "startKlarnaPayment"
            },
            {
              "kind": "method",
              "name": "renderSelectedCategory"
            },
            {
              "kind": "method",
              "name": "selectCategory",
              "parameters": [
                {
                  "name": "category",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderCategorySelection"
            },
            {
              "kind": "method",
              "name": "renderExpandedContent"
            }
          ],
          "attributes": [
            {
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()",
              "fieldName": "paymentManagers"
            },
            {
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "fieldName": "sdkState"
            },
            {
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "fieldName": "headlessUtils"
            },
            {
              "name": "klarnaCategories",
              "type": {
                "text": "KlarnaCategoriesContext | null"
              },
              "default": "null",
              "fieldName": "klarnaCategories"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-klarna",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerKlarnaComponent",
          "declaration": {
            "name": "PrimerKlarnaComponent",
            "module": "src/containers/klarna/klarna.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-klarna",
          "declaration": {
            "name": "PrimerKlarnaComponent",
            "module": "src/containers/klarna/klarna.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/klarna/klarna.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/klarna/klarna.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/klarna/klarna.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerKlarna",
          "declaration": {
            "name": "PrimerKlarnaComponent",
            "module": "src/containers/klarna/klarna.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/native-payment/native-payment.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for rendering native payment buttons (Apple Pay, Google Pay, PayPal)\nwith proper height calculations based on design system variables.",
          "name": "NativePaymentComponent",
          "members": [
            {
              "kind": "field",
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "attribute": "paymentMethod"
            },
            {
              "kind": "field",
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()",
              "attribute": "paymentManagers"
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles"
            },
            {
              "kind": "field",
              "name": "_buttonId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'button-container'"
            },
            {
              "kind": "field",
              "name": "loadManagerTask",
              "type": {
                "text": "Task<\n    [string | undefined],\n    INativePaymentMethodManager\n  >"
              },
              "privacy": "private",
              "default": "new Task(this, { args: () => [ this.paymentMethod?.type as NativePaymentMethodTypes | undefined, ], task: async ([type]) => { if (!type) { return initialState; } const manager = this.paymentManagers.get(type)?.manager; if (!manager) { throw new Error(`No manager found for payment method type ${type}`); } return manager; }, })"
            },
            {
              "kind": "method",
              "name": "calculateButtonHeight",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "description": "Calculates the button height based on CSS variables\nMirrors the calculation used in the host styles"
            },
            {
              "kind": "method",
              "name": "createRenderOptions",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{\n    style: Record<string, unknown>;\n  }"
                }
              },
              "parameters": [
                {
                  "name": "buttonHeight",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Creates render options with appropriate styles based on payment method type"
            }
          ],
          "attributes": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "fieldName": "paymentMethod"
            },
            {
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()",
              "fieldName": "paymentManagers"
            },
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-native-payment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NativePaymentComponent",
          "declaration": {
            "name": "NativePaymentComponent",
            "module": "src/containers/native-payment/native-payment.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-native-payment",
          "declaration": {
            "name": "NativePaymentComponent",
            "module": "src/containers/native-payment/native-payment.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/native-payment/native-payment.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/native-payment/native-payment.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/native-payment/native-payment.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "NativePayment",
          "declaration": {
            "name": "NativePaymentComponent",
            "module": "src/containers/native-payment/native-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/payment-method/payment-method.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PaymentMethodComponent",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "PaymentMethodType | undefined"
              },
              "default": "undefined",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "paymentMethods",
              "type": {
                "text": "PaymentMethodsContext"
              },
              "default": "null",
              "attribute": "paymentMethods"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "type": {
                "text": "PaymentMethodType | undefined"
              },
              "default": "undefined",
              "fieldName": "type"
            },
            {
              "name": "paymentMethods",
              "type": {
                "text": "PaymentMethodsContext"
              },
              "default": "null",
              "fieldName": "paymentMethods"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-payment-method",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PaymentMethodComponent",
          "declaration": {
            "name": "PaymentMethodComponent",
            "module": "src/containers/payment-method/payment-method.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-payment-method",
          "declaration": {
            "name": "PaymentMethodComponent",
            "module": "src/containers/payment-method/payment-method.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/payment-method/payment-method.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/payment-method/payment-method.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/payment-method/payment-method.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PaymentMethod",
          "declaration": {
            "name": "PaymentMethodComponent",
            "module": "src/containers/payment-method/payment-method.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-checkout-complete/primer-checkout-complete.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimerCheckoutCompleteComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-checkout-complete",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutCompleteComponent",
          "declaration": {
            "name": "PrimerCheckoutCompleteComponent",
            "module": "src/containers/primer-checkout-complete/primer-checkout-complete.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-checkout-complete",
          "declaration": {
            "name": "PrimerCheckoutCompleteComponent",
            "module": "src/containers/primer-checkout-complete/primer-checkout-complete.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-checkout-complete/primer-checkout-complete.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutComplete",
          "declaration": {
            "name": "PrimerCheckoutCompleteComponent",
            "module": "src/containers/primer-checkout-complete/primer-checkout-complete.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-checkout-error/primer-checkout-error.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimerCheckoutErrorComponent",
          "members": [
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "attribute": "sdkState"
            }
          ],
          "attributes": [
            {
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "fieldName": "sdkState"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-checkout-error",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutErrorComponent",
          "declaration": {
            "name": "PrimerCheckoutErrorComponent",
            "module": "src/containers/primer-checkout-error/primer-checkout-error.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-checkout-error",
          "declaration": {
            "name": "PrimerCheckoutErrorComponent",
            "module": "src/containers/primer-checkout-error/primer-checkout-error.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-checkout-error/primer-checkout-error.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerCheckoutFailure",
          "declaration": {
            "name": "PrimerCheckoutErrorComponent",
            "module": "src/containers/primer-checkout-error/primer-checkout-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-main/primer-main.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimerMainComponent",
          "members": [
            {
              "kind": "field",
              "name": "hasAssignedContent",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "onSlotChange",
              "privacy": "private",
              "description": "Inline slotchange event listener.\nUses assignedNodes with flatten to detect if the slot has any nodes."
            },
            {
              "kind": "field",
              "name": "paymentMethods",
              "type": {
                "text": "PaymentMethodsContext"
              },
              "default": "null",
              "attribute": "paymentMethods"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "attribute": "sdkState"
            }
          ],
          "attributes": [
            {
              "name": "paymentMethods",
              "type": {
                "text": "PaymentMethodsContext"
              },
              "default": "null",
              "fieldName": "paymentMethods"
            },
            {
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "fieldName": "sdkState"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-main",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerMainComponent",
          "declaration": {
            "name": "PrimerMainComponent",
            "module": "src/containers/primer-main/primer-main.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-main",
          "declaration": {
            "name": "PrimerMainComponent",
            "module": "src/containers/primer-main/primer-main.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-main/primer-main.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/primer-main/primer-main.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/primer-main/primer-main.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "PrimerMain",
          "declaration": {
            "name": "PrimerMainComponent",
            "module": "src/containers/primer-main/primer-main.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/redirect-payment/redirect-payment.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RedirectPaymentComponent",
          "members": [
            {
              "kind": "field",
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "attribute": "paymentMethod"
            },
            {
              "kind": "field",
              "name": "paymentManagers",
              "type": {
                "text": "InitializedManagersMap"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_paymentMethodManagerTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodType, paymentManagers]) => { if (!paymentMethodType || !paymentManagers) { return initialState; } return paymentManagers.get( paymentMethodType as RedirectPaymentMethodTypes, )?.manager; }, args: () => [this.paymentMethod?.type, this.paymentManagers], })"
            },
            {
              "kind": "method",
              "name": "_legacyGetButtonLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "text",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Based on packages/primer-sdk-web/src/payment-methods/Button.tsx\nShould be replaced once we align on a better solution across all platforms."
            },
            {
              "kind": "field",
              "name": "_getAssetsTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodType, headlessUtils]) => { if (!paymentMethodType || !headlessUtils) { return initialState; } const paymentConfig = headlessUtils.getPaymentMethodConfiguration(paymentMethodType); if (!paymentConfig) { return initialState; } const backgroundColor = paymentConfig.displayMetadata.button.backgroundColor.colored ?? paymentConfig.displayMetadata.button.backgroundColor.light; const iconPositionRelativeToText = (paymentConfig.displayMetadata.button .iconPositionRelativeToText as IconPosition) || 'START'; return { backgroundColor, name: paymentConfig.name, displayName: this._legacyGetButtonLabel( paymentConfig.displayMetadata.button.text, ), iconUrl: paymentConfig.displayMetadata.button.iconUrl.colored ?? paymentConfig.displayMetadata.button.iconUrl.light, iconPosition: iconPositionRelativeToText, }; }, args: () => [this.paymentMethod?.type, this.headlessUtils], })"
            },
            {
              "kind": "field",
              "name": "_setupTasks",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethodManager, assetsConfig]) => { if (!paymentMethodManager || !assetsConfig) { return initialState; } return { paymentMethodManager, assetsConfig }; }, args: () => [ this._paymentMethodManagerTask.value, this._getAssetsTask.value, ], })"
            },
            {
              "kind": "method",
              "name": "startRedirectPayment"
            }
          ],
          "attributes": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "InitializedPaymentMethod | undefined"
              },
              "fieldName": "paymentMethod"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-redirect-payment",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RedirectPaymentComponent",
          "declaration": {
            "name": "RedirectPaymentComponent",
            "module": "src/containers/redirect-payment/redirect-payment.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-redirect-payment",
          "declaration": {
            "name": "RedirectPaymentComponent",
            "module": "src/containers/redirect-payment/redirect-payment.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/redirect-payment/redirect-payment.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/redirect-payment/redirect-payment.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/redirect-payment/redirect-payment.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "RedirectPayment",
          "declaration": {
            "name": "RedirectPaymentComponent",
            "module": "src/containers/redirect-payment/redirect-payment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/show-other-payments/show-other-payments.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for showing/hiding other payment methods when vault is present\nUtilizes the collapsable component for smooth transitions",
          "name": "ShowOtherPaymentsComponent",
          "members": [
            {
              "kind": "field",
              "name": "vaultManager",
              "type": {
                "text": "VaultManagerContext"
              },
              "default": "null",
              "description": "Consume the vault manager context to interact with vault state"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-show-other-payments",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ShowOtherPaymentsComponent",
          "declaration": {
            "name": "ShowOtherPaymentsComponent",
            "module": "src/containers/show-other-payments/show-other-payments.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-show-other-payments",
          "declaration": {
            "name": "ShowOtherPaymentsComponent",
            "module": "src/containers/show-other-payments/show-other-payments.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/show-other-payments/show-other-payments.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/show-other-payments/show-other-payments.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/show-other-payments/show-other-payments.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "ShowOtherPayments",
          "declaration": {
            "name": "ShowOtherPaymentsComponent",
            "module": "src/containers/show-other-payments/show-other-payments.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/vault-manager.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "VaultManagerComponent - displays and manages saved payment methods",
          "name": "VaultManagerComponent",
          "members": [
            {
              "kind": "field",
              "name": "addEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              }
            },
            {
              "kind": "field",
              "name": "removeEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              }
            },
            {
              "kind": "field",
              "name": "vaultManagerContext",
              "type": {
                "text": "VaultManagerContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "isEditMode",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Whether we're in edit mode"
            },
            {
              "kind": "field",
              "name": "deletePaymentMethodId",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null",
              "description": "Payment method being deleted"
            },
            {
              "kind": "field",
              "name": "isDeleting",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Whether a delete operation is in progress"
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''",
              "description": "Error message if something goes wrong"
            },
            {
              "kind": "field",
              "name": "animationDuration",
              "type": {
                "text": "number"
              },
              "default": "300",
              "description": "Animation duration override",
              "attribute": "animationDuration"
            },
            {
              "kind": "method",
              "name": "getAnimationConfig",
              "privacy": "private",
              "description": "Get base animation configuration with current settings"
            },
            {
              "kind": "method",
              "name": "handleToggleEditMode",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "VaultManagerEventMap['toggle-edit-mode']"
                  }
                }
              ],
              "description": "Toggle edit mode handler"
            },
            {
              "kind": "method",
              "name": "handleDeletePaymentMethod",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "VaultManagerEventMap['delete-payment-method']"
                  }
                }
              ],
              "description": "Handle delete click from payment method item"
            },
            {
              "kind": "method",
              "name": "handleCancelDelete",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Cancel delete operation"
            },
            {
              "kind": "method",
              "name": "handleConfirmDelete",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Confirm and process payment method deletion"
            },
            {
              "kind": "method",
              "name": "handlePaymentError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handle payment error events"
            },
            {
              "kind": "method",
              "name": "handleCloseError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handle closing error message"
            },
            {
              "kind": "method",
              "name": "getPaymentMethodName",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "paymentMethodId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get payment method display name for the given ID"
            },
            {
              "kind": "method",
              "name": "renderLoadingOverlay",
              "privacy": "private",
              "description": "Render loading overlay with spinner when isUpdating is true"
            },
            {
              "kind": "method",
              "name": "renderDeleteConfirmation",
              "privacy": "private",
              "description": "Render delete confirmation content"
            },
            {
              "kind": "method",
              "name": "renderPaymentMethodItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "paymentMethod",
                  "type": {
                    "text": "VaultedPaymentMethod"
                  }
                }
              ],
              "description": "Render a payment method item with appropriate animations"
            },
            {
              "kind": "method",
              "name": "renderPaymentMethodList",
              "privacy": "private",
              "description": "Render the payment method list with submit button"
            }
          ],
          "attributes": [
            {
              "name": "animationDuration",
              "type": {
                "text": "number"
              },
              "default": "300",
              "description": "Animation duration override",
              "fieldName": "animationDuration"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-manager",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultManagerComponent",
          "declaration": {
            "name": "VaultManagerComponent",
            "module": "src/containers/vault-manager/vault-manager.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-manager",
          "declaration": {
            "name": "VaultManagerComponent",
            "module": "src/containers/vault-manager/vault-manager.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/vault-manager.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/vault-manager.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/vault-manager.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultPaymentMethodItem",
          "declaration": {
            "name": "VaultPaymentMethodItem",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerHeader",
          "declaration": {
            "name": "VaultManagerHeader",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultDeleteConfirmation",
          "declaration": {
            "name": "VaultDeleteConfirmation",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultEmptyState",
          "declaration": {
            "name": "VaultEmptyState",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultErrorMessage",
          "declaration": {
            "name": "VaultErrorMessage",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultPaymentSubmit",
          "declaration": {
            "name": "VaultPaymentSubmit",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultCvvInput",
          "declaration": {
            "name": "VaultCvvInput",
            "module": "./components"
          }
        },
        {
          "kind": "js",
          "name": "VaultManager",
          "declaration": {
            "name": "VaultManagerComponent",
            "module": "src/containers/vault-manager/vault-manager.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/reactive-state/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "createDispatcher",
          "return": {
            "type": {
              "text": "TypedDispatcher<State, Action, Callbacks>"
            }
          },
          "parameters": [
            {
              "name": "initialState",
              "type": {
                "text": "State"
              }
            },
            {
              "name": "reducer",
              "type": {
                "text": "TypedReducer<State, Action, Callbacks>"
              }
            },
            {
              "name": "initialCallbacks",
              "type": {
                "text": "Callbacks"
              }
            },
            {
              "name": "stateHandler",
              "type": {
                "text": "(state: State) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createReducer",
          "return": {
            "type": {
              "text": "TypedReducer<State, Action, Callbacks>"
            }
          },
          "parameters": [
            {
              "name": "handlers",
              "type": {
                "text": "ActionHandlerMap<State, Action, Callbacks>"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "ReactiveStateController",
          "members": [
            {
              "kind": "field",
              "name": "_dispatcher",
              "type": {
                "text": "TypedDispatcher<State, Action, Callbacks>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "currentState",
              "type": {
                "text": "Readonly<State>"
              },
              "privacy": "public",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "dispatch",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "action",
                  "type": {
                    "text": "Action"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setCallbacks",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "callbacks",
                  "type": {
                    "text": "Partial<Callbacks>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "CompositeStateController",
          "members": [
            {
              "kind": "field",
              "name": "_controllers",
              "type": {
                "text": "ReactiveController[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "addController",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "controller",
                  "type": {
                    "text": "ReactiveStateController<Host, State, Action, Callbacks>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createDispatcher",
          "declaration": {
            "name": "createDispatcher",
            "module": "src/controllers/reactive-state/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "createReducer",
          "declaration": {
            "name": "createReducer",
            "module": "src/controllers/reactive-state/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "ReactiveStateController",
          "declaration": {
            "name": "ReactiveStateController",
            "module": "src/controllers/reactive-state/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "CompositeStateController",
          "declaration": {
            "name": "CompositeStateController",
            "module": "src/controllers/reactive-state/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/vault-manager-controller/controller.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "initialVaultManagerState",
          "type": {
            "text": "VaultManagerState"
          },
          "default": "{ enabled: false, isLoading: false, isUpdating: false, cvvRecapture: false, vaultedPaymentMethods: [], createCvvInput: null, deleteVaultedPaymentMethod: () => Promise.resolve(), startVaultedPaymentFlow: () => Promise.resolve(), }",
          "description": "Initial state for the VaultManager (core functionality)"
        },
        {
          "kind": "variable",
          "name": "initialVaultManagerCvvState",
          "type": {
            "text": "VaultManagerItemState"
          },
          "default": "{ cvvInput: null, formIsDirty: false, setCvvInput: () => {}, selectedVaultedPaymentMethod: null, setSelectedVaultedPaymentMethod: () => {}, }",
          "description": "Initial state for the VaultManager CVV functionality"
        },
        {
          "kind": "class",
          "description": "Controller for managing vault functionality and payment method display\nUses the CompositeStateController to manage core and CVV state independently",
          "name": "VaultManagerController",
          "members": [
            {
              "kind": "field",
              "name": "coreController",
              "type": {
                "text": "VaultCoreController"
              },
              "privacy": "private",
              "default": "new VaultCoreController(host, { deleteVaultedPaymentMethod: this.deleteVaultedPaymentMethod.bind(this), startVaultedPaymentFlow: this.startVaultedPaymentFlow.bind(this), createCvvInput: this.createCvvInput.bind(this), })"
            },
            {
              "kind": "field",
              "name": "itemController",
              "type": {
                "text": "VaultItemController"
              },
              "privacy": "private",
              "default": "new VaultItemController(host, { setCvvInput: this.setCvvInput.bind(this), setSelectedVaultedPaymentMethod: this.setSelectedVaultedPaymentMethod.bind(this), })"
            },
            {
              "kind": "field",
              "name": "_vaultManager",
              "type": {
                "text": "HeadlessVaultManager | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_options",
              "type": {
                "text": "VaultManagerInitOptions | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "initializeVaultManager",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "vaultManager",
                  "type": {
                    "text": "HeadlessVaultManager"
                  },
                  "description": "The HeadlessVaultManager instance"
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "VaultManagerInitOptions"
                  },
                  "description": "Additional initialization options"
                }
              ],
              "description": "Initialize the vault manager with additional options"
            },
            {
              "kind": "field",
              "name": "vaultManager",
              "type": {
                "text": "HeadlessVaultManager | null"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "VaultManagerInitOptions | null"
              }
            },
            {
              "kind": "field",
              "name": "vaultManagerState",
              "type": {
                "text": "Readonly<VaultManagerState>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "vaultItemState",
              "type": {
                "text": "Readonly<VaultManagerItemState>"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Lifecycle method called when the host disconnects",
              "inheritedFrom": {
                "name": "CompositeStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetchVaultedPaymentMethods",
              "return": {
                "type": {
                  "text": "Promise<VaultedPaymentMethod[]>"
                }
              },
              "parameters": [
                {
                  "name": "initialLoad",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Fetch vaulted payment methods from the server"
            },
            {
              "kind": "method",
              "name": "createCvvInput",
              "return": {
                "type": {
                  "text": "Promise<CvvInput | null>"
                }
              },
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "text": "CardSecurityCodeInputOptions"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "deleteVaultedPaymentMethod",
              "description": "Delete a vaulted payment method by ID"
            },
            {
              "kind": "field",
              "name": "setCvvInput",
              "description": "Set the CVV metadata - updates CVV state only\nMoved to the separate CVV context"
            },
            {
              "kind": "field",
              "name": "startVaultedPaymentFlow",
              "description": "Start the vaulted payment flow\nVerifies form state validity before processing"
            },
            {
              "kind": "field",
              "name": "setSelectedVaultedPaymentMethod",
              "description": "Set the selected vaulted payment method - updates form state only"
            },
            {
              "kind": "field",
              "name": "_controllers",
              "type": {
                "text": "ReactiveController[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "CompositeStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "addController",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "controller",
                  "type": {
                    "text": "ReactiveStateController<Host, State, Action, Callbacks>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "CompositeStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "CompositeStateController",
                "module": "src/controllers/reactive-state/index.ts"
              }
            }
          ],
          "superclass": {
            "name": "CompositeStateController",
            "module": "/src/controllers/reactive-state"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "initialVaultManagerState",
          "declaration": {
            "name": "initialVaultManagerState",
            "module": "src/controllers/vault-manager-controller/controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "initialVaultManagerCvvState",
          "declaration": {
            "name": "initialVaultManagerCvvState",
            "module": "src/controllers/vault-manager-controller/controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerController",
          "declaration": {
            "name": "VaultManagerController",
            "module": "src/controllers/vault-manager-controller/controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/vault-manager-controller/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultManagerController",
          "declaration": {
            "name": "VaultManagerController",
            "module": "./controller"
          }
        },
        {
          "kind": "js",
          "name": "initialVaultManagerState",
          "declaration": {
            "name": "initialVaultManagerState",
            "module": "./state"
          }
        },
        {
          "kind": "js",
          "name": "initialVaultManagerCvvState",
          "declaration": {
            "name": "initialVaultManagerCvvState",
            "module": "./state"
          }
        },
        {
          "kind": "js",
          "name": "vaultManagerReducer",
          "declaration": {
            "name": "vaultManagerReducer",
            "module": "./state"
          }
        },
        {
          "kind": "js",
          "name": "vaultManagerCvvReducer",
          "declaration": {
            "name": "vaultManagerCvvReducer",
            "module": "./state"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerState",
          "declaration": {
            "name": "VaultManagerState",
            "module": "./types"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerItemState",
          "declaration": {
            "name": "VaultManagerItemState",
            "module": "./types"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerAction",
          "declaration": {
            "name": "VaultManagerAction",
            "module": "./types"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerCvvAction",
          "declaration": {
            "name": "VaultManagerCvvAction",
            "module": "./types"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerInitOptions",
          "declaration": {
            "name": "VaultManagerInitOptions",
            "module": "./types"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/vault-manager-controller/state.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "initialVaultManagerState",
          "type": {
            "text": "VaultManagerState"
          },
          "default": "{ enabled: false, isLoading: false, isUpdating: false, cvvRecapture: false, vaultedPaymentMethods: [], createCvvInput: null, deleteVaultedPaymentMethod: () => Promise.resolve(), startVaultedPaymentFlow: () => Promise.resolve(), }",
          "description": "Initial state for the VaultManager (core functionality)"
        },
        {
          "kind": "variable",
          "name": "initialVaultManagerCvvState",
          "type": {
            "text": "VaultManagerItemState"
          },
          "default": "{ cvvInput: null, formIsDirty: false, setCvvInput: () => {}, selectedVaultedPaymentMethod: null, setSelectedVaultedPaymentMethod: () => {}, }",
          "description": "Initial state for the VaultManager CVV functionality"
        },
        {
          "kind": "function",
          "name": "vaultManagerReducer",
          "return": {
            "type": {
              "text": "VaultManagerState"
            }
          },
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "VaultManagerState"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "VaultManagerAction"
              }
            },
            {
              "name": "callbacks",
              "type": {
                "text": "{\n    deleteVaultedPaymentMethod: VaultManagerState['deleteVaultedPaymentMethod'];\n    startVaultedPaymentFlow: VaultManagerState['startVaultedPaymentFlow'];\n    createCvvInput: VaultManagerState['createCvvInput'];\n  }"
              }
            }
          ],
          "description": "Reducer function for core vault manager state\nTakes current state and an action, returns the new state\nFollows the Redux pattern for predictable state updates"
        },
        {
          "kind": "function",
          "name": "vaultManagerCvvReducer",
          "return": {
            "type": {
              "text": "VaultManagerItemState"
            }
          },
          "parameters": [
            {
              "name": "state",
              "type": {
                "text": "VaultManagerItemState"
              }
            },
            {
              "name": "action",
              "type": {
                "text": "VaultManagerCvvAction"
              }
            },
            {
              "name": "callbacks",
              "type": {
                "text": "{\n    setCvvInput: VaultManagerItemState['setCvvInput'];\n    setSelectedVaultedPaymentMethod: VaultManagerItemState['setSelectedVaultedPaymentMethod'];\n  }"
              }
            }
          ],
          "description": "Reducer function for CVV-specific functionality\nFurther separating CVV state to minimize re-renders related to frequent CVV input changes"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "initialVaultManagerState",
          "declaration": {
            "name": "initialVaultManagerState",
            "module": "src/controllers/vault-manager-controller/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "initialVaultManagerCvvState",
          "declaration": {
            "name": "initialVaultManagerCvvState",
            "module": "src/controllers/vault-manager-controller/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "vaultManagerReducer",
          "declaration": {
            "name": "vaultManagerReducer",
            "module": "src/controllers/vault-manager-controller/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "vaultManagerCvvReducer",
          "declaration": {
            "name": "vaultManagerCvvReducer",
            "module": "src/controllers/vault-manager-controller/state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/controllers/vault-manager-controller/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/abstract-card-input-component.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/abstract-card-input-component.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/abstract-card-input-component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Abstract base class for card input components.\nHandles common functionality like translations, property tracking, and hosted input setup.",
          "name": "AbstractCardInputComponent",
          "members": [
            {
              "kind": "field",
              "name": "cardFormContext",
              "type": {
                "text": "CardFormContext | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles"
            },
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "protected",
              "readonly": true,
              "default": "new Set<string>()",
              "description": "Tracks which properties were explicitly set by the user"
            },
            {
              "kind": "field",
              "name": "_internalLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "description": "Internal storage for property values"
            },
            {
              "kind": "field",
              "name": "_internalPlaceholder",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_internalAriaLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "InputComponentConfig"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Configuration for this input component"
            },
            {
              "kind": "field",
              "name": "hostedInputController",
              "type": {
                "text": "HostedInputController<HostedInputHost>"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Hosted input controller",
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "getTranslatedValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "TranslationConfig | string | undefined"
                  }
                }
              ],
              "description": "Gets a translated or static string value from the translation config"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "attribute": "aria-label"
            },
            {
              "kind": "method",
              "name": "childUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Initialize the controller after the component has been constructed\nand the config is available"
            },
            {
              "kind": "method",
              "name": "handleWrapperClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handler for wrapper-click event from InputWrapper component\nThis is still needed for hosted iframe inputs"
            },
            {
              "kind": "method",
              "name": "getError",
              "description": "Get the error code from the hosted input controller when the input is submitted or touched\n\nCan be used instead of the error returned by the `validate()` method since internally `primer-sdk-web`\nuses the same logic to compute the error code",
              "return": {
                "type": {
                  "text": "string|null"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "protected",
              "description": "Common rendering logic for all card input components"
            }
          ],
          "attributes": [
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "fieldName": "label"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "fieldName": "placeholder"
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "fieldName": "ariaLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AbstractCardInputComponent",
          "declaration": {
            "name": "AbstractCardInputComponent",
            "module": "src/containers/card-form/components/abstract-card-input-component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/hosted-input-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The HostedInputController abstracts away the logic for rendering a hosted input.\nIt uses a Task to wait for the host to update and then either renders the hosted input\n(if provided via context) or creates a standard input element manually.",
          "name": "HostedInputController",
          "members": [
            {
              "kind": "field",
              "name": "_isFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_meta",
              "type": {
                "text": "InputMetadata"
              },
              "privacy": "private",
              "default": "{ active: false, dirty: false, error: null, errorCode: null, submitted: false, touched: false, valid: false, }"
            },
            {
              "kind": "field",
              "name": "_hostedInput",
              "type": {
                "text": "IHeadlessHostedInput | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_standardInput",
              "type": {
                "text": "HTMLInputElement | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "T"
              },
              "privacy": "private",
              "readonly": true,
              "default": "host"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "HostedInputConfig"
              },
              "privacy": "private",
              "readonly": true,
              "default": "config"
            },
            {
              "kind": "field",
              "name": "setupTask",
              "type": {
                "text": "Task<[InputSource], boolean | typeof initialState>"
              },
              "privacy": "public",
              "readonly": true,
              "description": "Task to set up the hosted input.",
              "default": "new Task(this.host, { args: () => [this.getHostedInput()] as const, task: this.setupHostedInput.bind(this), })"
            },
            {
              "kind": "method",
              "name": "focusInput",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Focuses the input, whether it's a hosted input or standard input"
            },
            {
              "kind": "method",
              "name": "getHostedInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "InputSource"
                }
              },
              "description": "Returns the hosted input from the card form context based on the type.\nFor 'cardholderName', no hosted input is provided so we return a fallback indicator."
            },
            {
              "kind": "method",
              "name": "setupHostedInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<boolean | typeof initialState>"
                }
              },
              "parameters": [
                {
                  "name": "[hostedInput]",
                  "type": {
                    "text": "readonly [\n    InputSource,\n  ]"
                  }
                }
              ],
              "description": "Sets up the hosted input.\nIf a hosted input is provided, it renders it into the target container.\nOtherwise (e.g. for cardholderName), it creates a standard input element."
            },
            {
              "kind": "method",
              "name": "getTargetContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "description": "Gets the target container element from the host's render root"
            },
            {
              "kind": "method",
              "name": "setupStandardInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "targetContainer",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "description": "Sets up a standard input element for non-hosted input types"
            },
            {
              "kind": "method",
              "name": "setupInputEventListeners",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                }
              ],
              "description": "Sets up event listeners for standard input elements"
            },
            {
              "kind": "method",
              "name": "setupHostedIframeInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              },
              "parameters": [
                {
                  "name": "hostedInput",
                  "type": {
                    "text": "IHeadlessHostedInput"
                  }
                },
                {
                  "name": "targetContainer",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "description": "Sets up a hosted iframe input for iframe-based input types"
            },
            {
              "kind": "field",
              "name": "isFocused",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Exposes the current focus state.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "meta",
              "type": {
                "text": "InputMetadata"
              },
              "privacy": "public",
              "description": "Exposes the current metadata state.",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "hostDisconnected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HostedInputController",
          "declaration": {
            "name": "HostedInputController",
            "module": "src/containers/card-form/components/hosted-input-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormCardNumber",
          "declaration": {
            "name": "CardFormCardNumber",
            "module": "./input-card-number/input-card-number"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCVV",
          "declaration": {
            "name": "CardFormCVV",
            "package": "@components/containers/card-form/components/input-cvv/input-cvv"
          }
        },
        {
          "kind": "js",
          "name": "CardFormExpiry",
          "declaration": {
            "name": "CardFormExpiry",
            "package": "@components/containers/card-form/components/input-card-expiry/input-card-expiry"
          }
        },
        {
          "kind": "js",
          "name": "CardFormName",
          "declaration": {
            "name": "CardFormName",
            "package": "@components/containers/card-form/components/input-card-holder-name/input-card-holder-name"
          }
        },
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "CardFormSubmit",
            "package": "@components/containers/card-form/components/card-form-submit/card-form-submit"
          }
        },
        {
          "kind": "js",
          "name": "CardFormCardNetworkSelector",
          "declaration": {
            "name": "CardFormCardNetworkSelector",
            "package": "@components/containers/card-form/components/card-network-selector/card-network-selector"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultPaymentMethodItem",
          "declaration": {
            "name": "VaultPaymentMethodItem",
            "package": "@components/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item"
          }
        },
        {
          "kind": "js",
          "name": "VaultManagerHeader",
          "declaration": {
            "name": "VaultManagerHeader",
            "package": "@components/containers/vault-manager/components/vault-manager-header/vault-manager-header"
          }
        },
        {
          "kind": "js",
          "name": "VaultDeleteConfirmation",
          "declaration": {
            "name": "VaultDeleteConfirmation",
            "package": "@components/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation"
          }
        },
        {
          "kind": "js",
          "name": "VaultEmptyState",
          "declaration": {
            "name": "VaultEmptyState",
            "package": "@components/containers/vault-manager/components/vault-empty-state/vault-empty-state"
          }
        },
        {
          "kind": "js",
          "name": "VaultErrorMessage",
          "declaration": {
            "name": "VaultErrorMessage",
            "package": "@components/containers/vault-manager/components/vault-error-message/vault-error-message"
          }
        },
        {
          "kind": "js",
          "name": "VaultPaymentSubmit",
          "declaration": {
            "name": "VaultPaymentSubmit",
            "package": "@components/containers/vault-manager/components/vault-payment-submit/vault-payment-submit"
          }
        },
        {
          "kind": "js",
          "name": "VaultCvvInput",
          "declaration": {
            "name": "VaultCvvInput",
            "package": "@components/containers/vault-manager/components/vault-cvv-input/vault-cvv-input"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/utils/formatters.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toTitleCase",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "text",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Format text to title case (first letter uppercase, rest lowercase)"
        },
        {
          "kind": "function",
          "name": "formatCardNetworkName",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "network",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Format card network name for display (converts all-caps to title case)"
        },
        {
          "kind": "function",
          "name": "formatFullName",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "firstName",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "lastName",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Format name from first and last name components"
        },
        {
          "kind": "function",
          "name": "formatCardExpiration",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "month",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "year",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Format card expiration date in MM/YY format"
        },
        {
          "kind": "function",
          "name": "formatMaskedNumber",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "identifier",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Format last 4 digits with bullet mask"
        },
        {
          "kind": "function",
          "name": "getCardPaymentMethodDisplay",
          "return": {
            "type": {
              "text": "PaymentMethodDisplay"
            }
          },
          "parameters": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "PaymentCardVaultedMethod"
              }
            }
          ],
          "description": "Format payment card for display"
        },
        {
          "kind": "function",
          "name": "getPayPalMethodDisplay",
          "return": {
            "type": {
              "text": "PaymentMethodDisplay"
            }
          },
          "parameters": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "PayPalVaultedMethod"
              }
            }
          ],
          "description": "Format PayPal payment method for display"
        },
        {
          "kind": "function",
          "name": "getKlarnaMethodDisplay",
          "return": {
            "type": {
              "text": "PaymentMethodDisplay"
            }
          },
          "parameters": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "KlarnaVaultedMethod"
              }
            }
          ],
          "description": "Format Klarna payment method for display"
        },
        {
          "kind": "function",
          "name": "getACHMethodDisplay",
          "return": {
            "type": {
              "text": "PaymentMethodDisplay"
            }
          },
          "parameters": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "ACHVaultedMethod"
              }
            }
          ],
          "description": "Format ACH (bank account) payment method for display"
        },
        {
          "kind": "function",
          "name": "getGenericMethodDisplay",
          "return": {
            "type": {
              "text": "PaymentMethodDisplay"
            }
          },
          "parameters": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "VaultedPaymentMethod"
              }
            }
          ],
          "description": "Generic fallback for unknown payment method types"
        },
        {
          "kind": "function",
          "name": "getPaymentMethodDisplay",
          "return": {
            "type": {
              "text": "PaymentMethodDisplay"
            }
          },
          "parameters": [
            {
              "name": "paymentMethod",
              "type": {
                "text": "VaultedPaymentMethod"
              }
            }
          ],
          "description": "Get a formatted display for any payment method type\nThis is the main entry point for formatting payment methods"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toTitleCase",
          "declaration": {
            "name": "toTitleCase",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "formatCardNetworkName",
          "declaration": {
            "name": "formatCardNetworkName",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "formatFullName",
          "declaration": {
            "name": "formatFullName",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "formatCardExpiration",
          "declaration": {
            "name": "formatCardExpiration",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "formatMaskedNumber",
          "declaration": {
            "name": "formatMaskedNumber",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "getCardPaymentMethodDisplay",
          "declaration": {
            "name": "getCardPaymentMethodDisplay",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "getPayPalMethodDisplay",
          "declaration": {
            "name": "getPayPalMethodDisplay",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "getKlarnaMethodDisplay",
          "declaration": {
            "name": "getKlarnaMethodDisplay",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "getACHMethodDisplay",
          "declaration": {
            "name": "getACHMethodDisplay",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "getGenericMethodDisplay",
          "declaration": {
            "name": "getGenericMethodDisplay",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        },
        {
          "kind": "js",
          "name": "getPaymentMethodDisplay",
          "declaration": {
            "name": "getPaymentMethodDisplay",
            "module": "src/containers/vault-manager/utils/formatters.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/utils/type-guards.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isPaymentCardMethod",
          "return": {
            "type": {
              "text": "method is PaymentCardVaultedMethod"
            }
          },
          "parameters": [
            {
              "name": "method",
              "type": {
                "text": "VaultedPaymentMethod"
              }
            }
          ],
          "description": "Type guard for payment card methods"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isPaymentCardMethod",
          "declaration": {
            "name": "isPaymentCardMethod",
            "module": "src/containers/vault-manager/utils/type-guards.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/card-form-submit/card-form-submit.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A form submit button component for card forms.\nProvides a consistent submit button with translation support.",
          "name": "CardFormSubmitComponent",
          "members": [
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<string>()"
            },
            {
              "kind": "field",
              "name": "_internalButtonText",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "buttonText",
              "type": {
                "text": "string"
              },
              "description": "The button text to display.\nFalls back to localized default if not explicitly set.",
              "attribute": "buttonText"
            },
            {
              "kind": "field",
              "name": "headlessInstance",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "attribute": "headlessInstance"
            },
            {
              "kind": "field",
              "name": "clientOptions",
              "type": {
                "text": "ClientOptionsContext"
              },
              "default": "null",
              "attribute": "clientOptions"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "attribute": "sdkState"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "The button variant to use.",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the button is disabled.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "handleClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "buttonText",
              "type": {
                "text": "string"
              },
              "description": "The button text to display.\nFalls back to localized default if not explicitly set.",
              "fieldName": "buttonText"
            },
            {
              "name": "headlessInstance",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "fieldName": "headlessInstance"
            },
            {
              "name": "clientOptions",
              "type": {
                "text": "ClientOptionsContext"
              },
              "default": "null",
              "fieldName": "clientOptions"
            },
            {
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "fieldName": "sdkState"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "The button variant to use.",
              "fieldName": "variant"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the button is disabled.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-card-form-submit",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormSubmitComponent",
          "declaration": {
            "name": "CardFormSubmitComponent",
            "module": "src/containers/card-form/components/card-form-submit/card-form-submit.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-card-form-submit",
          "declaration": {
            "name": "CardFormSubmitComponent",
            "module": "src/containers/card-form/components/card-form-submit/card-form-submit.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/card-form-submit/card-form-submit.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/card-form-submit/card-form-submit.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/card-form-submit/card-form-submit.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormSubmit",
          "declaration": {
            "name": "CardFormSubmitComponent",
            "module": "src/containers/card-form/components/card-form-submit/card-form-submit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/card-network-selector/card-network-selector.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Component for displaying and selecting card networks\nUses context directly rather than properties",
          "name": "CardNetworkSelectorComponent",
          "members": [
            {
              "kind": "field",
              "name": "cardNetworks",
              "type": {
                "text": "CardNetworksContext"
              },
              "default": "null",
              "description": "Card networks context from provider"
            },
            {
              "kind": "field",
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "selectedCardNetwork",
              "type": {
                "text": "CardNetwork | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "isDropdownOpen",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Internal state to track if dropdown is open"
            },
            {
              "kind": "field",
              "name": "focusedNetworkIndex",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0",
              "description": "Index of the currently focused network in the dropdown"
            },
            {
              "kind": "field",
              "name": "isKeyboardNavigation",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "description": "Tracks if keyboard navigation is being used"
            },
            {
              "kind": "field",
              "name": "buttonRef",
              "privacy": "private",
              "description": "Reference to the dropdown button"
            },
            {
              "kind": "field",
              "name": "dropdownRef",
              "privacy": "private",
              "description": "Reference to the dropdown container"
            },
            {
              "kind": "field",
              "name": "networkOptionRefs",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "description": "Reference to network option elements"
            },
            {
              "kind": "method",
              "name": "toggleDropdown",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "description": "Toggle the dropdown state"
            },
            {
              "kind": "method",
              "name": "getNetworkIconUrl",
              "privacy": "private",
              "parameters": [
                {
                  "name": "network",
                  "type": {
                    "text": "CardNetwork"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSelectableNetworks",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CardNetwork[]"
                }
              },
              "description": "Get selectable networks from context"
            },
            {
              "kind": "method",
              "name": "getDetectedNetwork",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "CardNetwork | null"
                }
              },
              "description": "Get detected network from context"
            },
            {
              "kind": "method",
              "name": "getSelectedNetworkIndex",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "description": "Get the index of the currently selected network"
            },
            {
              "kind": "method",
              "name": "selectNetwork",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                },
                {
                  "name": "network",
                  "type": {
                    "text": "CardNetwork"
                  }
                }
              ],
              "description": "Handle network selection"
            },
            {
              "kind": "field",
              "name": "handleClickOutside",
              "privacy": "private",
              "description": "Handle click outside to close dropdown"
            },
            {
              "kind": "field",
              "name": "handleMouseMove",
              "privacy": "private",
              "description": "Handle mouse movement to disable keyboard navigation mode"
            },
            {
              "kind": "field",
              "name": "handleKeyDown",
              "privacy": "private",
              "description": "Handle keydown events for keyboard navigation"
            },
            {
              "kind": "method",
              "name": "focusNetworkOption",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Focus the current network option"
            },
            {
              "kind": "method",
              "name": "setNetworkOptionRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "Element | undefined"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Save reference to network option element"
            },
            {
              "kind": "field",
              "name": "handleDocumentKeyDown",
              "privacy": "private",
              "description": "Handle document-level keydown events, but only when dropdown is open\nThis allows keyboard navigation to continue working"
            }
          ],
          "events": [
            {
              "name": "network-selected",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Dispatched when a network is selected with the network name as detail"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-card-network-selector",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CardNetworkSelectorComponent",
          "declaration": {
            "name": "CardNetworkSelectorComponent",
            "module": "src/containers/card-form/components/card-network-selector/card-network-selector.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-card-network-selector",
          "declaration": {
            "name": "CardNetworkSelectorComponent",
            "module": "src/containers/card-form/components/card-network-selector/card-network-selector.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/card-network-selector/card-network-selector.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/card-network-selector/card-network-selector.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/card-network-selector/card-network-selector.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormCardNetworkSelector",
          "declaration": {
            "name": "CardNetworkSelectorComponent",
            "module": "src/containers/card-form/components/card-network-selector/card-network-selector.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-expiry/input-card-expiry.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InputCardExpiryComponent",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "InputComponentConfig"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Configuration for this input component",
              "default": "{ inputType: 'expire', containerSelector: '#expiry', errorName: 'expiryDate-card', translations: { label: { id: 'cardExpiry', defaultMessage: 'Expiry Date' }, placeholder: { id: 'cardExpiryPlaceholder', defaultMessage: 'MM/YY' }, ariaLabel: { id: 'cardExpiry', defaultMessage: 'Expiry Date' }, }, }",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cardFormContext",
              "type": {
                "text": "CardFormContext | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "protected",
              "readonly": true,
              "default": "new Set<string>()",
              "description": "Tracks which properties were explicitly set by the user",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "description": "Internal storage for property values",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalPlaceholder",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalAriaLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "hostedInputController",
              "type": {
                "text": "HostedInputController<HostedInputHost>"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Hosted input controller",
              "default": "{}",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTranslatedValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "TranslationConfig | string | undefined"
                  }
                }
              ],
              "description": "Gets a translated or static string value from the translation config",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "attribute": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "attribute": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "attribute": "aria-label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "childUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Initialize the controller after the component has been constructed\nand the config is available",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleWrapperClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handler for wrapper-click event from InputWrapper component\nThis is still needed for hosted iframe inputs",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getError",
              "description": "Get the error code from the hosted input controller when the input is submitted or touched\n\nCan be used instead of the error returned by the `validate()` method since internally `primer-sdk-web`\nuses the same logic to compute the error code",
              "return": {
                "type": {
                  "text": "string|null"
                }
              },
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "protected",
              "description": "Common rendering logic for all card input components",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ],
          "superclass": {
            "name": "AbstractCardInputComponent",
            "package": "@components/containers/card-form/components/abstract-card-input-component"
          },
          "tagName": "primer-input-card-expiry",
          "customElement": true,
          "attributes": [
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "fieldName": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "fieldName": "ariaLabel",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCardExpiryComponent",
          "declaration": {
            "name": "InputCardExpiryComponent",
            "module": "src/containers/card-form/components/input-card-expiry/input-card-expiry.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-card-expiry",
          "declaration": {
            "name": "InputCardExpiryComponent",
            "module": "src/containers/card-form/components/input-card-expiry/input-card-expiry.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-expiry/input-card-expiry.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/input-card-expiry/input-card-expiry.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-expiry/input-card-expiry.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormExpiry",
          "declaration": {
            "name": "InputCardExpiryComponent",
            "module": "src/containers/card-form/components/input-card-expiry/input-card-expiry.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InputCardHolderNameComponent",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "InputComponentConfig"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Configuration for this input component",
              "default": "{ inputType: 'cardholderName', containerSelector: '#cardFormName', errorName: 'cardholderName', translations: { label: { id: 'cardholderNameLabel', defaultMessage: 'Cardholder Name' }, placeholder: { id: 'cardholderNamePlaceholder', defaultMessage: 'Name on card', }, ariaLabel: { id: 'cardholderNameLabel', defaultMessage: 'Cardholder Name', }, }, onInput: (value: string) => this.handleInput(value), }",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cardFormContext",
              "type": {
                "text": "CardFormContext | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "protected",
              "readonly": true,
              "default": "new Set<string>()",
              "description": "Tracks which properties were explicitly set by the user",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "description": "Internal storage for property values",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalPlaceholder",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalAriaLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "hostedInputController",
              "type": {
                "text": "HostedInputController<HostedInputHost>"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Hosted input controller",
              "default": "{}",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTranslatedValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "TranslationConfig | string | undefined"
                  }
                }
              ],
              "description": "Gets a translated or static string value from the translation config",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "attribute": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "attribute": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "attribute": "aria-label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "childUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Initialize the controller after the component has been constructed\nand the config is available",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleWrapperClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handler for wrapper-click event from InputWrapper component\nThis is still needed for hosted iframe inputs",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getError",
              "description": "Get the error code from the hosted input controller when the input is submitted or touched\n\nCan be used instead of the error returned by the `validate()` method since internally `primer-sdk-web`\nuses the same logic to compute the error code",
              "return": {
                "type": {
                  "text": "string|null"
                }
              },
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "protected",
              "description": "Common rendering logic for all card input components",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ],
          "superclass": {
            "name": "AbstractCardInputComponent",
            "package": "@components/containers/card-form/components/abstract-card-input-component"
          },
          "tagName": "primer-input-card-holder-name",
          "customElement": true,
          "attributes": [
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "fieldName": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "fieldName": "ariaLabel",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCardHolderNameComponent",
          "declaration": {
            "name": "InputCardHolderNameComponent",
            "module": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-card-holder-name",
          "declaration": {
            "name": "InputCardHolderNameComponent",
            "module": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormName",
          "declaration": {
            "name": "InputCardHolderNameComponent",
            "module": "src/containers/card-form/components/input-card-holder-name/input-card-holder-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-number/input-card-number.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Card number input component with dynamic card network detection and selection",
          "name": "InputCardNumberComponent",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "InputComponentConfig"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Configuration for this input component",
              "default": "{ inputType: 'cardNumber', containerSelector: '#cardNumber', errorName: 'cardNumber-card', translations: { label: { id: 'cardNumber', defaultMessage: 'Card Number' }, placeholder: '4111 1111 1111 1111', ariaLabel: { id: 'cardNumber', defaultMessage: 'Card Number' }, }, }",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleNetworkSelected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handle network selection from the network selector component"
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "protected",
              "description": "Override the renderInput method to include the network selector",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cardFormContext",
              "type": {
                "text": "CardFormContext | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "protected",
              "readonly": true,
              "default": "new Set<string>()",
              "description": "Tracks which properties were explicitly set by the user",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "description": "Internal storage for property values",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalPlaceholder",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalAriaLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "hostedInputController",
              "type": {
                "text": "HostedInputController<HostedInputHost>"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Hosted input controller",
              "default": "{}",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTranslatedValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "TranslationConfig | string | undefined"
                  }
                }
              ],
              "description": "Gets a translated or static string value from the translation config",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "attribute": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "attribute": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "attribute": "aria-label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "childUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Initialize the controller after the component has been constructed\nand the config is available",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleWrapperClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handler for wrapper-click event from InputWrapper component\nThis is still needed for hosted iframe inputs",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getError",
              "description": "Get the error code from the hosted input controller when the input is submitted or touched\n\nCan be used instead of the error returned by the `validate()` method since internally `primer-sdk-web`\nuses the same logic to compute the error code",
              "return": {
                "type": {
                  "text": "string|null"
                }
              },
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ],
          "superclass": {
            "name": "AbstractCardInputComponent",
            "package": "@components/containers/card-form/components/abstract-card-input-component"
          },
          "tagName": "primer-input-card-number",
          "customElement": true,
          "attributes": [
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "fieldName": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "fieldName": "ariaLabel",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCardNumberComponent",
          "declaration": {
            "name": "InputCardNumberComponent",
            "module": "src/containers/card-form/components/input-card-number/input-card-number.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-card-number",
          "declaration": {
            "name": "InputCardNumberComponent",
            "module": "src/containers/card-form/components/input-card-number/input-card-number.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-number/input-card-number.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/input-card-number/input-card-number.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-card-number/input-card-number.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormCardNumber",
          "declaration": {
            "name": "InputCardNumberComponent",
            "module": "src/containers/card-form/components/input-card-number/input-card-number.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-cvv/input-cvv.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "InputCvvComponent",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "InputComponentConfig"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Configuration for this input component",
              "default": "{ inputType: 'cvv', containerSelector: '#cvv', errorName: 'cvv-card', translations: { label: 'CVV', placeholder: '123', }, }",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "cardFormContext",
              "type": {
                "text": "CardFormContext | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "protected",
              "readonly": true,
              "default": "new Set<string>()",
              "description": "Tracks which properties were explicitly set by the user",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "description": "Internal storage for property values",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalPlaceholder",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "_internalAriaLabel",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "hostedInputController",
              "type": {
                "text": "HostedInputController<HostedInputHost>"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "Hosted input controller",
              "default": "{}",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getTranslatedValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "TranslationConfig | string | undefined"
                  }
                }
              ],
              "description": "Gets a translated or static string value from the translation config",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "attribute": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "attribute": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "attribute": "aria-label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "childUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Initialize the controller after the component has been constructed\nand the config is available",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleWrapperClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handler for wrapper-click event from InputWrapper component\nThis is still needed for hosted iframe inputs",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "getError",
              "description": "Get the error code from the hosted input controller when the input is submitted or touched\n\nCan be used instead of the error returned by the `validate()` method since internally `primer-sdk-web`\nuses the same logic to compute the error code",
              "return": {
                "type": {
                  "text": "string|null"
                }
              },
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "protected",
              "description": "Common rendering logic for all card input components",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ],
          "superclass": {
            "name": "AbstractCardInputComponent",
            "package": "@components/containers/card-form/components/abstract-card-input-component"
          },
          "tagName": "primer-input-cvv",
          "customElement": true,
          "attributes": [
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The input label text.\nFalls back to localized default if not explicitly set.",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "description": "The input placeholder text.\nFalls back to localized default if not explicitly set.\nWhen explicitly set to empty string, no placeholder will be displayed.",
              "fieldName": "placeholder",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            },
            {
              "name": "aria-label",
              "type": {
                "text": "string"
              },
              "description": "The input aria-label attribute.\nFalls back to localized default if not explicitly set.",
              "fieldName": "ariaLabel",
              "inheritedFrom": {
                "name": "AbstractCardInputComponent",
                "module": "src/containers/card-form/components/abstract-card-input-component.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "InputCvvComponent",
          "declaration": {
            "name": "InputCvvComponent",
            "module": "src/containers/card-form/components/input-cvv/input-cvv.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-input-cvv",
          "declaration": {
            "name": "InputCvvComponent",
            "module": "src/containers/card-form/components/input-cvv/input-cvv.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-cvv/input-cvv.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/card-form/components/input-cvv/input-cvv.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/card-form/components/input-cvv/input-cvv.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "CardFormCVV",
          "declaration": {
            "name": "InputCvvComponent",
            "module": "src/containers/card-form/components/input-cvv/input-cvv.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "CVV Input component for vault payment methods\nRenders a secure iframe for CVV input when required by the selected payment method\nUses dedicated CVV context to minimize re-renders",
          "name": "VaultCvvInputComponent",
          "members": [
            {
              "kind": "field",
              "name": "vaultManagerFormContext",
              "type": {
                "text": "VaultManagerContext"
              },
              "default": "null",
              "description": "Form context for checking form dirty state"
            },
            {
              "kind": "field",
              "name": "vaultManagerCvvContext",
              "type": {
                "text": "VaultItemContext"
              },
              "default": "null",
              "description": "CVV-specific context for dedicated CVV handling\nSeparated to minimize re-renders on frequent CVV input changes"
            },
            {
              "kind": "field",
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "attribute": "computedStyles"
            },
            {
              "kind": "field",
              "name": "paymentMethod",
              "type": {
                "text": "PaymentCardVaultedMethod | null"
              },
              "default": "null",
              "attribute": "paymentMethod"
            },
            {
              "kind": "field",
              "name": "cvvError",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "cvvInputIsDirty",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "cvvInputIsBlurred",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "cvvInput",
              "type": {
                "text": "CvvInput | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "cvvContainerId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "readonly": true,
              "description": "Unique ID for the CVV input container",
              "default": "`cvv-container-${Math.random().toString(36).substring(2, 9)}`"
            },
            {
              "kind": "field",
              "name": "_setupCVVIframe",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethod, cvvContext]) => { if ( !paymentMethod || !cvvContext || paymentMethod.paymentMethodType !== 'PAYMENT_CARD' || !paymentMethod.paymentInstrumentData?.network || cvvContext.createCvvInput === null ) { return initialState; } return { network: paymentMethod.paymentInstrumentData.network, createCvvInput: cvvContext.createCvvInput, }; }, args: () => [this.paymentMethod, this.vaultManagerFormContext], })"
            },
            {
              "kind": "method",
              "name": "onCvvInputChange",
              "description": "Update CVV metadata in the context when input changes"
            },
            {
              "kind": "method",
              "name": "onBlur"
            }
          ],
          "attributes": [
            {
              "name": "computedStyles",
              "type": {
                "text": "CSSStyleDeclaration | null"
              },
              "default": "null",
              "fieldName": "computedStyles"
            },
            {
              "name": "paymentMethod",
              "type": {
                "text": "PaymentCardVaultedMethod | null"
              },
              "default": "null",
              "fieldName": "paymentMethod"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-cvv-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultCvvInputComponent",
          "declaration": {
            "name": "VaultCvvInputComponent",
            "module": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-cvv-input",
          "declaration": {
            "name": "VaultCvvInputComponent",
            "module": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultCvvInput",
          "declaration": {
            "name": "VaultCvvInputComponent",
            "module": "src/containers/vault-manager/components/vault-cvv-input/vault-cvv-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "VaultDeleteConfirmationComponent - displays confirmation UI for deleting a payment method",
          "name": "VaultDeleteConfirmationComponent",
          "members": [
            {
              "kind": "field",
              "name": "addEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              },
              "description": "Strongly typed event declarations"
            },
            {
              "kind": "field",
              "name": "removeEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              }
            },
            {
              "kind": "field",
              "name": "isDeleting",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether a delete operation is in progress",
              "attribute": "isDeleting"
            },
            {
              "kind": "field",
              "name": "paymentMethodId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The ID of the payment method being deleted",
              "attribute": "paymentMethodId"
            },
            {
              "kind": "field",
              "name": "paymentMethodName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Payment method name to display in confirmation",
              "attribute": "paymentMethodName"
            },
            {
              "kind": "field",
              "name": "vaultManager",
              "type": {
                "text": "VaultManagerContext"
              },
              "default": "null",
              "description": "Consume the vault manager context to access payment method info"
            },
            {
              "kind": "method",
              "name": "handleConfirmClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handle confirm click"
            },
            {
              "kind": "method",
              "name": "handleCancelClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handle cancel click"
            }
          ],
          "events": [
            {
              "name": "confirm-delete",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "cancel-delete",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "isDeleting",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether a delete operation is in progress",
              "fieldName": "isDeleting"
            },
            {
              "name": "paymentMethodId",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The ID of the payment method being deleted",
              "fieldName": "paymentMethodId"
            },
            {
              "name": "paymentMethodName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Payment method name to display in confirmation",
              "fieldName": "paymentMethodName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-delete-confirmation",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultDeleteConfirmationComponent",
          "declaration": {
            "name": "VaultDeleteConfirmationComponent",
            "module": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-delete-confirmation",
          "declaration": {
            "name": "VaultDeleteConfirmationComponent",
            "module": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultDeleteConfirmation",
          "declaration": {
            "name": "VaultDeleteConfirmationComponent",
            "module": "src/containers/vault-manager/components/vault-delete-confirmation/vault-delete-confirmation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "VaultEmptyStateComponent - displays when no payment methods are available",
          "name": "VaultEmptyStateComponent",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-empty-state",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultEmptyStateComponent",
          "declaration": {
            "name": "VaultEmptyStateComponent",
            "module": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-empty-state",
          "declaration": {
            "name": "VaultEmptyStateComponent",
            "module": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultEmptyState",
          "declaration": {
            "name": "VaultEmptyStateComponent",
            "module": "src/containers/vault-manager/components/vault-empty-state/vault-empty-state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-error-message/vault-error-message.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "VaultErrorMessageComponent - displays error messages with improved visuals",
          "name": "VaultErrorMessageComponent",
          "members": [
            {
              "kind": "field",
              "name": "addEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              },
              "description": "Strongly typed event declarations"
            },
            {
              "kind": "field",
              "name": "removeEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              }
            },
            {
              "kind": "field",
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The error message to display",
              "attribute": "errorMessage"
            },
            {
              "kind": "method",
              "name": "handleDismiss",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handle dismiss click"
            }
          ],
          "events": [
            {
              "name": "close-error",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "errorMessage",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "The error message to display",
              "fieldName": "errorMessage"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-error-message",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultErrorMessageComponent",
          "declaration": {
            "name": "VaultErrorMessageComponent",
            "module": "src/containers/vault-manager/components/vault-error-message/vault-error-message.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-error-message",
          "declaration": {
            "name": "VaultErrorMessageComponent",
            "module": "src/containers/vault-manager/components/vault-error-message/vault-error-message.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-error-message/vault-error-message.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-error-message/vault-error-message.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-error-message/vault-error-message.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultErrorMessage",
          "declaration": {
            "name": "VaultErrorMessageComponent",
            "module": "src/containers/vault-manager/components/vault-error-message/vault-error-message.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "VaultManagerHeaderComponent - displays the header for the vault manager",
          "name": "VaultManagerHeaderComponent",
          "members": [
            {
              "kind": "field",
              "name": "addEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              },
              "description": "Strongly typed event declarations"
            },
            {
              "kind": "field",
              "name": "removeEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              }
            },
            {
              "kind": "field",
              "name": "isEditMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether we're in edit mode",
              "attribute": "isEditMode"
            },
            {
              "kind": "field",
              "name": "hasPaymentMethods",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether we have payment methods to edit",
              "attribute": "hasPaymentMethods"
            },
            {
              "kind": "method",
              "name": "toggleEditMode",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Toggle edit mode"
            }
          ],
          "events": [
            {
              "name": "toggle-edit-mode",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "isEditMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether we're in edit mode",
              "fieldName": "isEditMode"
            },
            {
              "name": "hasPaymentMethods",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether we have payment methods to edit",
              "fieldName": "hasPaymentMethods"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-manager-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultManagerHeaderComponent",
          "declaration": {
            "name": "VaultManagerHeaderComponent",
            "module": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-manager-header",
          "declaration": {
            "name": "VaultManagerHeaderComponent",
            "module": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultManagerHeader",
          "declaration": {
            "name": "VaultManagerHeaderComponent",
            "module": "src/containers/vault-manager/components/vault-manager-header/vault-manager-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "VaultPaymentMethodItemComponent - displays a single payment method\nUses the VaultManagerController for display formatting\nNow supports selection via the simplified button checked state\nEnhanced with smooth transitions between edit and payment modes\nAlways renders the primer-button for consistent UI and improved accessibility",
          "name": "VaultPaymentMethodItemComponent",
          "members": [
            {
              "kind": "field",
              "name": "addEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              },
              "description": "Strongly typed event declarations"
            },
            {
              "kind": "field",
              "name": "removeEventListener",
              "type": {
                "text": "<K extends keyof VaultManagerEventMap>(\n    type: K,\n    listener: (ev: VaultManagerEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions,\n  ) => void"
              }
            },
            {
              "kind": "field",
              "name": "vaultManagerContext",
              "type": {
                "text": "VaultManagerContext"
              },
              "default": "null",
              "description": "Consume the vault manager context"
            },
            {
              "kind": "field",
              "name": "vaultItemContext",
              "type": {
                "text": "VaultItemContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "attribute": "headlessUtils"
            },
            {
              "kind": "field",
              "name": "paymentMethod",
              "type": {
                "text": "VaultedPaymentMethod | null"
              },
              "default": "null",
              "description": "The payment method to display"
            },
            {
              "kind": "field",
              "name": "isEditMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the component is in edit mode",
              "attribute": "isEditMode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_getAssetsTask",
              "privacy": "private",
              "default": "new Task(this, { task: async ([paymentMethod, headlessUtils, vaultManager]) => { if (!paymentMethod || !headlessUtils || !vaultManager) { return initialState; } let icon = ''; if (isPaymentCardMethod(paymentMethod)) { icon = headlessUtils.getCardNetworkAsset( paymentMethod.paymentInstrumentData.network, ).cardUrl; } else { const assetsConfig = await headlessUtils.getCDNAssets( paymentMethod.paymentMethodType, ); if (assetsConfig) { icon = assetsConfig.assets?.icon ? `${assetsConfig.goatCdnUrl}/${assetsConfig.assets.icon}` : ''; } } const shouldShowCVV = vaultManager.cvvRecapture; const displayData = getPaymentMethodDisplay(paymentMethod); return { icon, shouldShowCVV, ...displayData, }; }, args: () => [ this.paymentMethod, this.headlessUtils, this.vaultManagerContext, ], })"
            },
            {
              "kind": "method",
              "name": "isSelected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "description": "Check if this payment method is currently selected in the context"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Handle when the button is clicked\nThis is used to select the payment method and deselect others"
            },
            {
              "kind": "method",
              "name": "handleDeleteClick",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "Dispatch delete event"
            },
            {
              "kind": "method",
              "name": "renderPaymentMethodContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "unknown"
                }
              },
              "parameters": [
                {
                  "name": "assetConfig",
                  "type": {
                    "text": "AssetConfig"
                  }
                }
              ],
              "description": "Builds the common content template shared between modes"
            }
          ],
          "events": [
            {
              "name": "delete-payment-method",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "headlessUtils",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "fieldName": "headlessUtils"
            },
            {
              "name": "isEditMode",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the component is in edit mode",
              "fieldName": "isEditMode"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-payment-method-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultPaymentMethodItemComponent",
          "declaration": {
            "name": "VaultPaymentMethodItemComponent",
            "module": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-payment-method-item",
          "declaration": {
            "name": "VaultPaymentMethodItemComponent",
            "module": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultPaymentMethodItem",
          "declaration": {
            "name": "VaultPaymentMethodItemComponent",
            "module": "src/containers/vault-manager/components/vault-payment-method-item/vault-payment-method-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A submit button component for vault payment flows.\nProvides a consistent submit button with translation support.\nIntegrates with the vault manager context to handle payment submission.",
          "name": "VaultPaymentSubmitComponent",
          "members": [
            {
              "kind": "field",
              "name": "_userAssignedProps",
              "privacy": "private",
              "readonly": true,
              "default": "new Set<string>()"
            },
            {
              "kind": "field",
              "name": "_internalButtonText",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "buttonText",
              "type": {
                "text": "string"
              },
              "description": "The button text to display.\nFalls back to localized default if not explicitly set.",
              "attribute": "buttonText"
            },
            {
              "kind": "field",
              "name": "headlessInstance",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "attribute": "headlessInstance"
            },
            {
              "kind": "field",
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "attribute": "sdkState"
            },
            {
              "kind": "field",
              "name": "vaultItemContext",
              "type": {
                "text": "VaultItemContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "vaultManager",
              "type": {
                "text": "VaultManagerContext"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "clientOptions",
              "type": {
                "text": "PrimerCheckoutOptions | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "The button variant to use.",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the button is disabled.\nThis property allows external disabling of the button\nregardless of the context state.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "handleClick",
              "privacy": "private",
              "description": "Handle button click event.\nPrevents default form submission and triggers the vault payment flow."
            },
            {
              "kind": "field",
              "name": "isButtonDisabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "description": "Computed property to determine if the button should be disabled",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "buttonText",
              "type": {
                "text": "string"
              },
              "description": "The button text to display.\nFalls back to localized default if not explicitly set.",
              "fieldName": "buttonText"
            },
            {
              "name": "headlessInstance",
              "type": {
                "text": "HeadlessUnitilsContext"
              },
              "default": "null",
              "fieldName": "headlessInstance"
            },
            {
              "name": "sdkState",
              "type": {
                "text": "SdkStateContext"
              },
              "default": "null",
              "fieldName": "sdkState"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "default": "'primary'",
              "description": "The button variant to use.",
              "fieldName": "variant"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the button is disabled.\nThis property allows external disabling of the button\nregardless of the context state.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "primer-vault-payment-submit",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VaultPaymentSubmitComponent",
          "declaration": {
            "name": "VaultPaymentSubmitComponent",
            "module": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "primer-vault-payment-submit",
          "declaration": {
            "name": "VaultPaymentSubmitComponent",
            "module": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.styles.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "VaultPaymentSubmit",
          "declaration": {
            "name": "VaultPaymentSubmitComponent",
            "module": "src/containers/vault-manager/components/vault-payment-submit/vault-payment-submit.ts"
          }
        }
      ]
    }
  ]
}
